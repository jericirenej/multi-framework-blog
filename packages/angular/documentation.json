{
    "pipes": [
        {
            "name": "IsAuthorPipe",
            "id": "pipe-IsAuthorPipe-85c34fabdbdaae9ff4b05dd344c114315e0c81d8ccfeffdfeef49c025fc10b017b3839cbc13560d27819f1447ea0932047008e15b1ad40ab84da7132b8829ebd",
            "file": "src/app/pipes/is-author.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [
                {
                    "name": "me$",
                    "defaultValue": "toObservable(inject(AuthenticationService).me)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Blog",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "Blog"
                    ],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Blog",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "isAuthor",
            "sourceCode": "import { inject, Pipe, type PipeTransform } from \"@angular/core\";\nimport { toObservable } from \"@angular/core/rxjs-interop\";\nimport { map } from \"rxjs\";\nimport { AuthenticationService } from \"../services/is-authenticated.service\";\n\n@Pipe({ name: \"isAuthor\" })\nexport class IsAuthorPipe implements PipeTransform {\n  protected readonly me$ = toObservable(inject(AuthenticationService).me);\n  transform<Blog extends { author_id: string }>(value: Blog) {\n    return this.me$.pipe(map((me) => value.author_id === me?.id));\n  }\n}\n"
        },
        {
            "name": "ParseErrorPipe",
            "id": "pipe-ParseErrorPipe-9cc6e4cfe7ed31badd3a01d1a7abb121b591b8b0440e28eeb3dd350cf39cb121e8923f8e19219a1f7bc999c64d362b6e7e655c90472ba5c6174434e847243ca8",
            "file": "src/app/pipes/parse-error.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "parseError",
            "sourceCode": "import { Pipe, type PipeTransform } from \"@angular/core\";\nimport type { AbstractControl } from \"@angular/forms\";\nimport { distinctUntilChanged, map } from \"rxjs\";\nimport { parseErrors } from \"../helpers/form-error-parser\";\n\n@Pipe({ name: \"parseError\" })\nexport class ParseErrorPipe implements PipeTransform {\n  transform(control: AbstractControl) {\n    return control.events.pipe(\n      map(() => (control.pristine ? undefined : parseErrors(control.errors))),\n      distinctUntilChanged(),\n    );\n  }\n}\n"
        }
    ],
    "interfaces": [],
    "injectables": [
        {
            "name": "AbstractBlogFormService",
            "id": "injectable-AbstractBlogFormService-5f9f821367f0c8f96a5cf250ecf19c75648cdecd533dd7fd58aad7646150a29d1309f66b8d8621f69b1408d6f136dd3cc8e17967cc70718a4f402b8190aa03b7",
            "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
            "properties": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "defaultErrorMessage",
                    "defaultValue": "\"Updating blog failed\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "_form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formWatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initialFormValue",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "signal<ResultStatus>({ status: \"unsubmitted\" })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "buildForm",
                    "args": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<BlogValues>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        128,
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "callSubmitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { type BlogDto } from \"@/api/schemas\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { Validators, type FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { delay, map, of, type Observable } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { AbstractFormService } from \"../../../services/form.service\";\n\nfunction buildForm(\n  fb: FormBuilder,\n  value: Partial<Pick<BlogDto, \"content\" | \"title\">> = {\n    content: \"\",\n    title: \"\",\n  },\n) {\n  return fb.group({\n    title: fb.control(value.title, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(3)],\n    }),\n    content: fb.control(value.content, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(5)],\n    }),\n  });\n}\nexport type BlogForm = ReturnType<typeof buildForm>;\nexport type BlogValues = ReturnType<BlogForm[\"getRawValue\"]>;\n\n@Injectable()\nexport abstract class AbstractBlogFormService extends AbstractFormService<BlogForm> {\n  protected apiService = inject(ApiService);\n  override defaultErrorMessage = \"Updating blog failed\";\n  buildForm(initialValues: BlogValues) {\n    return buildForm(this.fb, initialValues);\n  }\n  protected abstract override submitHandler(): Observable<BlogValues>;\n\n  get title() {\n    return this.form.controls.title;\n  }\n  get content() {\n    return this.form.controls.content;\n  }\n}\n\n@Injectable()\nexport class EditBlogFormService extends AbstractBlogFormService {\n  protected activatedRoute = inject(ActivatedRoute);\n  protected submitHandler() {\n    return this.apiService.updateBlog(\n      this.form.getRawValue(),\n      this.activatedRoute.snapshot.paramMap.get(\"blogId\"),\n    );\n  }\n}\n\n@Injectable()\nexport class CreateBlogFormService extends AbstractBlogFormService {\n  protected override submitHandler(): Observable<BlogValues> {\n    return this.apiService.createBlog(this.form.getRawValue());\n  }\n}\n\nexport const mockApiService = (shouldSucceed = true, updatedBlog: BlogDto) => {\n  const handler = () =>\n    of([]).pipe(\n      delay(1000),\n      map(() => {\n        if (shouldSucceed) return updatedBlog;\n        throw new Error(\"Something went wrong\");\n      }),\n    );\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateBlog(..._parameters: Parameters<ApiService[\"updateBlog\"]>) {\n      return handler();\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    createBlog(..._parameters: Parameters<ApiService[\"createBlog\"]>) {\n      return handler();\n    },\n  };\n};\n",
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                },
                "content": {
                    "name": "content",
                    "getSignature": {
                        "name": "content",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "extends": [
                "AbstractFormService"
            ],
            "type": "injectable"
        },
        {
            "name": "AbstractFormService",
            "id": "injectable-AbstractFormService-c9264e51d028636b98919fc8782f0062bf1948cbe3b85e73d842aee36e9e1ad0b9321bfc3a783ca8262757e55a8e4e223b34c76f94e9ed754ec8191a8cd25d56",
            "file": "src/app/services/form.service.ts",
            "properties": [
                {
                    "name": "_form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "defaultErrorMessage",
                    "defaultValue": "\"Submission failed\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "formWatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "initialFormValue",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "signal<ResultStatus>({ status: \"unsubmitted\" })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "buildForm",
                    "args": [
                        {
                            "name": "initialValues",
                            "type": "ReturnType<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "FormType",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        128
                    ],
                    "jsdoctags": [
                        {
                            "name": "initialValues",
                            "type": "ReturnType<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "callSubmitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        128
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from \"@angular/common/http\";\nimport { DestroyRef, inject, Injectable, signal } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FormBuilder, type FormGroup } from \"@angular/forms\";\nimport {\n  catchError,\n  distinctUntilChanged,\n  filter,\n  finalize,\n  from,\n  of,\n  switchMap,\n  take,\n  tap,\n  type Observable,\n  type Subscription,\n} from \"rxjs\";\nimport { FormRegisterService } from \"./form-register.service\";\n\nexport type ResultStatus =\n  | { status: \"unsubmitted\" | \"submitting\" }\n  | { status: \"error\"; message: string }\n  | { status: \"success\"; value: unknown };\n\n@Injectable()\nexport abstract class AbstractFormService<FormType extends FormGroup> {\n  protected readonly formRegisterService = inject(FormRegisterService);\n  protected _form: ReturnType<typeof this.buildForm> | null = null;\n  protected readonly fb = inject(FormBuilder);\n  readonly resultStatus = signal<ResultStatus>({ status: \"unsubmitted\" });\n  formWatcher: Subscription | undefined;\n  protected destroyRef = inject(DestroyRef);\n\n  defaultErrorMessage: string = \"Submission failed\";\n  initialFormValue: ReturnType<FormType[\"getRawValue\"]> | undefined = undefined;\n\n  abstract buildForm(\n    initialValues?: ReturnType<FormType[\"getRawValue\"]>,\n  ): FormType;\n\n  get form() {\n    if (this._form !== null) return this._form;\n    return this.initializeForm();\n  }\n\n  protected initializeForm() {\n    this._form = this.buildForm(this.initialFormValue);\n    this.formWatcher?.unsubscribe();\n    this.formWatcher = this.form.valueChanges\n      .pipe(\n        distinctUntilChanged(\n          (prev, curr) => JSON.stringify(prev) === JSON.stringify(curr),\n        ),\n        filter(() => this.resultStatus().status !== \"unsubmitted\"),\n        tap(() => {\n          this.resultStatus.set({ status: \"unsubmitted\" });\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe();\n    return this._form;\n  }\n\n  protected abstract submitHandler(): Observable<unknown>;\n\n  protected callSubmitHandler() {\n    return of(null)\n      .pipe(\n        tap(() => {\n          this.form.disable();\n          this.resultStatus.set({ status: \"submitting\" });\n        }),\n        switchMap(() =>\n          this.submitHandler().pipe(\n            switchMap((result) => {\n              if (result instanceof Response && !result.ok) {\n                return from(result.text()).pipe(\n                  tap((errMessage) => {\n                    throw new Error(errMessage);\n                  }),\n                );\n              }\n              return of(result);\n            }),\n            tap((value) => {\n              this.resultStatus.set({ status: \"success\", value });\n              this.initialFormValue =\n                this.form.getRawValue() as typeof this.initialFormValue;\n              this.form.markAsPristine();\n            }),\n            catchError((err) => {\n              this.resultStatus.set({\n                status: \"error\",\n                message: this.handleError(err),\n              });\n              throw err;\n            }),\n            finalize(() => {\n              this.form.enable();\n            }),\n            take(1),\n          ),\n        ),\n      )\n      .subscribe();\n  }\n  protected handleError(err: unknown): string {\n    return err instanceof HttpErrorResponse\n      ? typeof err.error === \"string\"\n        ? err.error\n        : err.message\n      : err instanceof Error\n        ? err.message\n        : this.defaultErrorMessage;\n  }\n\n  submit() {\n    const ref = this.formRegisterService.ref;\n    if (!ref) {\n      console.warn(\"Form ref should to be registered\");\n    }\n    this.form.markAllAsDirty();\n    if (this.form.invalid) {\n      const el = ref?.nativeElement.querySelector<HTMLElement>(\".ng-invalid\");\n      el?.focus();\n      return;\n    }\n    this.callSubmitHandler();\n  }\n}\n",
            "accessors": {
                "form": {
                    "name": "form",
                    "getSignature": {
                        "name": "form",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ApiService",
            "id": "injectable-ApiService-4fb111f68bbff5c46b29a00ddab07f1b65b0abb9e59f4b41d26ba1b6f4dadbd58b858f790d26e136b907213ab9b7d4fcfe23d733a543629583d1bdf741603706",
            "file": "src/app/services/api.service.ts",
            "properties": [
                {
                    "name": "FETCH_LIMIT",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methods": [
                {
                    "name": "authenticated",
                    "args": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createBlog",
                    "args": [
                        {
                            "name": "data",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteBlog",
                    "args": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAuthHeaders",
                    "args": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBlog",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBlogs",
                    "args": [
                        {
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBlogsIds",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserBlogs",
                    "args": [
                        {
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "me",
                    "args": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserWithExpirationDto>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "authHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toFormData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateBlog",
                    "args": [
                        {
                            "name": "data",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "blogId",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BlogDto>",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "blogId",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { JWT_COOKIE } from \"@/api/constants\";\nimport {\n  authenticatedDtoSchema,\n  userWithExpirationDtoSchema,\n  type UserWithExpirationDto,\n} from \"@/api/schemas\";\nimport {\n  blogDtoSchema,\n  blogIdDtoSchema,\n  blogSummaryDtoSchema,\n  createBlogSchema,\n  updateBlogSchema,\n  type BlogDto,\n  type BlogSummaryDto,\n} from \"@/api/schemas/blog\";\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpParams,\n} from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { catchError, map, switchMap, type Observable } from \"rxjs\";\nimport type { BlogValues } from \"../components/Organisms/BlogForm/blog-form.service\";\nimport { resultValidator } from \"../helpers/result-validator\";\n\nexport type WindowedRequest = Partial<Record<\"limit\" | \"offset\", number>>;\n\nexport const getJWT = (req: Request | null) => {\n  return req?.headers\n    .get(\"cookie\")\n    ?.split(\";\")\n    .find((c) => c.includes(JWT_COOKIE))\n    ?.split(\"=\")[1];\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class ApiService {\n  readonly FETCH_LIMIT = 20;\n  protected httpClient = inject(HttpClient);\n  protected router = inject(Router);\n\n  authenticated(authHeader?: string) {\n    return this.httpClient\n      .get(\"/api/auth/authenticated\", {\n        headers: this.getAuthHeaders(authHeader),\n      })\n      .pipe(map((result) => authenticatedDtoSchema.parse(result)));\n  }\n  me(authHeader?: string): Observable<UserWithExpirationDto> {\n    return this.httpClient\n      .get(\"/api/auth/me\", { headers: this.getAuthHeaders(authHeader) })\n      .pipe(map((data) => userWithExpirationDtoSchema.parse(data)));\n  }\n\n  login(credentials: { username: string; password: string }) {\n    return this.httpClient.post(\"/api/auth/login\", credentials, {\n      responseType: \"text\",\n    });\n  }\n  logout() {\n    return this.httpClient\n      .delete(\"/api/auth/logout\", { responseType: \"text\" })\n      .pipe(\n        switchMap(() => {\n          return this.router.navigate([\"/\"]);\n        }),\n      );\n  }\n\n  getBlogs({ limit = this.FETCH_LIMIT, offset = 0 }: WindowedRequest) {\n    return resultValidator(\n      this.httpClient.get<BlogSummaryDto[]>(\"/api/blog/all\", {\n        params: new HttpParams({ fromObject: { limit, offset } }),\n      }),\n      blogSummaryDtoSchema,\n    );\n  }\n\n  getUserBlogs({\n    user,\n    limit = this.FETCH_LIMIT,\n    offset = 0,\n  }: WindowedRequest & { user: string }) {\n    return resultValidator(\n      this.httpClient.get<BlogSummaryDto[]>(`/api/blog/author/${user}`, {\n        params: new HttpParams({ fromObject: { limit, offset } }),\n      }),\n      blogSummaryDtoSchema,\n    );\n  }\n\n  getBlogsIds() {\n    return this.httpClient\n      .get(\"/api/blog/all/ids\")\n      .pipe(\n        map((result) =>\n          [result].flat().map((val) => blogIdDtoSchema.parse(val)),\n        ),\n      );\n  }\n  getBlog(id: string) {\n    return this.httpClient.get(`/api/blog/id/${id}`).pipe(\n      map((result) => blogDtoSchema.parse(result)),\n      catchError((err) => {\n        if (err instanceof HttpErrorResponse && err.status === 404) {\n          void this.router.navigateByUrl(\"/\");\n        }\n        throw err;\n      }),\n    );\n  }\n  createBlog(data: BlogValues) {\n    return this.httpClient\n      .post(\n        \"/api/blog\",\n        this.toFormData(createBlogSchema.parse({ ...data, image: null })),\n      )\n      .pipe(map((result) => blogDtoSchema.parse(result)));\n  }\n  updateBlog(data: BlogValues, blogId: string | null): Observable<BlogDto> {\n    if (!blogId) {\n      throw new Error(\"Blog can only be updated from its edit page\");\n    }\n    return this.httpClient\n      .patch(\n        `/api/blog/${blogId}`,\n        this.toFormData(updateBlogSchema.parse(data)),\n      )\n      .pipe(map((result) => blogDtoSchema.parse(result)));\n  }\n\n  deleteBlog(postId: string) {\n    return this.httpClient.delete(`/api/blog/${postId}`);\n  }\n\n  // We need to set authentication headers manually when calls are\n  // made indirectly within guards or resolvers on the server side\n  protected getAuthHeaders(authHeader?: string) {\n    let headers = new HttpHeaders();\n    if (authHeader) {\n      headers = headers.set(\"Authorization\", `Bearer ${authHeader}`);\n    }\n    return headers;\n  }\n\n  protected toFormData<Data extends Record<string, unknown>>(data: Data) {\n    const formData = new FormData();\n    Object.entries(data).forEach(([key, value]) => {\n      const isBlob = value instanceof Blob;\n      if (typeof value !== \"string\" && !isBlob) {\n        return;\n      }\n      formData.set(key, value);\n    });\n    return formData;\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-570504ddbac7cd04ec001316d828f7aba2f24873976484e6e57b9634e5dde3cabc55115d5696d2764202330cf16e18a5ea752563355fd75a39e9d6cb5de96ea2",
            "file": "src/app/services/is-authenticated.service.ts",
            "properties": [
                {
                    "name": "_me",
                    "defaultValue": "signal<UserWithExpirationDto | null>(\n    inject(TransferState).get(ME_DATA_KEY, null),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "request",
                    "defaultValue": "inject(REQUEST)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "authenticated",
                    "defaultValue": "computed(() => !!this.me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "me",
                    "defaultValue": "computed(() => this._me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                }
            ],
            "methods": [
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<UserWithExpirationDto | null>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n- If user data is available and session expiration is more than one minute,\nreturns the user data.\n- If session will expire in less than one minute, logs out and returns null.\n- Otherwise, performs authentication check. If user is authenticated, API is queried\nfor user data which is set in service and returned. If user is not authenticated,\nreturns and sets null",
                    "description": "<ul>\n<li>If user data is available and session expiration is more than one minute,\nreturns the user data.</li>\n<li>If session will expire in less than one minute, logs out and returns null.</li>\n<li>Otherwise, performs authentication check. If user is authenticated, API is queried\nfor user data which is set in service and returned. If user is not authenticated,\nreturns and sets null</li>\n</ul>\n",
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>To be used within guards and other services involved in verifying the user&#39;s authorization status.\nShould not be consumed by components.</p>\n",
            "rawdescription": "\nTo be used within guards and other services involved in verifying the user's authorization status.\nShould not be consumed by components.",
            "sourceCode": "import type { UserWithExpirationDto } from \"@/api/schemas\";\nimport {\n  computed,\n  inject,\n  Injectable,\n  REQUEST,\n  signal,\n  TransferState,\n  type Signal,\n} from \"@angular/core\";\nimport { differenceInSeconds } from \"date-fns\";\nimport {\n  lastValueFrom,\n  map,\n  of,\n  switchMap,\n  take,\n  tap,\n  type Observable,\n} from \"rxjs\";\nimport { ME_DATA_KEY } from \"../guards/transfer-state.keys\";\nimport { ApiService, getJWT } from \"./api.service\";\n\nabstract class AuthenticationServiceToken {\n  protected abstract _me: Signal<UserWithExpirationDto | null>;\n  readonly me = computed(() => this._me());\n\n  readonly authenticated = computed(() => !!this.me());\n\n  abstract check(): Promise<UserWithExpirationDto | null>;\n  abstract logout(): Observable<boolean>;\n}\n\n/** To be used within guards and other services involved in verifying the user's authorization status.\n * Should not be consumed by components. */\n@Injectable({ providedIn: \"root\" })\nexport class AuthenticationService extends AuthenticationServiceToken {\n  protected readonly apiService = inject(ApiService);\n  protected readonly request = inject(REQUEST);\n\n  protected _me = signal<UserWithExpirationDto | null>(\n    inject(TransferState).get(ME_DATA_KEY, null),\n  );\n\n  /** - If user data is available and session expiration is more than one minute,\n   * returns the user data.\n   * - If session will expire in less than one minute, logs out and returns null.\n   * - Otherwise, performs authentication check. If user is authenticated, API is queried\n   * for user data which is set in service and returned. If user is not authenticated,\n   * returns and sets null */\n  check(): Promise<UserWithExpirationDto | null> {\n    return lastValueFrom(\n      of(this.me()).pipe(\n        switchMap((me) => {\n          if (!me) {\n            return this.apiService.authenticated(getJWT(this.request)).pipe(\n              switchMap(({ authenticated }) => {\n                if (authenticated && this.me() === null) {\n                  return this.apiService.me(getJWT(this.request));\n                }\n                return of(null);\n              }),\n            );\n          }\n          if (differenceInSeconds(me.exp * 1000, Date.now()) < 60) {\n            return this.apiService.logout().pipe(map(() => null));\n          }\n          return of(me);\n        }),\n        tap((me) => {\n          if (JSON.stringify(me) !== JSON.stringify(this.me())) {\n            this._me.set(me);\n          }\n        }),\n        take(1),\n      ),\n    );\n  }\n  logout() {\n    return this.apiService.logout().pipe(\n      tap(() => {\n        this._me.set(null);\n      }),\n    );\n  }\n}\n\nexport class MockAuthenticationService extends AuthenticationServiceToken {\n  protected _me = signal<UserWithExpirationDto | null>(null);\n  setMe(val: UserWithExpirationDto | null) {\n    this._me.set(val);\n  }\n\n  check(): Promise<UserWithExpirationDto | null> {\n    return Promise.resolve(this._me());\n  }\n\n  logout(): Observable<boolean> {\n    this.setMe(null);\n    return of(true);\n  }\n}\n",
            "extends": [
                "AuthenticationServiceToken"
            ],
            "type": "injectable"
        },
        {
            "name": "BlogPreviewServiceToken",
            "id": "injectable-BlogPreviewServiceToken-ee698a1b890842cfa6af545faeada685688497a3a7a369fb679939582b871a4aabd1a33d0090e373e6724178cf91aa2874d0f77e3eb0f04b8dbea32c886e52ef",
            "file": "src/app/services/blog-preview.service.ts",
            "properties": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        128
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getBlogs",
                    "args": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        128
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import type { BlogSummaryDto } from \"@/api/schemas\";\nimport { inject, Injectable } from \"@angular/core\";\nimport type { Observable } from \"rxjs\";\nimport { ApiService, type WindowedRequest } from \"./api.service\";\n\n@Injectable()\nexport abstract class BlogPreviewServiceToken {\n  protected apiService = inject(ApiService);\n  abstract pageTitle: string;\n  abstract getBlogs(params: WindowedRequest): Observable<BlogSummaryDto[]>;\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CreateBlogFormService",
            "id": "injectable-CreateBlogFormService-5f9f821367f0c8f96a5cf250ecf19c75648cdecd533dd7fd58aad7646150a29d1309f66b8d8621f69b1408d6f136dd3cc8e17967cc70718a4f402b8190aa03b7",
            "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
            "properties": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractBlogFormService"
                    }
                },
                {
                    "name": "defaultErrorMessage",
                    "defaultValue": "\"Updating blog failed\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "_form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formWatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initialFormValue",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "signal<ResultStatus>({ status: \"unsubmitted\" })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "submitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<BlogValues>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "buildForm",
                    "args": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "callSubmitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { type BlogDto } from \"@/api/schemas\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { Validators, type FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { delay, map, of, type Observable } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { AbstractFormService } from \"../../../services/form.service\";\n\nfunction buildForm(\n  fb: FormBuilder,\n  value: Partial<Pick<BlogDto, \"content\" | \"title\">> = {\n    content: \"\",\n    title: \"\",\n  },\n) {\n  return fb.group({\n    title: fb.control(value.title, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(3)],\n    }),\n    content: fb.control(value.content, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(5)],\n    }),\n  });\n}\nexport type BlogForm = ReturnType<typeof buildForm>;\nexport type BlogValues = ReturnType<BlogForm[\"getRawValue\"]>;\n\n@Injectable()\nexport abstract class AbstractBlogFormService extends AbstractFormService<BlogForm> {\n  protected apiService = inject(ApiService);\n  override defaultErrorMessage = \"Updating blog failed\";\n  buildForm(initialValues: BlogValues) {\n    return buildForm(this.fb, initialValues);\n  }\n  protected abstract override submitHandler(): Observable<BlogValues>;\n\n  get title() {\n    return this.form.controls.title;\n  }\n  get content() {\n    return this.form.controls.content;\n  }\n}\n\n@Injectable()\nexport class EditBlogFormService extends AbstractBlogFormService {\n  protected activatedRoute = inject(ActivatedRoute);\n  protected submitHandler() {\n    return this.apiService.updateBlog(\n      this.form.getRawValue(),\n      this.activatedRoute.snapshot.paramMap.get(\"blogId\"),\n    );\n  }\n}\n\n@Injectable()\nexport class CreateBlogFormService extends AbstractBlogFormService {\n  protected override submitHandler(): Observable<BlogValues> {\n    return this.apiService.createBlog(this.form.getRawValue());\n  }\n}\n\nexport const mockApiService = (shouldSucceed = true, updatedBlog: BlogDto) => {\n  const handler = () =>\n    of([]).pipe(\n      delay(1000),\n      map(() => {\n        if (shouldSucceed) return updatedBlog;\n        throw new Error(\"Something went wrong\");\n      }),\n    );\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateBlog(..._parameters: Parameters<ApiService[\"updateBlog\"]>) {\n      return handler();\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    createBlog(..._parameters: Parameters<ApiService[\"createBlog\"]>) {\n      return handler();\n    },\n  };\n};\n",
            "extends": [
                "AbstractBlogFormService"
            ],
            "type": "injectable"
        },
        {
            "name": "EditBlogFormService",
            "id": "injectable-EditBlogFormService-5f9f821367f0c8f96a5cf250ecf19c75648cdecd533dd7fd58aad7646150a29d1309f66b8d8621f69b1408d6f136dd3cc8e17967cc70718a4f402b8190aa03b7",
            "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
            "properties": [
                {
                    "name": "activatedRoute",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractBlogFormService"
                    }
                },
                {
                    "name": "defaultErrorMessage",
                    "defaultValue": "\"Updating blog failed\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "_form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formWatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initialFormValue",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "signal<ResultStatus>({ status: \"unsubmitted\" })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "submitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "buildForm",
                    "args": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "initialValues",
                            "type": "BlogValues",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "callSubmitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { type BlogDto } from \"@/api/schemas\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { Validators, type FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { delay, map, of, type Observable } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { AbstractFormService } from \"../../../services/form.service\";\n\nfunction buildForm(\n  fb: FormBuilder,\n  value: Partial<Pick<BlogDto, \"content\" | \"title\">> = {\n    content: \"\",\n    title: \"\",\n  },\n) {\n  return fb.group({\n    title: fb.control(value.title, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(3)],\n    }),\n    content: fb.control(value.content, {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(5)],\n    }),\n  });\n}\nexport type BlogForm = ReturnType<typeof buildForm>;\nexport type BlogValues = ReturnType<BlogForm[\"getRawValue\"]>;\n\n@Injectable()\nexport abstract class AbstractBlogFormService extends AbstractFormService<BlogForm> {\n  protected apiService = inject(ApiService);\n  override defaultErrorMessage = \"Updating blog failed\";\n  buildForm(initialValues: BlogValues) {\n    return buildForm(this.fb, initialValues);\n  }\n  protected abstract override submitHandler(): Observable<BlogValues>;\n\n  get title() {\n    return this.form.controls.title;\n  }\n  get content() {\n    return this.form.controls.content;\n  }\n}\n\n@Injectable()\nexport class EditBlogFormService extends AbstractBlogFormService {\n  protected activatedRoute = inject(ActivatedRoute);\n  protected submitHandler() {\n    return this.apiService.updateBlog(\n      this.form.getRawValue(),\n      this.activatedRoute.snapshot.paramMap.get(\"blogId\"),\n    );\n  }\n}\n\n@Injectable()\nexport class CreateBlogFormService extends AbstractBlogFormService {\n  protected override submitHandler(): Observable<BlogValues> {\n    return this.apiService.createBlog(this.form.getRawValue());\n  }\n}\n\nexport const mockApiService = (shouldSucceed = true, updatedBlog: BlogDto) => {\n  const handler = () =>\n    of([]).pipe(\n      delay(1000),\n      map(() => {\n        if (shouldSucceed) return updatedBlog;\n        throw new Error(\"Something went wrong\");\n      }),\n    );\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateBlog(..._parameters: Parameters<ApiService[\"updateBlog\"]>) {\n      return handler();\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    createBlog(..._parameters: Parameters<ApiService[\"createBlog\"]>) {\n      return handler();\n    },\n  };\n};\n",
            "extends": [
                "AbstractBlogFormService"
            ],
            "type": "injectable"
        },
        {
            "name": "FormRegisterService",
            "id": "injectable-FormRegisterService-4e4e64cb886ad5c18b2e24195ea8845457eecfbd4d4fc5ccafac5c0de2db0a326b22fc9b0968feaa2fd013e3f1bec5f1e888a45f676d716b125a0328541c0905",
            "file": "src/app/services/form-register.service.ts",
            "properties": [
                {
                    "name": "_ref",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLFormElement> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { type ElementRef, Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class FormRegisterService {\n  protected _ref: ElementRef<HTMLFormElement> | null = null;\n  set ref(ref: ElementRef<HTMLFormElement> | null) {\n    this._ref = ref;\n  }\n  get ref() {\n    return this._ref;\n  }\n}\n",
            "accessors": {
                "ref": {
                    "name": "ref",
                    "setSignature": {
                        "name": "ref",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "ref",
                                "type": "ElementRef<HTMLFormElement> | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 6,
                        "jsdoctags": [
                            {
                                "name": "ref",
                                "type": "ElementRef<HTMLFormElement> | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "ref",
                        "type": "",
                        "returnType": "",
                        "line": 9
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "HomepagePreviewService",
            "id": "injectable-HomepagePreviewService-400ba162fc3df41d8d06be7f624288cf31a0cf37e5d373adccfb1ea41f8b3b561bef72b6c45a8ef1477e0153c972459e3057f139f51b67bd22c5bfeaa690ebbd",
            "file": "src/app/components/Pages/Homepage/homepage-previews.service.ts",
            "properties": [
                {
                    "name": "pageTitle",
                    "defaultValue": "\"Blogs\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                },
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getBlogs",
                    "args": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import type { BlogSummaryDto } from \"@/api/schemas\";\nimport { Injectable } from \"@angular/core\";\nimport type { Observable } from \"rxjs\";\nimport { type WindowedRequest } from \"../../../services/api.service\";\nimport { BlogPreviewServiceToken } from \"../../../services/blog-preview.service\";\n\n@Injectable()\nexport class HomepagePreviewService extends BlogPreviewServiceToken {\n  readonly pageTitle = \"Blogs\";\n  override getBlogs(params: WindowedRequest): Observable<BlogSummaryDto[]> {\n    return this.apiService.getBlogs(params);\n  }\n}\n",
            "extends": [
                "BlogPreviewServiceToken"
            ],
            "type": "injectable"
        },
        {
            "name": "IdService",
            "id": "injectable-IdService-7e29dfc605380024a8223727a98a352de9f83ee7ebe1c81e4b773639fb0aff85e9b12f2539b1ca5c32ec2b98c7447e00992714071154e372a0d20ae4e52b32ed",
            "file": "src/app/services/id.service.ts",
            "properties": [
                {
                    "name": "_id",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Provides consumers with a unique, singleton UUID (v4).</p>\n",
            "rawdescription": "\nProvides consumers with a unique, singleton UUID (v4).",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { v4 } from \"uuid\";\n\n/** Provides consumers with a unique, singleton UUID (v4). */\n@Injectable()\nexport class IdService {\n  protected _id = v4();\n  get id() {\n    return this._id;\n  }\n}\n",
            "accessors": {
                "id": {
                    "name": "id",
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 8
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LocationService",
            "id": "injectable-LocationService-c954f785da03554e3144bb68a75be89c648e36d9c73386d956b382791eb406fb318df75bc65ec56ab9585feb867f9dad9588a88c8d4ef78ae3f92f404892298f",
            "file": "src/app/services/location.service.ts",
            "properties": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nabstract class LocationServiceToken {\n  abstract get url(): string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class LocationService extends LocationServiceToken {\n  protected readonly router = inject(Router);\n  get url() {\n    return this.router.url;\n  }\n}\n\nexport class MockLocationService extends LocationServiceToken {\n  constructor(protected _url = \"/\") {\n    super();\n  }\n  get url() {\n    return this._url;\n  }\n  set url(val: string) {\n    this._url = val;\n  }\n}\n",
            "accessors": {
                "url": {
                    "name": "url",
                    "getSignature": {
                        "name": "url",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            },
            "extends": [
                "LocationServiceToken"
            ],
            "type": "injectable"
        },
        {
            "name": "LoginFormService",
            "id": "injectable-LoginFormService-93e3541c64dac877ecc02abe43d94043dc71b14369489d5f575471e4ea52e27ad805b42114fd4cf6858b13be8a7e1b73b586299976ced98aecddf4fe3b4ca1de",
            "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
            "properties": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "defaultErrorMessage",
                    "defaultValue": "\"Username or password incorrect\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "_form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "formWatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initialFormValue",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "signal<ResultStatus>({ status: \"unsubmitted\" })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "buildForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "callSubmitHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractFormService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\nimport { Validators, type FormBuilder } from \"@angular/forms\";\nimport { delay, map, of } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { AbstractFormService } from \"../../../services/form.service\";\n\nfunction buildForm(fb: FormBuilder) {\n  return fb.group({\n    username: fb.control(\"\", {\n      nonNullable: true,\n      validators: Validators.required,\n    }),\n    password: fb.control(\"\", {\n      nonNullable: true,\n      validators: Validators.required,\n    }),\n  });\n}\n\nexport type LoginForm = ReturnType<typeof buildForm>;\n\n@Injectable()\nclass LoginFormService extends AbstractFormService<LoginForm> {\n  protected apiService = inject(ApiService);\n  override defaultErrorMessage = \"Username or password incorrect\";\n  buildForm() {\n    return buildForm(this.fb);\n  }\n  submitHandler() {\n    return this.apiService.login(this.form.getRawValue());\n  }\n\n  get username() {\n    return this.form.controls.username;\n  }\n  get password() {\n    return this.form.controls.password;\n  }\n}\n\nexport default LoginFormService;\n\nexport const mockLogin = (shouldSucceed = true) => {\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    login(..._parameters: Parameters<ApiService[\"login\"]>) {\n      return of([]).pipe(\n        delay(1000),\n        map(() => {\n          if (shouldSucceed) return \"success\";\n          throw new Error(\"Something went wrong\");\n        }),\n      );\n    },\n  };\n};\n",
            "accessors": {
                "username": {
                    "name": "username",
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "extends": [
                "AbstractFormService"
            ],
            "type": "injectable"
        },
        {
            "name": "UserBlogsPreviewService",
            "id": "injectable-UserBlogsPreviewService-84bcfe9a27585bf7836adbd991e4ac9669b7736f5722cb1c04d8e033dd2895f00a4f5a5573ab6a8d14b8d774c834206d7cda4c8d3bca9f870380eb89c20d0837",
            "file": "src/app/components/Pages/UserBlogs/user-blogs.service.ts",
            "properties": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthenticationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "pageTitle",
                    "defaultValue": "[this.authService.me()?.name, \"Blogs\"]\n    .filter(Boolean)\n    .join(\" - \")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                },
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getBlogs",
                    "args": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "WindowedRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BlogPreviewServiceToken"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import type { BlogSummaryDto } from \"@/api/schemas\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { of, type Observable } from \"rxjs\";\nimport { type WindowedRequest } from \"../../../services/api.service\";\nimport { BlogPreviewServiceToken } from \"../../../services/blog-preview.service\";\nimport { AuthenticationService } from \"../../../services/is-authenticated.service\";\n\n@Injectable()\nexport class UserBlogsPreviewService extends BlogPreviewServiceToken {\n  protected readonly authService = inject(AuthenticationService);\n  readonly pageTitle = [this.authService.me()?.name, \"Blogs\"]\n    .filter(Boolean)\n    .join(\" - \");\n\n  override getBlogs(params: WindowedRequest): Observable<BlogSummaryDto[]> {\n    const user = this.authService.me();\n    if (!user) return of([]);\n    return this.apiService.getUserBlogs({\n      ...params,\n      user: user.username,\n    });\n  }\n}\n",
            "extends": [
                "BlogPreviewServiceToken"
            ],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AuthenticationServiceToken",
            "id": "class-AuthenticationServiceToken-570504ddbac7cd04ec001316d828f7aba2f24873976484e6e57b9634e5dde3cabc55115d5696d2764202330cf16e18a5ea752563355fd75a39e9d6cb5de96ea2",
            "file": "src/app/services/is-authenticated.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import type { UserWithExpirationDto } from \"@/api/schemas\";\nimport {\n  computed,\n  inject,\n  Injectable,\n  REQUEST,\n  signal,\n  TransferState,\n  type Signal,\n} from \"@angular/core\";\nimport { differenceInSeconds } from \"date-fns\";\nimport {\n  lastValueFrom,\n  map,\n  of,\n  switchMap,\n  take,\n  tap,\n  type Observable,\n} from \"rxjs\";\nimport { ME_DATA_KEY } from \"../guards/transfer-state.keys\";\nimport { ApiService, getJWT } from \"./api.service\";\n\nabstract class AuthenticationServiceToken {\n  protected abstract _me: Signal<UserWithExpirationDto | null>;\n  readonly me = computed(() => this._me());\n\n  readonly authenticated = computed(() => !!this.me());\n\n  abstract check(): Promise<UserWithExpirationDto | null>;\n  abstract logout(): Observable<boolean>;\n}\n\n/** To be used within guards and other services involved in verifying the user's authorization status.\n * Should not be consumed by components. */\n@Injectable({ providedIn: \"root\" })\nexport class AuthenticationService extends AuthenticationServiceToken {\n  protected readonly apiService = inject(ApiService);\n  protected readonly request = inject(REQUEST);\n\n  protected _me = signal<UserWithExpirationDto | null>(\n    inject(TransferState).get(ME_DATA_KEY, null),\n  );\n\n  /** - If user data is available and session expiration is more than one minute,\n   * returns the user data.\n   * - If session will expire in less than one minute, logs out and returns null.\n   * - Otherwise, performs authentication check. If user is authenticated, API is queried\n   * for user data which is set in service and returned. If user is not authenticated,\n   * returns and sets null */\n  check(): Promise<UserWithExpirationDto | null> {\n    return lastValueFrom(\n      of(this.me()).pipe(\n        switchMap((me) => {\n          if (!me) {\n            return this.apiService.authenticated(getJWT(this.request)).pipe(\n              switchMap(({ authenticated }) => {\n                if (authenticated && this.me() === null) {\n                  return this.apiService.me(getJWT(this.request));\n                }\n                return of(null);\n              }),\n            );\n          }\n          if (differenceInSeconds(me.exp * 1000, Date.now()) < 60) {\n            return this.apiService.logout().pipe(map(() => null));\n          }\n          return of(me);\n        }),\n        tap((me) => {\n          if (JSON.stringify(me) !== JSON.stringify(this.me())) {\n            this._me.set(me);\n          }\n        }),\n        take(1),\n      ),\n    );\n  }\n  logout() {\n    return this.apiService.logout().pipe(\n      tap(() => {\n        this._me.set(null);\n      }),\n    );\n  }\n}\n\nexport class MockAuthenticationService extends AuthenticationServiceToken {\n  protected _me = signal<UserWithExpirationDto | null>(null);\n  setMe(val: UserWithExpirationDto | null) {\n    this._me.set(val);\n  }\n\n  check(): Promise<UserWithExpirationDto | null> {\n    return Promise.resolve(this._me());\n  }\n\n  logout(): Observable<boolean> {\n    this.setMe(null);\n    return of(true);\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_me",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<UserWithExpirationDto | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        124,
                        128
                    ]
                },
                {
                    "name": "authenticated",
                    "defaultValue": "computed(() => !!this.me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "me",
                    "defaultValue": "computed(() => this._me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<UserWithExpirationDto | null>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        128
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        128
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocationServiceToken",
            "id": "class-LocationServiceToken-c954f785da03554e3144bb68a75be89c648e36d9c73386d956b382791eb406fb318df75bc65ec56ab9585feb867f9dad9588a88c8d4ef78ae3f92f404892298f",
            "file": "src/app/services/location.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nabstract class LocationServiceToken {\n  abstract get url(): string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class LocationService extends LocationServiceToken {\n  protected readonly router = inject(Router);\n  get url() {\n    return this.router.url;\n  }\n}\n\nexport class MockLocationService extends LocationServiceToken {\n  constructor(protected _url = \"/\") {\n    super();\n  }\n  get url() {\n    return this._url;\n  }\n  set url(val: string) {\n    this._url = val;\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "accessors": {
                "url": {
                    "name": "url",
                    "getSignature": {
                        "name": "url",
                        "type": "string",
                        "returnType": "string",
                        "line": 5
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockAuthenticationService",
            "id": "class-MockAuthenticationService-570504ddbac7cd04ec001316d828f7aba2f24873976484e6e57b9634e5dde3cabc55115d5696d2764202330cf16e18a5ea752563355fd75a39e9d6cb5de96ea2",
            "file": "src/app/services/is-authenticated.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import type { UserWithExpirationDto } from \"@/api/schemas\";\nimport {\n  computed,\n  inject,\n  Injectable,\n  REQUEST,\n  signal,\n  TransferState,\n  type Signal,\n} from \"@angular/core\";\nimport { differenceInSeconds } from \"date-fns\";\nimport {\n  lastValueFrom,\n  map,\n  of,\n  switchMap,\n  take,\n  tap,\n  type Observable,\n} from \"rxjs\";\nimport { ME_DATA_KEY } from \"../guards/transfer-state.keys\";\nimport { ApiService, getJWT } from \"./api.service\";\n\nabstract class AuthenticationServiceToken {\n  protected abstract _me: Signal<UserWithExpirationDto | null>;\n  readonly me = computed(() => this._me());\n\n  readonly authenticated = computed(() => !!this.me());\n\n  abstract check(): Promise<UserWithExpirationDto | null>;\n  abstract logout(): Observable<boolean>;\n}\n\n/** To be used within guards and other services involved in verifying the user's authorization status.\n * Should not be consumed by components. */\n@Injectable({ providedIn: \"root\" })\nexport class AuthenticationService extends AuthenticationServiceToken {\n  protected readonly apiService = inject(ApiService);\n  protected readonly request = inject(REQUEST);\n\n  protected _me = signal<UserWithExpirationDto | null>(\n    inject(TransferState).get(ME_DATA_KEY, null),\n  );\n\n  /** - If user data is available and session expiration is more than one minute,\n   * returns the user data.\n   * - If session will expire in less than one minute, logs out and returns null.\n   * - Otherwise, performs authentication check. If user is authenticated, API is queried\n   * for user data which is set in service and returned. If user is not authenticated,\n   * returns and sets null */\n  check(): Promise<UserWithExpirationDto | null> {\n    return lastValueFrom(\n      of(this.me()).pipe(\n        switchMap((me) => {\n          if (!me) {\n            return this.apiService.authenticated(getJWT(this.request)).pipe(\n              switchMap(({ authenticated }) => {\n                if (authenticated && this.me() === null) {\n                  return this.apiService.me(getJWT(this.request));\n                }\n                return of(null);\n              }),\n            );\n          }\n          if (differenceInSeconds(me.exp * 1000, Date.now()) < 60) {\n            return this.apiService.logout().pipe(map(() => null));\n          }\n          return of(me);\n        }),\n        tap((me) => {\n          if (JSON.stringify(me) !== JSON.stringify(this.me())) {\n            this._me.set(me);\n          }\n        }),\n        take(1),\n      ),\n    );\n  }\n  logout() {\n    return this.apiService.logout().pipe(\n      tap(() => {\n        this._me.set(null);\n      }),\n    );\n  }\n}\n\nexport class MockAuthenticationService extends AuthenticationServiceToken {\n  protected _me = signal<UserWithExpirationDto | null>(null);\n  setMe(val: UserWithExpirationDto | null) {\n    this._me.set(val);\n  }\n\n  check(): Promise<UserWithExpirationDto | null> {\n    return Promise.resolve(this._me());\n  }\n\n  logout(): Observable<boolean> {\n    this.setMe(null);\n    return of(true);\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_me",
                    "defaultValue": "signal<UserWithExpirationDto | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "authenticated",
                    "defaultValue": "computed(() => !!this.me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "me",
                    "defaultValue": "computed(() => this._me())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                }
            ],
            "methods": [
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<UserWithExpirationDto | null>",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AuthenticationServiceToken"
                    }
                },
                {
                    "name": "setMe",
                    "args": [
                        {
                            "name": "val",
                            "type": "UserWithExpirationDto | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "UserWithExpirationDto | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [
                "AuthenticationServiceToken"
            ],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockLocationService",
            "id": "class-MockLocationService-c954f785da03554e3144bb68a75be89c648e36d9c73386d956b382791eb406fb318df75bc65ec56ab9585feb867f9dad9588a88c8d4ef78ae3f92f404892298f",
            "file": "src/app/services/location.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nabstract class LocationServiceToken {\n  abstract get url(): string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class LocationService extends LocationServiceToken {\n  protected readonly router = inject(Router);\n  get url() {\n    return this.router.url;\n  }\n}\n\nexport class MockLocationService extends LocationServiceToken {\n  constructor(protected _url = \"/\") {\n    super();\n  }\n  get url() {\n    return this._url;\n  }\n  set url(val: string) {\n    this._url = val;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "\"/\""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "\"/\"",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": [
                "LocationServiceToken"
            ],
            "accessors": {
                "url": {
                    "name": "url",
                    "setSignature": {
                        "name": "url",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "url",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AbstractButtonComponent",
            "id": "component-AbstractButtonComponent-eb618b2312974ebe03b841b52e49d35e2052b9040f582d6881907dd37154f9af318a601a008d5c0465aa6df32f63af46c0ed620626d5e8e48d129137429dfc89",
            "file": "src/app/components/Atoms/Button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-abstract-button",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "input<\"sm\" | \"md\" | \"lg\">(\"md\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "input<\"button\" | \"submit\" | \"reset\">(\"button\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "variant",
                    "defaultValue": "input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  computed,\n  type ElementRef,\n  inject,\n  input,\n  output,\n  signal,\n  viewChild,\n} from \"@angular/core\";\nimport { clsx } from \"clsx\";\n\nconst variantClasses = {\n  confirm:\n    \"border-green-700 bg-green-50 text-green-700 decoration-green-700 shadow-green-600/20\",\n  warning:\n    \"border-red-700 bg-red-100 text-red-700 decoration-red-700 shadow-red-600/20\",\n  cancel:\n    \"border-neutral-700 bg-neutral-100 text-neutral-700 decoration-neutral-700 shadow-neutral-600/20\",\n  info: \"border-violet-700 bg-violet-100 text-violet-700 decoration-violet-700 shadow-violet-600/20\",\n};\n\nconst sizeClasses = {\n  sm: \"text-sm px-3 py-2 \",\n  md: \"text-md px-3 py-2\",\n  lg: \"text-[18px] px-3 py-3\",\n};\n\nconst activeClasses =\n  \"active:scale-96 [.active]:scale-96 disabled:[.active]:scale-100 disabled:[.active]:shadow-none active:shadow-xs [.active]:shadow-xs disabled:active:scale-100 disabled:active:shadow-none\";\n\n@Component({ selector: \"app-abstract-button\", template: \"\" })\nexport abstract class AbstractButtonComponent {\n  readonly type = input<\"button\" | \"submit\" | \"reset\">(\"button\");\n  readonly variant = input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  );\n  readonly size = input<\"sm\" | \"md\" | \"lg\">(\"md\");\n  readonly disabled = input(false);\n  readonly clicked = output();\n}\n@Component({\n  selector: \"app-button\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgClass],\n  template: `\n    <button\n      #ref\n      [ngClass]=\"[styles(), isActive() ? 'active' : '']\"\n      [disabled]=\"disabled()\"\n      [type]=\"type()\"\n      (click)=\"clicked.emit()\"\n      (keydown)=\"handleKeyPress($event)\"\n      (keyup)=\"handleKeyPress($event)\"\n    >\n      <ng-content />\n    </button>\n  `,\n})\nexport class ButtonComponent extends AbstractButtonComponent {\n  protected isActive = signal(false);\n\n  protected readonly ref =\n    viewChild.required<ElementRef<HTMLButtonElement>>(\"ref\");\n\n  protected readonly cdr = inject(ChangeDetectorRef);\n\n  protected handleKeyPress(ev: KeyboardEvent) {\n    if (ev.key !== \"Enter\") {\n      this.isActive.set(false);\n      return;\n    }\n    this.isActive.set(ev.type === \"keydown\" ? true : false);\n  }\n\n  focus() {\n    this.ref().nativeElement.focus();\n    this.cdr.detectChanges();\n  }\n\n  protected readonly styles = computed(() => {\n    const variant = variantClasses[this.variant()];\n    const size = sizeClasses[this.size()];\n    return clsx(\n      \"min-w-[7ch] border-1 outline-hidden cursor-pointer rounded-md no-underline decoration-1 underline-offset-4 outline-offset-2 outline-transparent transition-all duration-50 focus-visible:underline focus-visible:outline-2 focus-visible:shadow-xs disabled:opacity-75 disabled:cursor-not-allowed \",\n      activeClasses,\n      variant,\n      size,\n    );\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ArrowIconComponent",
            "id": "component-ArrowIconComponent-3f1875705f2549939684f8f5d1f46abbb53c6d18eff78ef631a9402ef2abbafed33e774fa5edf4a6ab633565aa01c8fe77b588af35194f7cc6e40bf22ea689e0",
            "file": "src/app/components/Atoms/Arrow/arrow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-arrow",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- Stash Iconsby Pingback LLC -->\n@if (direction() === \"right\") {\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M14.989 4.638a.5.5 0 0 1 .706.017l6.667 7a.5.5 0 0 1 0 .69l-6.667 7a.5.5 0 1 1-.724-.69l5.862-6.155H2a.5.5 0 0 1 0-1h18.833l-5.862-6.155a.5.5 0 0 1 .018-.707\"\n    />\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M9.011 4.638a.5.5 0 0 1 .018.707L3.167 11.5H22a.5.5 0 0 1 0 1H3.167l5.862 6.155a.5.5 0 1 1-.724.69l-6.667-7a.5.5 0 0 1 0-.69l6.667-7a.5.5 0 0 1 .706-.017\"\n    />\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "input.required<\"left\" | \"right\">()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-arrow\",\n  template: `\n    <!-- Stash Iconsby Pingback LLC -->\n    @if (direction() === \"right\") {\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"currentColor\"\n          d=\"M14.989 4.638a.5.5 0 0 1 .706.017l6.667 7a.5.5 0 0 1 0 .69l-6.667 7a.5.5 0 1 1-.724-.69l5.862-6.155H2a.5.5 0 0 1 0-1h18.833l-5.862-6.155a.5.5 0 0 1 .018-.707\"\n        />\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M9.011 4.638a.5.5 0 0 1 .018.707L3.167 11.5H22a.5.5 0 0 1 0 1H3.167l5.862 6.155a.5.5 0 1 1-.724.69l-6.667-7a.5.5 0 0 1 0-.69l6.667-7a.5.5 0 0 1 .706-.017\"\n        />\n      </svg>\n    }\n  `,\n  styleUrl: \"../AbstractIconStyles/styles.css\",\n})\nexport class ArrowIconComponent {\n  readonly direction = input.required<\"left\" | \"right\">();\n}\n",
            "styleUrl": "../AbstractIconStyles/styles.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "BackLinkComponent",
            "id": "component-BackLinkComponent-f6cc33b1586b23d900a96014ac19972656b6b7b94e72974d3a787712ce881b083a10ea162afbbad616eaf25b2751d3999a1dceeb9aa7fc1e1ff54ec4564e4bc0",
            "file": "src/app/components/Molecules/BackLink/back-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-back-link",
            "styleUrls": [],
            "styles": [],
            "template": "<a\n  class=\"inline-block h-full w-full rounded-lg p-1 leading-0 text-cyan-800 hover:bg-cyan-800/10\"\n  [routerLink]=\"backLink().href\"\n  [title]=\"backLink().label\"\n  ><app-arrow direction=\"left\"\n/></a>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ArrowIconComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from \"@angular/core\";\nimport { ArrowIconComponent } from \"../../Atoms/Arrow/arrow.component\";\nimport { RouterLink } from \"@angular/router\";\n\nexport type BackLinkInput = Record<\"href\" | \"label\", string>;\nexport const TO_HOMEPAGE: BackLinkInput = {\n  href: \"/\",\n  label: \"Back to homepage\",\n};\n\n@Component({\n  selector: \"app-back-link\",\n  imports: [ArrowIconComponent, RouterLink],\n  template: `\n    <a\n      class=\"inline-block h-full w-full rounded-lg p-1 leading-0 text-cyan-800 hover:bg-cyan-800/10\"\n      [routerLink]=\"backLink().href\"\n      [title]=\"backLink().label\"\n      ><app-arrow direction=\"left\"\n    /></a>\n  `,\n})\nexport class BackLinkComponent {\n  readonly backLink = input.required<BackLinkInput>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "BlogComponent",
            "id": "component-BlogComponent-90989ff2bc811057a71a55c47eec1b77c377ce039b1121a7bf5fdcee0127ad17dacc741c2b52403257ccf5fd46d6f7e8f725374806b36f53cb1d1def8ea532a2",
            "file": "src/app/components/Molecules/Blog/blog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "blog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "paragraphs",
                    "defaultValue": "computed(() =>\n    this.blog()\n      .content.replaceAll(/\\n{2,}/g, \"\\n\")\n      .split(\"\\n\"),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { BlogDto } from \"@/api/schemas\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-blog\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./blog.component.html\",\n})\nexport class BlogComponent {\n  readonly blog = input.required<BlogDto>();\n  protected readonly paragraphs = computed(() =>\n    this.blog()\n      .content.replaceAll(/\\n{2,}/g, \"\\n\")\n      .split(\"\\n\"),\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex min-w-[50ch] flex-col items-center gap-5 text-neutral-700\">\n  <div\n    class=\"relative flex w-full max-w-prose flex-col gap-5 text-left text-black\"\n  >\n    @for (paragraph of paragraphs(); track $index) {\n      <p>{{ paragraph }}</p>\n    }\n  </div>\n</div>\n"
        },
        {
            "name": "BlogFormComponent",
            "id": "component-BlogFormComponent-31e5331f791ee5a6d992f6cc2fbe3c525a32e10c67df8e4dc6db873cf0228c15271808fdf64be06fffb08a4ab805a6414a602cfd195801aca72a30bffa359a7c",
            "file": "src/app/components/Organisms/BlogForm/blog-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blog-form",
            "styleUrls": [],
            "styles": [
                "\n    .title {\n      display: block;\n      width: 100%;\n    }\n    ::ng-deep .title app-input {\n      display: block;\n    }\n    ::ng-deep .title app-input input {\n      display: block;\n      width: 100%;\n    }\n  "
            ],
            "templateUrl": [
                "./blog-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "defaultErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "submitLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "defaultErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "formService",
                    "defaultValue": "inject(AbstractBlogFormService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Actual page should provide the concrete create/update blog form service handler</p>\n",
                    "line": 40,
                    "rawdescription": "\nActual page should provide the concrete create/update blog form service handler",
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "this.formService.resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "status",
                    "defaultValue": "outputFromObservable(toObservable(this.resultStatus))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "submitLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "FormWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  output,\n  type OnInit,\n} from \"@angular/core\";\nimport { outputFromObservable, toObservable } from \"@angular/core/rxjs-interop\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FormWrapperComponent } from \"../../Molecules/FormWrapper/form-wrapper.component\";\nimport { FormInputComponent } from \"../FormInput/form-input.component\";\nimport { AbstractBlogFormService, type BlogValues } from \"./blog-form.service\";\n\n@Component({\n  selector: \"app-blog-form\",\n  imports: [FormWrapperComponent, ReactiveFormsModule, FormInputComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./blog-form.component.html\",\n  styles: `\n    .title {\n      display: block;\n      width: 100%;\n    }\n    ::ng-deep .title app-input {\n      display: block;\n    }\n    ::ng-deep .title app-input input {\n      display: block;\n      width: 100%;\n    }\n  `,\n})\nexport class BlogFormComponent implements OnInit {\n  readonly successLabel = input.required<string>();\n  readonly submitLabel = input.required<string>();\n  readonly defaultErrorMessage = input<string>();\n  readonly data = input<BlogValues>();\n  /** Actual page should provide the concrete create/update blog form service handler  */\n  protected readonly formService = inject(AbstractBlogFormService);\n\n  protected get form() {\n    return this.formService.form;\n  }\n  protected readonly resultStatus = this.formService.resultStatus;\n\n  readonly status = outputFromObservable(toObservable(this.resultStatus));\n\n  readonly goBack = output();\n  ngOnInit(): void {\n    this.formService.initialFormValue = this.data();\n    this.formService.defaultErrorMessage =\n      this.defaultErrorMessage() ?? this.formService.defaultErrorMessage;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .title {\n      display: block;\n      width: 100%;\n    }\n    ::ng-deep .title app-input {\n      display: block;\n    }\n    ::ng-deep .title app-input input {\n      display: block;\n      width: 100%;\n    }\n  \n",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "form": {
                    "name": "form",
                    "getSignature": {
                        "name": "form",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "templateData": "<app-form-wrapper\n  [successLabel]=\"successLabel()\"\n  [submitLabel]=\"submitLabel()\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"formService.submit()\"\n  [resultStatus]=\"resultStatus()\"\n  (goBack)=\"goBack.emit()\"\n>\n  <app-form-input\n    class=\"title block w-full\"\n    [control]=\"formService.title\"\n    label=\"Title\"\n  />\n  <app-form-input\n    [control]=\"formService.content\"\n    label=\"Content\"\n    type=\"textarea\"\n  />\n</app-form-wrapper>\n"
        },
        {
            "name": "BlogPageComponent",
            "id": "component-BlogPageComponent-57c5ef61dbc5daca56272a0b7718906d5f0c12e322ccb0c2546a4ac3cf01476553567eed7ec33a3ac239801726a2ed825bf10d87abef021b4b5bdf2c335d743c",
            "file": "src/app/components/Pages/Blog/blog-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blog-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blog-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "blogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "blog",
                    "defaultValue": "toObservable(this.blogId).pipe(\n    filter((blogId): blogId is string => !!blogId),\n    switchMap((blogId) => this.apiService.getBlog(blogId)),\n    tap(({ title, author_name }) => {\n      this.titleService.setTitle(`${author_name}: ${title}`);\n    }),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "blogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "titleService",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "BlogComponent",
                    "type": "component"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from \"@angular/core\";\nimport { toObservable } from \"@angular/core/rxjs-interop\";\nimport { Title } from \"@angular/platform-browser\";\nimport { filter, switchMap, tap } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { BlogComponent } from \"../../Molecules/Blog/blog.component\";\nimport { PageWrapperComponent } from \"../../Templates/PageWrapper/page-wrapper.component\";\n\n@Component({\n  selector: \"app-blog-page\",\n  imports: [BlogComponent, PageWrapperComponent, AsyncPipe],\n  templateUrl: \"./blog-page.component.html\",\n\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlogPageComponent {\n  protected readonly apiService = inject(ApiService);\n  protected readonly titleService = inject(Title);\n  readonly blogId = input<string>();\n  protected blog = toObservable(this.blogId).pipe(\n    filter((blogId): blogId is string => !!blogId),\n    switchMap((blogId) => this.apiService.getBlog(blogId)),\n    tap(({ title, author_name }) => {\n      this.titleService.setTitle(`${author_name}: ${title}`);\n    }),\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (blog | async; as data) {\n  <app-page-wrapper\n    [pageTitle]=\"data.title\"\n    [subtitle]=\"`Author: ${data.author_name}`\"\n  >\n    <app-blog [blog]=\"data\" />\n  </app-page-wrapper>\n}\n"
        },
        {
            "name": "BlogPageWrapperComponent",
            "id": "component-BlogPageWrapperComponent-ae91e88c45ba5d3a460a2377a6cf6f209168445ecfc53d04a3bdfe931086db583e91d6f843e48f892089a8eab3c995e496550744e2ced266b10d565f3ab83195",
            "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "blog-page-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-blog-page [blogId]=\"id()\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "BlogPageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport { provideRouter } from \"@angular/router\";\nimport {\n  applicationConfig,\n  type Meta,\n  type StoryObj,\n} from \"@storybook/angular\";\nimport { add } from \"date-fns\";\nimport { of } from \"rxjs\";\nimport { routes } from \"../../../app.routes\";\nimport { createBlog } from \"../../../helpers/storybook\";\nimport { ApiService } from \"../../../services/api.service\";\nimport {\n  AuthenticationService,\n  MockAuthenticationService,\n} from \"../../../services/is-authenticated.service\";\nimport {\n  LocationService,\n  MockLocationService,\n} from \"../../../services/location.service\";\nimport { BlogPageComponent } from \"./blog-page.component\";\n\nconst id = \"id\";\n\n@Component({\n  selector: \"blog-page-wrapper\",\n  imports: [BlogPageComponent],\n  template: `<app-blog-page [blogId]=\"id()\" />`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass BlogPageWrapperComponent {\n  readonly id = input<string>();\n}\nconst mockLocation = new MockLocationService(`/blog/${id}`);\n\nconst meta = {\n  title: \"Pages/BlogPage\",\n  component: BlogPageWrapperComponent,\n  args: { id },\n} satisfies Meta<BlogPageWrapperComponent>;\nexport default meta;\nexport const BlogPage: StoryObj<BlogPageWrapperComponent> = {\n  name: \"BlogPage\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: LocationService, useValue: mockLocation },\n        {\n          provide: ApiService,\n          useValue: {\n            getBlog(id: string) {\n              return of(\n                createBlog({\n                  authorId: \"johnDoe\",\n                  authorName: \"John Doe\",\n                  blogId: id,\n                }),\n              );\n            },\n          },\n        },\n        {\n          provide: AuthenticationService,\n          useFactory: () => {\n            const mockAuth = new MockAuthenticationService();\n            mockAuth.setMe({\n              exp: add(new Date(), { days: 1 }).getTime(),\n              id: \"johnDoe\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n            });\n            return mockAuth;\n          },\n        },\n      ],\n    }),\n  ],\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "BlogPreviewComponent",
            "id": "component-BlogPreviewComponent-4b004bee4a6ef18c06ddda90ce49625a8a1e4ac6cfd28309c7b531003d2998f9e4a44519626e3c81bb089ee02e8b05ebb8ccfa0804645324a15a3723e541facd",
            "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blog-preview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blog-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "deleteAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "deleteAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef) as ElementRef<HTMLElement>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "BoxComponent",
                    "type": "component"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                },
                {
                    "name": "IsAuthorPipe",
                    "type": "pipe"
                },
                {
                    "name": "DeleteIconComponent",
                    "type": "component"
                },
                {
                    "name": "EditIconComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DeleteBlogDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { BlogSummaryDto } from \"@/api/schemas/blog\";\nimport { AsyncPipe, DatePipe, NgClass } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  inject,\n  input,\n  output,\n  signal,\n} from \"@angular/core\";\nimport { RouterLink } from \"@angular/router\";\nimport { IsAuthorPipe } from \"../../../pipes/is-author.pipe\";\nimport { BoxComponent } from \"../../Atoms/Box/box.component\";\nimport { DeleteIconComponent } from \"../../Atoms/DeleteIcon/delete-icon.component\";\nimport { EditIconComponent } from \"../../Atoms/EditIcon/edit-icon.component\";\nimport { DeleteBlogDialogComponent } from \"../../Molecules/DeleteBlogConfirm/delete-blog-dialog.component\";\n\n@Component({\n  selector: \"app-blog-preview\",\n  imports: [\n    NgClass,\n    BoxComponent,\n    DatePipe,\n    IsAuthorPipe,\n    DeleteIconComponent,\n    EditIconComponent,\n    AsyncPipe,\n    RouterLink,\n    DeleteBlogDialogComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./blog-preview.component.html\",\n})\nexport class BlogPreviewComponent {\n  readonly data = input.required<BlogSummaryDto>();\n  protected elementRef = inject(ElementRef) as ElementRef<HTMLElement>;\n\n  protected show = signal(false);\n\n  readonly clicked = output<string>();\n  readonly deleteAction = output();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@let isOwnPost = data() | isAuthor | async;\n<div class=\"max-w-prose min-w-[50ch] text-neutral-700\">\n  <app-box>\n    <div\n      [ngClass]=\"{\n        flex: true,\n        'items-center': true,\n        'h-[22px]': true,\n        'justify-end': !isOwnPost,\n        'justify-between': isOwnPost,\n      }\"\n    >\n      <div class=\"flex justify-end\">\n        <span class=\"text-xs\" title=\"Created date\">{{\n          data().created_at | date\n        }}</span>\n      </div>\n      @if (isOwnPost) {\n        <div class=\"flex h-[inherit] gap-3\">\n          <a [routerLink]=\"`/blog/edit/${data().id}`\" title=\"Update post\">\n            <app-edit-icon class=\"text-cyan-800\" />\n          </a>\n          <button\n            (click)=\"show.set(true)\"\n            title=\"Delete post\"\n            class=\"cursor-pointer\"\n          >\n            <app-delete-icon class=\"text-red-700 saturate-75\" />\n          </button>\n        </div>\n      }\n    </div>\n    <a [routerLink]=\"`/blog/${data().id}`\">\n      <div class=\"mb-5 flex flex-col items-center\">\n        <h2 class=\"text-2xl font-light text-amber-900\">\n          {{ data().title }}\n        </h2>\n        <span class=\"text-sm\" title=\"Author\">{{ data().author_name }}</span>\n      </div>\n      <div class=\"text-wrapper relative mb-3 line-clamp-3 text-left text-black\">\n        <p>{{ data().summary }}</p>\n      </div>\n    </a>\n  </app-box>\n</div>\n\n<app-delete-blog-dialog [(show)]=\"show\" (confirmDelete)=\"deleteAction.emit()\" />\n"
        },
        {
            "name": "BlogPreviewTemplate",
            "id": "component-BlogPreviewTemplate-366c55f5b51aae5eeb438626a45c3fb61fc1f16d78068c52d663a17e200c3c245c6620173cb44a4e907129a936be2eef1f7aa3da8412db804823365cea4c3c96",
            "file": "src/app/components/Templates/BlogPreviews/blog-previews.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blogs-preview-template",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blog-previews.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "authenticated",
                    "defaultValue": "inject(AuthenticationService).authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "blogPreviewService",
                    "defaultValue": "inject(BlogPreviewServiceToken)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "blogs",
                    "defaultValue": "signal<BlogSummaryDto[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "canLoadMore",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Loading more items is only allowed if a request for blogs does not\nreturn an empty array.</p>\n",
                    "line": 32,
                    "rawdescription": "\nLoading more items is only allowed if a request for blogs does not\nreturn an empty array.",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "limit",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "loadMore$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getBlogs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "BlogPreviewComponent",
                    "type": "component"
                },
                {
                    "name": "PageWrapperWithLoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { BlogSummaryDto } from \"@/api/schemas\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { concatMap, filter, type Observable, Subject, tap } from \"rxjs\";\nimport { ApiService } from \"../../../services/api.service\";\nimport { BlogPreviewServiceToken } from \"../../../services/blog-preview.service\";\nimport { AuthenticationService } from \"../../../services/is-authenticated.service\";\nimport { BlogPreviewComponent } from \"../../Organisms/BlogPreview/blog-preview.component\";\nimport { PageWrapperWithLoadingComponent } from \"../PageWrapperWithLoading/page-wrapper-with-loading.component\";\n\n@Component({\n  selector: \"app-blogs-preview-template\",\n  templateUrl: \"./blog-previews.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [BlogPreviewComponent, PageWrapperWithLoadingComponent],\n})\nexport abstract class BlogPreviewTemplate {\n  protected readonly blogPreviewService = inject(BlogPreviewServiceToken);\n  protected readonly limit = 20;\n  readonly authenticated = inject(AuthenticationService).authenticated;\n  protected apiService = inject(ApiService);\n  protected readonly blogs = signal<BlogSummaryDto[]>([]);\n\n  protected readonly loadMore$ = new Subject<void>();\n  /** Loading more items is only allowed if a request for blogs does not\n   * return an empty array. */\n  protected canLoadMore = false;\n\n  constructor() {\n    this.getBlogs().subscribe();\n    this.loadMore$\n      .pipe(\n        filter(() => this.canLoadMore),\n        concatMap(() => this.getBlogs()),\n        takeUntilDestroyed(),\n      )\n      .subscribe();\n  }\n\n  protected getBlogs(): Observable<BlogSummaryDto[]> {\n    return this.blogPreviewService\n      .getBlogs({ offset: this.blogs().length, limit: this.limit })\n      .pipe(\n        tap((data) => {\n          this.canLoadMore = !!data.length;\n          if (!this.canLoadMore) return;\n          this.blogs.update((prev) => [...prev, ...data]);\n        }),\n      );\n  }\n\n  handleDelete(postId: string): void {\n    this.apiService\n      .deleteBlog(postId)\n      .pipe(\n        tap(() => {\n          this.blogs.set(this.blogs().filter((blog) => blog.id !== postId));\n        }),\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "extends": [],
            "templateData": "<app-page-wrapper-with-loading\n  [pageTitle]=\"blogPreviewService.pageTitle\"\n  (intersectionEvent)=\"loadMore$.next()\"\n>\n  <div class=\"flex justify-center\">\n    @if (blogs().length) {\n      <ul class=\"flex list-none flex-col gap-5\">\n        @for (blog of blogs(); track blog.id) {\n          <li>\n            <app-blog-preview\n              [data]=\"blog\"\n              (deleteAction)=\"handleDelete(blog.id)\"\n            />\n          </li>\n        }\n      </ul>\n    } @else {\n      <p>No blogs published yet</p>\n    }\n  </div>\n</app-page-wrapper-with-loading>\n"
        },
        {
            "name": "BoxComponent",
            "id": "component-BoxComponent-60549f93dc8a2cbe9e29bd1ff9afa8efb1155dd27d14c22de3fa661fb4f2e1b39aaf08e6c12bdd9ae7ac9cf80f8502ab67a14e68b90f3c2e58db75a0d21eac90",
            "file": "src/app/components/Atoms/Box/box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-box",
            "styleUrls": [],
            "styles": [],
            "template": "<div   class=\"border-1 shadow-xs rounded-xl border-neutral-400 p-3 shadow-neutral-400\"\n >\n   <ng-content />\n </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-box\",\n  template: ` <div\n    class=\"border-1 shadow-xs rounded-xl border-neutral-400 p-3 shadow-neutral-400\"\n  >\n    <ng-content />\n  </div>`,\n})\nexport class BoxComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-eb618b2312974ebe03b841b52e49d35e2052b9040f582d6881907dd37154f9af318a601a008d5c0465aa6df32f63af46c0ed620626d5e8e48d129137429dfc89",
            "file": "src/app/components/Atoms/Button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  #ref\n  [ngClass]=\"[styles(), isActive() ? 'active' : '']\"\n  [disabled]=\"disabled()\"\n  [type]=\"type()\"\n  (click)=\"clicked.emit()\"\n  (keydown)=\"handleKeyPress($event)\"\n  (keyup)=\"handleKeyPress($event)\"\n>\n  <ng-content />\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "cdr",
                    "defaultValue": "inject(ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "isActive",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "ref",
                    "defaultValue": "viewChild.required<ElementRef<HTMLButtonElement>>(\"ref\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "styles",
                    "defaultValue": "computed(() => {\n    const variant = variantClasses[this.variant()];\n    const size = sizeClasses[this.size()];\n    return clsx(\n      \"min-w-[7ch] border-1 outline-hidden cursor-pointer rounded-md no-underline decoration-1 underline-offset-4 outline-offset-2 outline-transparent transition-all duration-50 focus-visible:underline focus-visible:outline-2 focus-visible:shadow-xs disabled:opacity-75 disabled:cursor-not-allowed \",\n      activeClasses,\n      variant,\n      size,\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "input<\"sm\" | \"md\" | \"lg\">(\"md\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<\"button\" | \"submit\" | \"reset\">(\"button\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "focus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyPress",
                    "args": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  computed,\n  type ElementRef,\n  inject,\n  input,\n  output,\n  signal,\n  viewChild,\n} from \"@angular/core\";\nimport { clsx } from \"clsx\";\n\nconst variantClasses = {\n  confirm:\n    \"border-green-700 bg-green-50 text-green-700 decoration-green-700 shadow-green-600/20\",\n  warning:\n    \"border-red-700 bg-red-100 text-red-700 decoration-red-700 shadow-red-600/20\",\n  cancel:\n    \"border-neutral-700 bg-neutral-100 text-neutral-700 decoration-neutral-700 shadow-neutral-600/20\",\n  info: \"border-violet-700 bg-violet-100 text-violet-700 decoration-violet-700 shadow-violet-600/20\",\n};\n\nconst sizeClasses = {\n  sm: \"text-sm px-3 py-2 \",\n  md: \"text-md px-3 py-2\",\n  lg: \"text-[18px] px-3 py-3\",\n};\n\nconst activeClasses =\n  \"active:scale-96 [.active]:scale-96 disabled:[.active]:scale-100 disabled:[.active]:shadow-none active:shadow-xs [.active]:shadow-xs disabled:active:scale-100 disabled:active:shadow-none\";\n\n@Component({ selector: \"app-abstract-button\", template: \"\" })\nexport abstract class AbstractButtonComponent {\n  readonly type = input<\"button\" | \"submit\" | \"reset\">(\"button\");\n  readonly variant = input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  );\n  readonly size = input<\"sm\" | \"md\" | \"lg\">(\"md\");\n  readonly disabled = input(false);\n  readonly clicked = output();\n}\n@Component({\n  selector: \"app-button\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgClass],\n  template: `\n    <button\n      #ref\n      [ngClass]=\"[styles(), isActive() ? 'active' : '']\"\n      [disabled]=\"disabled()\"\n      [type]=\"type()\"\n      (click)=\"clicked.emit()\"\n      (keydown)=\"handleKeyPress($event)\"\n      (keyup)=\"handleKeyPress($event)\"\n    >\n      <ng-content />\n    </button>\n  `,\n})\nexport class ButtonComponent extends AbstractButtonComponent {\n  protected isActive = signal(false);\n\n  protected readonly ref =\n    viewChild.required<ElementRef<HTMLButtonElement>>(\"ref\");\n\n  protected readonly cdr = inject(ChangeDetectorRef);\n\n  protected handleKeyPress(ev: KeyboardEvent) {\n    if (ev.key !== \"Enter\") {\n      this.isActive.set(false);\n      return;\n    }\n    this.isActive.set(ev.type === \"keydown\" ? true : false);\n  }\n\n  focus() {\n    this.ref().nativeElement.focus();\n    this.cdr.detectChanges();\n  }\n\n  protected readonly styles = computed(() => {\n    const variant = variantClasses[this.variant()];\n    const size = sizeClasses[this.size()];\n    return clsx(\n      \"min-w-[7ch] border-1 outline-hidden cursor-pointer rounded-md no-underline decoration-1 underline-offset-4 outline-offset-2 outline-transparent transition-all duration-50 focus-visible:underline focus-visible:outline-2 focus-visible:shadow-xs disabled:opacity-75 disabled:cursor-not-allowed \",\n      activeClasses,\n      variant,\n      size,\n    );\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "AbstractButtonComponent"
            ]
        },
        {
            "name": "ButtonWrapperComponent",
            "id": "component-ButtonWrapperComponent-5b19aba88a1bc5e972027aa626552b7e9fc04da8fe232ce84a62138a9f2bc2332cfea51102b1909aa6fbb2c904c06a39d69cc0eb620a20208bff697711fbd236",
            "file": "src/app/components/Atoms/Button/button.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-button    [disabled]=\"disabled()\"\n    [type]=\"type()\"\n    [variant]=\"variant()\"\n    (clicked)=\"clicked.emit()\"\n    [size]=\"size()\"\n    >{{ content() }}</app-button\n  >",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "input(\"Button text\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "cdr",
                    "defaultValue": "inject(ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "isActive",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "ref",
                    "defaultValue": "viewChild.required<ElementRef<HTMLButtonElement>>(\"ref\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "styles",
                    "defaultValue": "computed(() => {\n    const variant = variantClasses[this.variant()];\n    const size = sizeClasses[this.size()];\n    return clsx(\n      \"min-w-[7ch] border-1 outline-hidden cursor-pointer rounded-md no-underline decoration-1 underline-offset-4 outline-offset-2 outline-transparent transition-all duration-50 focus-visible:underline focus-visible:outline-2 focus-visible:shadow-xs disabled:opacity-75 disabled:cursor-not-allowed \",\n      activeClasses,\n      variant,\n      size,\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "input<\"sm\" | \"md\" | \"lg\">(\"md\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<\"button\" | \"submit\" | \"reset\">(\"button\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "focus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "handleKeyPress",
                    "args": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { ButtonComponent } from \"./button.component\";\n\n@Component({\n  selector: \"storybook-button-wrapper\",\n  imports: [ButtonComponent],\n  template: `<app-button\n    [disabled]=\"disabled()\"\n    [type]=\"type()\"\n    [variant]=\"variant()\"\n    (clicked)=\"clicked.emit()\"\n    [size]=\"size()\"\n    >{{ content() }}</app-button\n  >`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonWrapperComponent extends ButtonComponent {\n  readonly content = input(\"Button text\");\n}\n\nconst config = {\n  title: \"Atoms/Button\",\n  component: ButtonWrapperComponent,\n  argTypes: {\n    content: {\n      control: \"text\",\n      description: \"Represents the button's projected content\",\n    },\n    disabled: { control: \"boolean\" },\n    type: { control: \"radio\", options: [\"button\", \"submit\", \"reset\"] },\n    variant: {\n      control: \"radio\",\n      options: [\"confirm\", \"cancel\", \"warning\", \"info\", \"cancel\"],\n    },\n    size: { control: \"radio\", options: [\"sm\", \"md\", \"lg\"] },\n    clicked: { action: \"click\" },\n  },\n\n  args: {\n    content: \"Button content\",\n    disabled: false,\n    type: \"button\",\n    variant: \"confirm\",\n    size: \"md\",\n  },\n} satisfies Meta<ButtonWrapperComponent>;\n\nexport default config;\ntype Story = StoryObj<ButtonWrapperComponent>;\nexport const ButtonComponentStory: Story = { name: \"Button\" };\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ButtonComponent"
            ]
        },
        {
            "name": "CreateBlogPageComponent",
            "id": "component-CreateBlogPageComponent-cdce1c2a98148991bb30f19208259d4129bc940b25eb00c3e0ba4a55b1ade835e196abb2e675911d03e79d62d94063b8f7c0f477c73d04abc5eec3da92dd890f",
            "file": "src/app/components/Pages/CreateBlog/create-blog-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: AbstractBlogFormService, useClass: CreateBlogFormService }",
                    "type": "injectable"
                }
            ],
            "selector": "app-create-blog-page",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-wrapper pageTitle=\"Create blog post\">\n  <app-blog-form\n    defaultErrorMessage=\"Error while creating blog post\"\n    submitLabel=\"Create blog post\"\n    successLabel=\"Blog post created\"\n    (status)=\"handleStatus($event)\"\n    (goBack)=\"handleGoBack()\"\n  />\n</app-page-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleGoBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "handleStatus",
                    "args": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "BlogFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { blogDtoSchema } from \"@/api/schemas\";\nimport { Component, inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport navigateOnSuccess from \"../../../helpers/navigate-on-success\";\nimport type { ResultStatus } from \"../../../services/form.service\";\nimport { BlogFormComponent } from \"../../Organisms/BlogForm/blog-form.component\";\nimport {\n  AbstractBlogFormService,\n  CreateBlogFormService,\n} from \"../../Organisms/BlogForm/blog-form.service\";\nimport { PageWrapperComponent } from \"../../Templates/PageWrapper/page-wrapper.component\";\n\n@Component({\n  selector: \"app-create-blog-page\",\n  providers: [\n    { provide: AbstractBlogFormService, useClass: CreateBlogFormService },\n  ],\n  imports: [PageWrapperComponent, BlogFormComponent],\n  template: `\n    <app-page-wrapper pageTitle=\"Create blog post\">\n      <app-blog-form\n        defaultErrorMessage=\"Error while creating blog post\"\n        submitLabel=\"Create blog post\"\n        successLabel=\"Blog post created\"\n        (status)=\"handleStatus($event)\"\n        (goBack)=\"handleGoBack()\"\n      />\n    </app-page-wrapper>\n  `,\n})\nexport class CreateBlogPageComponent {\n  protected router = inject(Router);\n\n  protected handleStatus(result: ResultStatus) {\n    if (result.status !== \"success\") return;\n    const { id } = blogDtoSchema.parse(result.value);\n    navigateOnSuccess({ router: this.router, result, path: `/blog/${id}` });\n  }\n\n  protected handleGoBack() {\n    void this.router.navigateByUrl(\"/\");\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CreateBlogPageComponent",
            "id": "component-CreateBlogPageComponent-9a6a3a5315334646b39513290e3aaf00085a41b33bed929e9eaf8e0899f04ecf316563c945d9080f42a2331f39ef3b718f889549cd712858531d02255bfd191b-1",
            "file": "src/app/components/Pages/EditBlog/edit-blog-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: AbstractBlogFormService, useClass: EditBlogFormService }",
                    "type": "injectable"
                }
            ],
            "selector": "app-edit-blog-page",
            "styleUrls": [],
            "styles": [],
            "template": "@let data = blog();\n<app-page-wrapper pageTitle=\"Create blog post\">\n  <app-blog-form\n    defaultErrorMessage=\"Error while updating blog post\"\n    submitLabel=\"Update blog post\"\n    successLabel=\"Blog post updated\"\n    [data]=\"data\"\n    (status)=\"handleStatus($event)\"\n    (goBack)=\"handleGoBack()\"\n  />\n</app-page-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "blog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "blogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "blogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "titleService",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleGoBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "handleStatus",
                    "args": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "BlogFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { BlogDto } from \"@/api/schemas\";\nimport { Component, effect, inject, input } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\nimport navigateOnSuccess from \"../../../helpers/navigate-on-success\";\nimport type { ResultStatus } from \"../../../services/form.service\";\nimport { BlogFormComponent } from \"../../Organisms/BlogForm/blog-form.component\";\nimport {\n  AbstractBlogFormService,\n  EditBlogFormService,\n} from \"../../Organisms/BlogForm/blog-form.service\";\nimport { PageWrapperComponent } from \"../../Templates/PageWrapper/page-wrapper.component\";\n\n@Component({\n  selector: \"app-edit-blog-page\",\n  providers: [\n    { provide: AbstractBlogFormService, useClass: EditBlogFormService },\n  ],\n  imports: [PageWrapperComponent, BlogFormComponent],\n  template: `\n    @let data = blog();\n    <app-page-wrapper pageTitle=\"Create blog post\">\n      <app-blog-form\n        defaultErrorMessage=\"Error while updating blog post\"\n        submitLabel=\"Update blog post\"\n        successLabel=\"Blog post updated\"\n        [data]=\"data\"\n        (status)=\"handleStatus($event)\"\n        (goBack)=\"handleGoBack()\"\n      />\n    </app-page-wrapper>\n  `,\n})\nexport class CreateBlogPageComponent {\n  readonly blogId = input<string>();\n  readonly blog = input<BlogDto>();\n  protected router = inject(Router);\n  protected readonly titleService = inject(Title);\n  protected handleStatus(result: ResultStatus) {\n    navigateOnSuccess({\n      router: this.router,\n      result,\n      path: `/blog/${this.blogId()}`,\n    });\n  }\n  protected handleGoBack() {\n    void this.router.navigateByUrl(\"/\");\n  }\n\n  constructor() {\n    effect(() => {\n      const title = this.blog()?.title;\n      if (title !== undefined) {\n        this.titleService.setTitle(`Edit: ${title}`);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 48
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CreateBlogPageComponent-1"
        },
        {
            "name": "DeleteBlogDialogComponent",
            "id": "component-DeleteBlogDialogComponent-f401c7d042a9df99024d532d09bb125c8c17254e2af98e3f15d024a38eb89dbf522c887a9e85568853756ff41751252cba05bc8bc2bb2ff044ea31b5b908853e",
            "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-blog-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<app-dialog [(show)]=\"show\" [title]=\"title\"\n  ><p>{{ content }}</p>\n  <div class=\"mt-7 flex justify-center gap-4\">\n    <app-button (clicked)=\"show.set(false)\" variant=\"cancel\">No</app-button>\n    <app-button variant=\"warning\" (clicked)=\"handleConfirmDelete()\"\n      >Yes</app-button\n    >\n  </div>\n</app-dialog>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "confirmDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "confirmDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "content",
                    "defaultValue": "\"Deleting the post is permanent. This action cannot be undone!\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "\"Delete this post?\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleConfirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "DialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, model, output } from \"@angular/core\";\nimport { ButtonComponent } from \"../../Atoms/Button/button.component\";\nimport { DialogComponent } from \"../Dialog/dialog.component\";\n\n@Component({\n  selector: \"app-delete-blog-dialog\",\n  imports: [ButtonComponent, DialogComponent],\n  template: `\n    <app-dialog [(show)]=\"show\" [title]=\"title\"\n      ><p>{{ content }}</p>\n      <div class=\"mt-7 flex justify-center gap-4\">\n        <app-button (clicked)=\"show.set(false)\" variant=\"cancel\">No</app-button>\n        <app-button variant=\"warning\" (clicked)=\"handleConfirmDelete()\"\n          >Yes</app-button\n        >\n      </div>\n    </app-dialog>\n  `,\n})\nexport class DeleteBlogDialogComponent {\n  readonly confirmDelete = output();\n  readonly show = model<boolean>(false);\n  readonly title = \"Delete this post?\";\n  readonly content =\n    \"Deleting the post is permanent. This action cannot be undone!\";\n\n  protected handleConfirmDelete() {\n    this.confirmDelete.emit();\n    this.show.set(false);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DeleteBlogWrapperComponent",
            "id": "component-DeleteBlogWrapperComponent-ac31f189c8bf908d1ef1eedc0f3d3ce572d0430b4b3b92abfb7ad721c2813d6d3d2f617dbd92da36bd0132f8dcb8bea99fde71671b8567275394c84a7d5de2db",
            "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-delete-blog-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<div>    <app-delete-blog-dialog\n      [(show)]=\"show\"\n      (confirmDelete)=\"confirmDelete.emit()\"\n    />\n    <app-button\n      class=\"mt-5 inline-block\"\n      type=\"button\"\n      size=\"sm\"\n      (clicked)=\"show.set(true)\"\n      >Show dialog</app-button\n    >\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "confirmDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "confirmDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "show",
                    "defaultValue": "signal(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "DeleteBlogDialogComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  signal,\n} from \"@angular/core\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { ButtonComponent } from \"../../Atoms/Button/button.component\";\nimport { DeleteBlogDialogComponent } from \"./delete-blog-dialog.component\";\n\n@Component({\n  selector: \"storybook-delete-blog-dialog\",\n  imports: [DeleteBlogDialogComponent, ButtonComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div>\n    <app-delete-blog-dialog\n      [(show)]=\"show\"\n      (confirmDelete)=\"confirmDelete.emit()\"\n    />\n    <app-button\n      class=\"mt-5 inline-block\"\n      type=\"button\"\n      size=\"sm\"\n      (clicked)=\"show.set(true)\"\n      >Show dialog</app-button\n    >\n  </div>`,\n})\nclass DeleteBlogWrapperComponent {\n  readonly confirmDelete = output();\n  protected readonly show = signal(true);\n}\n\nconst config: Meta<DeleteBlogWrapperComponent> = {\n  title: \"Molecules/DeleteBlogConfirm\",\n  component: DeleteBlogWrapperComponent,\n  argTypes: {\n    confirmDelete: { action: \"Confirm delete\" },\n  },\n};\n\nexport default config;\nexport const DeleteBlogDialogStory: StoryObj<DeleteBlogWrapperComponent> = {\n  name: \"DeleteBlogConfirm\",\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DeleteIconComponent",
            "id": "component-DeleteIconComponent-79ab6e2348c906647f3eff852b6fdbb40ad4dbbd5b048b67345edc56bfe967b5078e9e05473a3b7c03b66e688cf812d4e8aab88c4c5fe4381dfcbd33b525e131",
            "file": "src/app/components/Atoms/DeleteIcon/delete-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- iwwa:delete -->   <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\n     <path\n       fill=\"currentColor\"\n       d=\"M21.499 19.994L32.755 8.727a1.064 1.064 0 0 0-.001-1.502c-.398-.396-1.099-.398-1.501.002L20 18.494L8.743 7.224c-.4-.395-1.101-.393-1.499.002a1.05 1.05 0 0 0-.309.751c0 .284.11.55.309.747L18.5 19.993L7.245 31.263a1.064 1.064 0 0 0 .003 1.503c.193.191.466.301.748.301h.006c.283-.001.556-.112.745-.305L20 21.495l11.257 11.27c.199.198.465.308.747.308a1.06 1.06 0 0 0 1.061-1.061c0-.283-.11-.55-.31-.747z\"\n     />\n   </svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-delete-icon\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <!-- iwwa:delete -->\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\n      <path\n        fill=\"currentColor\"\n        d=\"M21.499 19.994L32.755 8.727a1.064 1.064 0 0 0-.001-1.502c-.398-.396-1.099-.398-1.501.002L20 18.494L8.743 7.224c-.4-.395-1.101-.393-1.499.002a1.05 1.05 0 0 0-.309.751c0 .284.11.55.309.747L18.5 19.993L7.245 31.263a1.064 1.064 0 0 0 .003 1.503c.193.191.466.301.748.301h.006c.283-.001.556-.112.745-.305L20 21.495l11.257 11.27c.199.198.465.308.747.308a1.06 1.06 0 0 0 1.061-1.061c0-.283-.11-.55-.31-.747z\"\n      />\n    </svg>`,\n  styleUrl: \"../AbstractIconStyles/styles.css\",\n})\nexport class DeleteIconComponent {}\n",
            "styleUrl": "../AbstractIconStyles/styles.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DialogComponent",
            "id": "component-DialogComponent-dadf472f2036f95ce87c5e390ec975ca767309a56b5a2dd0e23a096a6e77ed3284f61e04f9238777571bfacb2b8a53f94315ab1a542d366df2d262045921830c",
            "file": "src/app/components/Molecules/Dialog/dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "defaultValue": "viewChild.required<ElementRef<HTMLDialogElement>>(\"ref\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "handleModal",
                    "args": [
                        {
                            "name": "show",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "show",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  type ElementRef,\n  input,\n  model,\n  viewChild,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-dialog\",\n  imports: [NgClass],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./dialog.component.html\",\n})\nexport class DialogComponent {\n  readonly title = input<string>();\n  readonly show = model(true);\n\n  protected readonly ref =\n    viewChild.required<ElementRef<HTMLDialogElement>>(\"ref\");\n\n  protected handleModal(show: boolean) {\n    const ref = this.ref();\n    if (show && !ref.nativeElement.open) {\n      ref.nativeElement.showModal();\n    }\n    if (!show && ref.nativeElement.open) {\n      ref.nativeElement.close();\n    }\n  }\n  constructor() {\n    effect(() => {\n      this.handleModal(this.show());\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "extends": [],
            "templateData": "<dialog\n  #ref\n  class=\"max-w-prose scale-75 rounded-lg p-3 px-8 opacity-50 shadow-lg backdrop-blur-md transition-[scale] [&.open]:mx-auto [&.open]:mt-[30vh] [&.open]:scale-100 [&.open]:opacity-100 [&.open]:backdrop:backdrop-blur-[6px]\"\n  [ngClass]=\"{ open: show() }\"\n  (close)=\"show.set(false)\"\n>\n  <h1 class=\"my-4 text-center text-3xl font-light\">{{ title() }}</h1>\n\n  <div class=\"mb-5\">\n    <ng-content />\n  </div>\n</dialog>\n"
        },
        {
            "name": "DialogComponentWrapper",
            "id": "component-DialogComponentWrapper-1a9d18141f6e4350bdf908a7fadfd77446eefae9e713a625892619e968b9ffe21eaf554d7906e53478abf8bcdf43af2fa98c9e4cb78b220d6da72e3eeb6dcae3",
            "file": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<div>    <app-dialog [title]=\"title()\" [(show)]=\"show\">\n      <div class=\"flex flex-col items-center gap-5\">\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda,\n          iste, nobis itaque est qui nemo cupiditate neque cum quam officia ipsa\n          molestiae tempore architecto enim repellat? Animi eos reiciendis\n          quibusdam.\n        </p>\n        <app-input type=\"text\" label=\"Example input\" />\n      </div>\n    </app-dialog>\n    <app-button\n      class=\"mt-5 inline-block\"\n      type=\"button\"\n      size=\"sm\"\n      (clicked)=\"show.set(true)\"\n      >Show dialog</app-button\n    >\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "defaultValue": "signal(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "input<string, undefined | string>(undefined, {\n    transform: (val) => (val?.length ? val : \"Attention\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "DialogComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  signal,\n} from \"@angular/core\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { ButtonComponent } from \"../../Atoms/Button/button.component\";\nimport { InputComponent } from \"../Input/input.component\";\nimport { DialogComponent } from \"./dialog.component\";\n\n@Component({\n  selector: \"storybook-dialog\",\n  imports: [DialogComponent, ButtonComponent, InputComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div>\n    <app-dialog [title]=\"title()\" [(show)]=\"show\">\n      <div class=\"flex flex-col items-center gap-5\">\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda,\n          iste, nobis itaque est qui nemo cupiditate neque cum quam officia ipsa\n          molestiae tempore architecto enim repellat? Animi eos reiciendis\n          quibusdam.\n        </p>\n        <app-input type=\"text\" label=\"Example input\" />\n      </div>\n    </app-dialog>\n    <app-button\n      class=\"mt-5 inline-block\"\n      type=\"button\"\n      size=\"sm\"\n      (clicked)=\"show.set(true)\"\n      >Show dialog</app-button\n    >\n  </div>`,\n})\nclass DialogComponentWrapper {\n  readonly title = input<string, undefined | string>(undefined, {\n    transform: (val) => (val?.length ? val : \"Attention\"),\n  });\n\n  protected readonly show = signal(true);\n}\n\nconst config: Meta<DialogComponentWrapper> = {\n  title: \"Molecules/Dialog\",\n  component: DialogComponentWrapper,\n  argTypes: {\n    title: { control: \"text\" },\n  },\n  args: { title: \"Modal element\" },\n};\n\nexport default config;\nexport const DialogStory: StoryObj<DialogComponentWrapper> = { name: \"Dialog\" };\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "EditIconComponent",
            "id": "component-EditIconComponent-abbd9516d3441e2556b62e93ffb0ea1b449fc972fd4d87bd1da1e1315ec9a6b2aab4cf8934c7338ec37737d4df9e1e93f1db34b44ca6d72711ef5c26582c7a68",
            "file": "src/app/components/Atoms/EditIcon/edit-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<!--basil:edit-outline-->\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n  <path\n    fill=\"currentColor\"\n    fill-rule=\"evenodd\"\n    d=\"M21.455 5.416a.75.75 0 0 1-.096.943l-9.193 9.192a.75.75 0 0 1-.34.195l-3.829 1a.75.75 0 0 1-.915-.915l1-3.828a.8.8 0 0 1 .161-.312L17.47 2.47a.75.75 0 0 1 1.06 0l2.829 2.828a1 1 0 0 1 .096.118m-1.687.412L18 4.061l-8.518 8.518l-.625 2.393l2.393-.625z\"\n    clip-rule=\"evenodd\"\n  />\n  <path\n    fill=\"currentColor\"\n    d=\"M19.641 17.16a44.4 44.4 0 0 0 .261-7.04a.4.4 0 0 1 .117-.3l.984-.984a.198.198 0 0 1 .338.127a46 46 0 0 1-.21 8.372c-.236 2.022-1.86 3.607-3.873 3.832a47.8 47.8 0 0 1-10.516 0c-2.012-.225-3.637-1.81-3.873-3.832a46 46 0 0 1 0-10.67c.236-2.022 1.86-3.607 3.873-3.832a48 48 0 0 1 7.989-.213a.2.2 0 0 1 .128.34l-.993.992a.4.4 0 0 1-.297.117a46 46 0 0 0-6.66.255a2.89 2.89 0 0 0-2.55 2.516a44.4 44.4 0 0 0 0 10.32a2.89 2.89 0 0 0 2.55 2.516c3.355.375 6.827.375 10.183 0a2.89 2.89 0 0 0 2.55-2.516\"\n  />\n</svg>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-edit-icon\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <!--basil:edit-outline-->\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        fill-rule=\"evenodd\"\n        d=\"M21.455 5.416a.75.75 0 0 1-.096.943l-9.193 9.192a.75.75 0 0 1-.34.195l-3.829 1a.75.75 0 0 1-.915-.915l1-3.828a.8.8 0 0 1 .161-.312L17.47 2.47a.75.75 0 0 1 1.06 0l2.829 2.828a1 1 0 0 1 .096.118m-1.687.412L18 4.061l-8.518 8.518l-.625 2.393l2.393-.625z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M19.641 17.16a44.4 44.4 0 0 0 .261-7.04a.4.4 0 0 1 .117-.3l.984-.984a.198.198 0 0 1 .338.127a46 46 0 0 1-.21 8.372c-.236 2.022-1.86 3.607-3.873 3.832a47.8 47.8 0 0 1-10.516 0c-2.012-.225-3.637-1.81-3.873-3.832a46 46 0 0 1 0-10.67c.236-2.022 1.86-3.607 3.873-3.832a48 48 0 0 1 7.989-.213a.2.2 0 0 1 .128.34l-.993.992a.4.4 0 0 1-.297.117a46 46 0 0 0-6.66.255a2.89 2.89 0 0 0-2.55 2.516a44.4 44.4 0 0 0 0 10.32a2.89 2.89 0 0 0 2.55 2.516c3.355.375 6.827.375 10.183 0a2.89 2.89 0 0 0 2.55-2.516\"\n      />\n    </svg>\n  `,\n  styleUrl: \"../AbstractIconStyles/styles.css\",\n})\nexport class EditIconComponent {}\n",
            "styleUrl": "../AbstractIconStyles/styles.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-f9b7d0d213af72e9275f56a62fc82228d211476f89d7972504e8952f100989b756cf8e3934c807cdd04c13ebd714a081d56fa3eea0de6d3cf48a3be216e95e06",
            "file": "src/app/components/Atoms/Error/error.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [],
            "styles": [],
            "template": "@if (errors()) {\n  <small\n    [title]=\"errors()\"\n    class=\"block cursor-default truncate text-red-600\"\n  >\n    {{ errors() }}\n  </small>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errors",
                    "defaultValue": "input<string | undefined | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-error\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    @if (errors()) {\n      <small\n        [title]=\"errors()\"\n        class=\"block cursor-default truncate text-red-600\"\n      >\n        {{ errors() }}\n      </small>\n    }\n  `,\n})\nexport class ErrorComponent {\n  readonly errors = input<string | undefined | null>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ErrorWrapperComponent",
            "id": "component-ErrorWrapperComponent-a7fadf0afe888e7b99368eadd9760cec732643b7ea9ee5d1aad62fbdf15eac66207b041dc0c3c88b1c41fc50c2445ad0faec24e77ae8a5ad35bd9f0223fcde22",
            "file": "src/app/components/Atoms/Error/error.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-error-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div    class=\"inline-block border-1 border-dotted border-neutral-400\"\n    [ngStyle]=\"{ width: width() }\"\n  >\n    <app-error [errors]=\"errors()\" />\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "containerCharWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "containerCharWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "width",
                    "defaultValue": "computed(() => `${this.containerCharWidth()}ch`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ErrorComponent",
                    "type": "component"
                },
                {
                    "name": "NgStyle"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgStyle } from \"@angular/common\";\nimport { Component, computed, input } from \"@angular/core\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { ErrorComponent } from \"./error.component\";\n\n@Component({\n  selector: \"storybook-error-wrapper\",\n  imports: [ErrorComponent, NgStyle],\n  template: `<div\n    class=\"inline-block border-1 border-dotted border-neutral-400\"\n    [ngStyle]=\"{ width: width() }\"\n  >\n    <app-error [errors]=\"errors()\" />\n  </div>`,\n})\nclass ErrorWrapperComponent {\n  readonly errors = input<string>();\n  readonly containerCharWidth = input.required<number>();\n  protected readonly width = computed(() => `${this.containerCharWidth()}ch`);\n}\nconst config: Meta<ErrorWrapperComponent> = {\n  component: ErrorWrapperComponent,\n  title: \"Atoms/Error\",\n  argTypes: {\n    errors: { control: \"text\" },\n    containerCharWidth: { control: \"number\" },\n  },\n  args: {\n    errors: \"Required.\",\n    containerCharWidth: 100,\n  },\n};\n\nexport default config;\n\nexport const ErrorStory: StoryObj<ErrorWrapperComponent> = { name: \"Error\" };\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "FormInputComponent",
            "id": "component-FormInputComponent-11428406d8a38e3b9c4f1eaace6f81cc1f14af4a017d677e68cfe6f1b0913a44761878d0b9df8041d868eead228853e7b693c50e3e39fed014f439d5c53fca20",
            "file": "src/app/components/Organisms/FormInput/form-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [],
            "styles": [],
            "template": "<app-input-wrapper [control]=\"control()\">\n  <app-input [type]=\"type()\" [label]=\"label()\" [formControl]=\"control()\" />\n</app-input-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "type",
                    "defaultValue": "input<SimpleInputType>(\"text\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "InputWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport { type FormControl, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  InputComponent,\n  type SimpleInputType,\n} from \"../../Molecules/Input/input.component\";\nimport { InputWrapperComponent } from \"../../Molecules/InputWrapper/input-wrapper.component\";\n\n@Component({\n  selector: \"app-form-input\",\n  imports: [InputWrapperComponent, InputComponent, ReactiveFormsModule],\n  template: `\n    <app-input-wrapper [control]=\"control()\">\n      <app-input [type]=\"type()\" [label]=\"label()\" [formControl]=\"control()\" />\n    </app-input-wrapper>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormInputComponent {\n  readonly control = input.required<FormControl>();\n  readonly type = input<SimpleInputType>(\"text\");\n  readonly label = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "FormWrapperComponent",
            "id": "component-FormWrapperComponent-3ed35a872c1c9a8dba690edff864bf5ea5aee00f58a344886e15b4193787fb7e5336e70a92fb8167a5d5aee16618f5577d9d4b667ba076215aa8087dc0c3a018",
            "file": "src/app/components/Molecules/FormWrapper/form-wrapper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-wrapper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "focusOnRender",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Should the first available input be focused when the component loads?\nDefaults to <code>true</code>.</p>\n",
                    "line": 38,
                    "rawdescription": "\nShould the first available input be focused when the component loads?\nDefaults to `true`.",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "showGoBack",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "submitLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "submitAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "focusOnRender",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Should the first available input be focused when the component loads?\nDefaults to <code>true</code>.</p>\n",
                    "line": 38,
                    "rawdescription": "\nShould the first available input be focused when the component loads?\nDefaults to `true`.",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "formRef",
                    "defaultValue": "viewChild.required<ElementRef<HTMLFormElement>>(\"ref\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "formRegisterService",
                    "defaultValue": "inject(FormRegisterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "showGoBack",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "submitAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "submitLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "SubmitButtonComponent",
                    "type": "component"
                },
                {
                    "name": "ResultStatusComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  type ElementRef,\n  inject,\n  input,\n  type OnDestroy,\n  output,\n  viewChild,\n} from \"@angular/core\";\nimport { type FormGroup, ReactiveFormsModule } from \"@angular/forms\";\nimport { FormRegisterService } from \"../../../services/form-register.service\";\nimport type { ResultStatus } from \"../../../services/form.service\";\nimport { ButtonComponent } from \"../../Atoms/Button/button.component\";\nimport { SubmitButtonComponent } from \"../SubmitButton/submit-button.component\";\nimport { ResultStatusComponent } from \"./ResultStatus/result-status.component\";\n\n@Component({\n  selector: \"app-form-wrapper\",\n  imports: [\n    ReactiveFormsModule,\n    ButtonComponent,\n    SubmitButtonComponent,\n    ResultStatusComponent,\n  ],\n  templateUrl: \"./form-wrapper.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormWrapperComponent implements OnDestroy {\n  readonly submitLabel = input.required<string>();\n  readonly formGroup = input.required<FormGroup>();\n  readonly resultStatus = input.required<ResultStatus>();\n  readonly showGoBack = input<boolean>(true);\n  readonly successLabel = input.required<string>();\n  /** Should the first available input be focused when the component loads?\n   * Defaults to `true`. */\n  readonly focusOnRender = input<boolean>(true);\n\n  readonly submitAction = output();\n  readonly goBack = output();\n\n  protected readonly formRef =\n    viewChild.required<ElementRef<HTMLFormElement>>(\"ref\");\n  protected readonly formRegisterService = inject(FormRegisterService);\n\n  constructor() {\n    afterNextRender(() => {\n      this.formRegisterService.ref = this.formRef();\n      if (this.focusOnRender()) {\n        this.formRef()\n          .nativeElement.querySelector<HTMLElement>(\".ng-pristine\")\n          ?.focus();\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.formRegisterService.ref = null;\n  }\n\n  onSubmit() {\n    this.submitAction.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div class=\"flex w-fit flex-col items-center gap-3\">\n  <form\n    [formGroup]=\"formGroup()\"\n    (keydown.control.enter)=\"onSubmit()\"\n    #ref\n    class=\"flex flex-col items-center gap-5\"\n  >\n    <ng-content />\n    <div class=\"flex gap-4\">\n      @if (showGoBack()) {\n        <app-button type=\"button\" variant=\"cancel\" (clicked)=\"goBack.emit()\"\n          >Back</app-button\n        >\n      }\n      <app-submit-button\n        [label]=\"submitLabel()\"\n        [isSubmitting]=\"resultStatus().status === 'submitting'\"\n        [disabled]=\"formGroup().pristine\"\n      />\n    </div>\n  </form>\n  <div class=\"mt-2 flex justify-center\">\n    <app-form-result-status\n      [successLabel]=\"successLabel()\"\n      [resultStatus]=\"resultStatus()\"\n    />\n  </div>\n</div>\n"
        },
        {
            "name": "HomepageComponent",
            "id": "component-HomepageComponent-4120ed2d96c514b4789eee6ed5c1bda4ab1b84ce55c150aa9f4f6a14b9ac7b829f14228e6ab96120dc54dbe8f76107117a4ad1c5100f211658a1459476025f2a",
            "file": "src/app/components/Pages/Homepage/homepage.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: BlogPreviewServiceToken, useClass: HomepagePreviewService }",
                    "type": "injectable"
                }
            ],
            "selector": "app-homepage",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "../../Templates/BlogPreviews/blog-previews.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "authenticated",
                    "defaultValue": "inject(AuthenticationService).authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "blogPreviewService",
                    "defaultValue": "inject(BlogPreviewServiceToken)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "blogs",
                    "defaultValue": "signal<BlogSummaryDto[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "canLoadMore",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Loading more items is only allowed if a request for blogs does not\nreturn an empty array.</p>\n",
                    "line": 32,
                    "rawdescription": "\nLoading more items is only allowed if a request for blogs does not\nreturn an empty array.",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "limit",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "loadMore$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getBlogs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "BlogPreviewComponent",
                    "type": "component"
                },
                {
                    "name": "PageWrapperWithLoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { BlogPreviewServiceToken } from \"../../../services/blog-preview.service\";\nimport { BlogPreviewComponent } from \"../../Organisms/BlogPreview/blog-preview.component\";\nimport { BlogPreviewTemplate } from \"../../Templates/BlogPreviews/blog-previews.component\";\nimport { PageWrapperWithLoadingComponent } from \"../../Templates/PageWrapperWithLoading/page-wrapper-with-loading.component\";\nimport { HomepagePreviewService } from \"./homepage-previews.service\";\n\n@Component({\n  selector: \"app-homepage\",\n  templateUrl: \"../../Templates/BlogPreviews/blog-previews.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: BlogPreviewServiceToken, useClass: HomepagePreviewService },\n  ],\n  imports: [BlogPreviewComponent, PageWrapperWithLoadingComponent],\n})\nexport class HomepageComponent extends BlogPreviewTemplate {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BlogPreviewTemplate"
            ],
            "templateData": "<app-page-wrapper-with-loading\n  [pageTitle]=\"blogPreviewService.pageTitle\"\n  (intersectionEvent)=\"loadMore$.next()\"\n>\n  <div class=\"flex justify-center\">\n    @if (blogs().length) {\n      <ul class=\"flex list-none flex-col gap-5\">\n        @for (blog of blogs(); track blog.id) {\n          <li>\n            <app-blog-preview\n              [data]=\"blog\"\n              (deleteAction)=\"handleDelete(blog.id)\"\n            />\n          </li>\n        }\n      </ul>\n    } @else {\n      <p>No blogs published yet</p>\n    }\n  </div>\n</app-page-wrapper-with-loading>\n"
        },
        {
            "name": "HomepageComponent",
            "id": "component-HomepageComponent-cad0b2eb12f80bcd4964c9cf45a78fae7c6fe7c866e094bf6068c743e28c55889c907e8804d8d5a763eded15e1543024481590fb4ac819c4193edb00e0248787-1",
            "file": "src/app/components/Pages/UserBlogs/user-blogs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: BlogPreviewServiceToken, useClass: UserBlogsPreviewService }",
                    "type": "injectable"
                }
            ],
            "selector": "app-user-blogs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "../../Templates/BlogPreviews/blog-previews.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "authenticated",
                    "defaultValue": "inject(AuthenticationService).authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "blogPreviewService",
                    "defaultValue": "inject(BlogPreviewServiceToken)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "blogs",
                    "defaultValue": "signal<BlogSummaryDto[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "canLoadMore",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Loading more items is only allowed if a request for blogs does not\nreturn an empty array.</p>\n",
                    "line": 32,
                    "rawdescription": "\nLoading more items is only allowed if a request for blogs does not\nreturn an empty array.",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "limit",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "loadMore$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getBlogs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<BlogSummaryDto[]>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "postId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BlogPreviewTemplate"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "BlogPreviewComponent",
                    "type": "component"
                },
                {
                    "name": "PageWrapperWithLoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { BlogPreviewServiceToken } from \"../../../services/blog-preview.service\";\nimport { BlogPreviewComponent } from \"../../Organisms/BlogPreview/blog-preview.component\";\nimport { BlogPreviewTemplate } from \"../../Templates/BlogPreviews/blog-previews.component\";\nimport { PageWrapperWithLoadingComponent } from \"../../Templates/PageWrapperWithLoading/page-wrapper-with-loading.component\";\nimport { UserBlogsPreviewService } from \"./user-blogs.service\";\n\n@Component({\n  selector: \"app-user-blogs\",\n  templateUrl: \"../../Templates/BlogPreviews/blog-previews.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: BlogPreviewServiceToken, useClass: UserBlogsPreviewService },\n  ],\n  imports: [BlogPreviewComponent, PageWrapperWithLoadingComponent],\n})\nexport class HomepageComponent extends BlogPreviewTemplate {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BlogPreviewTemplate"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HomepageComponent-1",
            "templateData": "<app-page-wrapper-with-loading\n  [pageTitle]=\"blogPreviewService.pageTitle\"\n  (intersectionEvent)=\"loadMore$.next()\"\n>\n  <div class=\"flex justify-center\">\n    @if (blogs().length) {\n      <ul class=\"flex list-none flex-col gap-5\">\n        @for (blog of blogs(); track blog.id) {\n          <li>\n            <app-blog-preview\n              [data]=\"blog\"\n              (deleteAction)=\"handleDelete(blog.id)\"\n            />\n          </li>\n        }\n      </ul>\n    } @else {\n      <p>No blogs published yet</p>\n    }\n  </div>\n</app-page-wrapper-with-loading>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-412f9e21dc6a124bbfe78aa005a4bafd6b6906b80a471922aa7de9a9a2552d0d9f2bca1cb9db8814820fc2b2f3a0c8677444be6de078891949e2cbb9266b96c7",
            "file": "src/app/components/Molecules/Input/input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: inline-block;\n    }\n    [aria-invalid=\"true\"] {\n      outline: 2px solid red;\n    }\n  "
            ],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional errId identifier. If input is empty, the component will check if <code>IdService</code>\nis provided to the host element and use it&#39;s <code>id</code> to mark the error id component.</p>\n",
                    "line": 58,
                    "rawdescription": "\nOptional errId identifier. If input is empty, the component will check if `IdService`\nis provided to the host element and use it's `id` to mark the error id component.",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "canLabelTransition",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "computedErrId",
                    "defaultValue": "computed(\n    () => this.errId() ?? this.idService?.id,\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "controlClass",
                    "defaultValue": "clsx(\n    this.inputClass,\n    \"input-element border-1 peer inline-block rounded border-neutral-400 p-1.5 placeholder-transparent transition-colors disabled:cursor-not-allowed disabled:opacity-75\",\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "disabled",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "elementRef",
                    "defaultValue": "inject<ElementRef<HTMLElement>>(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "errId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional errId identifier. If input is empty, the component will check if <code>IdService</code>\nis provided to the host element and use it&#39;s <code>id</code> to mark the error id component.</p>\n",
                    "line": 58,
                    "rawdescription": "\nOptional errId identifier. If input is empty, the component will check if `IdService`\nis provided to the host element and use it's `id` to mark the error id component.",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "idService",
                    "defaultValue": "inject(IdService, {\n    host: true,\n    optional: true,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "inputClass",
                    "defaultValue": "\"input-element\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "inputId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FunctionType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FunctionType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "input<SimpleInputType>(\"text\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>(\"\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "focus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "FunctionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "FunctionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "FunctionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "FunctionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transformToString",
                    "args": [
                        {
                            "name": "val",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  ElementRef,\n  forwardRef,\n  inject,\n  input,\n  signal,\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport clsx from \"clsx\";\nimport { asapScheduler } from \"rxjs\";\nimport { v4 } from \"uuid\";\nimport { IdService } from \"../../../services/id.service\";\n\ntype FunctionType = (...args: unknown[]) => unknown;\n\nexport type SimpleInputType =\n  | \"number\"\n  | \"date\"\n  | \"email\"\n  | \"password\"\n  | \"text\"\n  | \"textarea\";\n\n@Component({\n  selector: \"app-input\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true,\n    },\n  ],\n  host: {\n    \"[attr.tabindex]\": \"-1\",\n    /** Focusing the host means focusing the input */\n    \"(focus)\": \"focus()\",\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./input.component.html\",\n  styles: `\n    :host {\n      display: inline-block;\n    }\n    [aria-invalid=\"true\"] {\n      outline: 2px solid red;\n    }\n  `,\n})\nexport class InputComponent {\n  readonly label = input.required<string>();\n  readonly type = input<SimpleInputType>(\"text\");\n  /** Optional errId identifier. If input is empty, the component will check if `IdService`\n   * is provided to the host element and use it's `id` to mark the error id component. */\n  readonly errId = input<string>();\n  readonly name = input<string>();\n  protected elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly idService = inject(IdService, {\n    host: true,\n    optional: true,\n  });\n\n  protected onChange: FunctionType = () => {};\n  protected onTouch: FunctionType = () => {};\n\n  constructor() {\n    /** Prevent transitions from firing on initial render. */\n    afterNextRender(() => {\n      asapScheduler.schedule(() => {\n        this.canLabelTransition.set(true);\n      });\n    });\n  }\n\n  protected readonly value = signal<string>(\"\");\n  protected readonly isInvalid = signal<boolean>(false);\n  protected readonly computedErrId = computed(\n    () => this.errId() ?? this.idService?.id,\n  );\n  protected disabled = signal(false);\n  protected readonly inputClass = \"input-element\";\n  protected readonly controlClass = clsx(\n    this.inputClass,\n    \"input-element border-1 peer inline-block rounded border-neutral-400 p-1.5 placeholder-transparent transition-colors disabled:cursor-not-allowed disabled:opacity-75\",\n  );\n  protected inputId = v4();\n  protected canLabelTransition = signal(false);\n\n  /** Errors are recognized for dirty elements with an ng-invalid class */\n  get hasErrors() {\n    return (\n      this.elementRef.nativeElement.classList.contains(\"ng-invalid\") &&\n      !this.elementRef.nativeElement.classList.contains(\"ng-pristine\")\n    );\n  }\n\n  get inputEl() {\n    return this.elementRef.nativeElement.querySelector<\n      HTMLInputElement | HTMLTextAreaElement\n    >(`.${this.inputClass}`);\n  }\n\n  focus() {\n    this.inputEl?.focus();\n  }\n\n  input(ev: Event) {\n    const type = this.type();\n    const value = (ev.currentTarget as HTMLInputElement | HTMLTextAreaElement)\n      .value;\n    const parsed =\n      type === \"number\"\n        ? Number(value)\n        : type === \"date\"\n          ? new Date(value)\n          : value;\n\n    this.value.set(value);\n    this.onChange(parsed);\n  }\n\n  writeValue(val: unknown): void {\n    const transformed = this.transformToString(val);\n    if (this.value() !== transformed) this.value.set(transformed);\n  }\n\n  registerOnTouched(fn: FunctionType): void {\n    this.onTouch = fn;\n  }\n  registerOnChange(fn: FunctionType): void {\n    this.onChange = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n\n  protected transformToString(val: unknown): string {\n    if (val === null || val === undefined) return \"\";\n    if (typeof val === \"string\") return val;\n    if (val instanceof Date) {\n      const isoDate = val.toISOString();\n      return isoDate.split(\"T\")[0] as string;\n    }\n    if (val instanceof Number) {\n      return val.toString();\n    }\n    return \"\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: inline-block;\n    }\n    [aria-invalid=\"true\"] {\n      outline: 2px solid red;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 67
            },
            "extends": [],
            "accessors": {
                "hasErrors": {
                    "name": "hasErrors",
                    "getSignature": {
                        "name": "hasErrors",
                        "type": "",
                        "returnType": "",
                        "line": 93,
                        "rawdescription": "\nErrors are recognized for dirty elements with an ng-invalid class",
                        "description": "<p>Errors are recognized for dirty elements with an ng-invalid class</p>\n"
                    }
                },
                "inputEl": {
                    "name": "inputEl",
                    "getSignature": {
                        "name": "inputEl",
                        "type": "",
                        "returnType": "",
                        "line": 100
                    }
                }
            },
            "templateData": "<div class=\"relative mt-2 bg-inherit\">\n  @if (type() !== \"textarea\") {\n    <input\n      [class]=\"controlClass\"\n      [id]=\"inputId\"\n      [attr.name]=\"name() ?? null\"\n      [disabled]=\"disabled()\"\n      [placeholder]=\"label()\"\n      [value]=\"value()\"\n      (input)=\"input($event)\"\n      [type]=\"type()\"\n      [attr.aria-invalid]=\"hasErrors\"\n      [attr.aria-errormessage]=\"computedErrId()\"\n    />\n  } @else {\n    <textarea\n      [class]=\"controlClass\"\n      [id]=\"inputId\"\n      [attr.name]=\"name() ?? null\"\n      rows=\"10\"\n      cols=\"60\"\n      [disabled]=\"disabled()\"\n      [placeholder]=\"label()\"\n      [value]=\"value()\"\n      (input)=\"input($event)\"\n      [attr.aria-invalid]=\"hasErrors\"\n      [attr.aria-errormessage]=\"computedErrId()\"\n    ></textarea>\n  }\n  <label\n    [class.transition-all]=\"canLabelTransition()\"\n    class=\"absolute -top-2 left-2.5 z-10 inline-block cursor-text bg-white text-xs text-neutral-700 peer-placeholder-shown:top-[8.5px] peer-placeholder-shown:text-sm peer-focus-visible:-top-2 peer-focus-visible:text-xs peer-disabled:select-none\"\n    [for]=\"inputId\"\n    [id]=\"`${inputId}-label`\"\n    >{{ label() }}\n  </label>\n</div>\n"
        },
        {
            "name": "InputWrapperComponent",
            "id": "component-InputWrapperComponent-086ca4a7f36faa6b9ad31b0dd5eaff0d2910bd8e26850635cbd4807c81d755b412e2b3cde53efc0360cd38fb0cc89392bab10cb4d8508db00a86e6d76bb6bd4d",
            "file": "src/app/components/Molecules/Input/input.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div [formGroup]=\"form\">   <app-input\n     [type]=\"type()\"\n     [name]=\"name()\"\n     [label]=\"label()\"\n     formControlName=\"control\"\n     errId=\"errId\"\n   />\n   @if (form.controls.control.errors) {\n     <span id=\"errId\" aria-live=\"polite\"></span>\n   }\n </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    control: new FormControl(this.value(), {\n      nonNullable: true,\n      validators: [Validators.minLength(5), Validators.required],\n    }),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "inputId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  input,\n} from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { v4 } from \"uuid\";\nimport { InputComponent, type SimpleInputType } from \"./input.component\";\n\n@Component({\n  selector: \"storybook-input\",\n  imports: [InputComponent, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <div [formGroup]=\"form\">\n    <app-input\n      [type]=\"type()\"\n      [name]=\"name()\"\n      [label]=\"label()\"\n      formControlName=\"control\"\n      errId=\"errId\"\n    />\n    @if (form.controls.control.errors) {\n      <span id=\"errId\" aria-live=\"polite\"></span>\n    }\n  </div>`,\n})\nclass InputWrapperComponent {\n  readonly type = input.required<SimpleInputType>();\n  readonly label = input.required<string>();\n  readonly name = input<string>();\n  protected inputId = v4();\n\n  readonly disabled = input(false);\n  readonly value = input<string>();\n  form = new FormGroup({\n    control: new FormControl(this.value(), {\n      nonNullable: true,\n      validators: [Validators.minLength(5), Validators.required],\n    }),\n  });\n\n  constructor() {\n    effect(() => {\n      const control = this.form.controls.control;\n      if (control.value === this.value()) return;\n      control.patchValue(this.value());\n    });\n    effect(() => {\n      if (this.disabled()) {\n        this.form.disable();\n      } else {\n        this.form.enable();\n      }\n    });\n  }\n}\n\nconst config: Meta<InputWrapperComponent> = {\n  component: InputWrapperComponent,\n  title: \"Molecules/Input\",\n  argTypes: {\n    disabled: { control: \"boolean\" },\n    type: {\n      control: \"inline-radio\",\n      options: [\"text\", \"number\", \"date\", \"email\", \"password\", \"textarea\"],\n    },\n    label: { control: \"text\" },\n    value: { control: \"text\" },\n    name: { control: \"text\" },\n  },\n  args: {\n    disabled: false,\n    type: \"text\",\n    label: \"Input label\",\n    value: \"Initial value\",\n  },\n};\nexport default config;\n\nexport const InputStory: StoryObj<InputWrapperComponent> = { name: \"Input\" };\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 47
            },
            "extends": []
        },
        {
            "name": "InputWrapperComponent",
            "id": "component-InputWrapperComponent-7e8b7063914a7ba5639aba0398906598eeff7105e4967710ccb1f7e576a89e7f5e6e783aa412026765be23225a468bcc11a7cd9d6d01840cc9bf5dc434884d74-1",
            "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "IdService",
                    "type": "injectable"
                }
            ],
            "selector": "app-input-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-wrapper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "errId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "idService",
                    "defaultValue": "inject(IdService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ErrorComponent",
                    "type": "component"
                },
                {
                    "name": "ParseErrorPipe",
                    "type": "pipe"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from \"@angular/core\";\nimport type { AbstractControl } from \"@angular/forms\";\nimport { v4 } from \"uuid\";\nimport { ParseErrorPipe } from \"../../../pipes/parse-error.pipe\";\nimport { IdService } from \"../../../services/id.service\";\nimport { ErrorComponent } from \"../../Atoms/Error/error.component\";\n\n@Component({\n  selector: \"app-input-wrapper\",\n  templateUrl: \"./input-wrapper.component.html\",\n  imports: [ErrorComponent, ParseErrorPipe, AsyncPipe],\n  providers: [IdService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputWrapperComponent {\n  readonly errId = v4();\n  readonly control = input.required<AbstractControl>();\n  protected readonly idService = inject(IdService);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "InputWrapperComponent-1",
            "templateData": "<div class=\"relative\">\n  <ng-content />\n  <div class=\"absolute left-0 top-[100%]\" [id]=\"idService.id\">\n    <app-error [errors]=\"control() | parseError | async\" />\n  </div>\n</div>\n"
        },
        {
            "name": "InputWrapperStoryComponent",
            "id": "component-InputWrapperStoryComponent-bf05395787a7af6994d1816735da301a5ea196d3a7f9d080c936e0f00390d532fdc92270ba31e1fae70e5d3e9879c0bb0b0858e59c0c1e7838a1bdc8ac21f12e",
            "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-text-input-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<form [formGroup]=\"form\">\n  <div class=\"flex flex-col items-start gap-5\">\n    <div class=\"flex w-max flex-nowrap gap-3\">\n      <app-input-wrapper [control]=\"text\"\n        ><app-input type=\"text\" formControlName=\"text\" [label]=\"label()\"\n      /></app-input-wrapper>\n      <p class=\"mt-2 text-sm whitespace-nowrap\">\n        Control value: {{ form.controls.text.value }}\n      </p>\n    </div>\n    <div class=\"flex gap-4\">\n      <button\n        class=\"w-[8ch] cursor-pointer rounded border-1 border-neutral-500 p-2 text-center text-sm hover:bg-neutral-100\"\n        (click)=\"toggleDisabled()\"\n      >\n        {{ form.disabled ? \"Enable\" : \"Disable\" }}\n      </button>\n      <button\n        class=\"w-[8ch] cursor-pointer rounded border-1 border-neutral-500 p-2 text-center text-sm hover:bg-neutral-100\"\n        (click)=\"reset()\"\n      >\n        Reset\n      </button>\n    </div>\n  </div>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    text: this.fb.control(\"\", {\n      validators: [Validators.required, Validators.minLength(5)],\n    }),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "label",
                    "defaultValue": "input<string>(\"Control label\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "InputWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from \"@angular/core\";\nimport { FormBuilder, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { InputComponent } from \"../Input/input.component\";\nimport { InputWrapperComponent } from \"./input-wrapper.component\";\n\n@Component({\n  selector: \"storybook-text-input-wrapper\",\n  imports: [InputWrapperComponent, InputComponent, ReactiveFormsModule],\n  template: `\n    <form [formGroup]=\"form\">\n      <div class=\"flex flex-col items-start gap-5\">\n        <div class=\"flex w-max flex-nowrap gap-3\">\n          <app-input-wrapper [control]=\"text\"\n            ><app-input type=\"text\" formControlName=\"text\" [label]=\"label()\"\n          /></app-input-wrapper>\n          <p class=\"mt-2 text-sm whitespace-nowrap\">\n            Control value: {{ form.controls.text.value }}\n          </p>\n        </div>\n        <div class=\"flex gap-4\">\n          <button\n            class=\"w-[8ch] cursor-pointer rounded border-1 border-neutral-500 p-2 text-center text-sm hover:bg-neutral-100\"\n            (click)=\"toggleDisabled()\"\n          >\n            {{ form.disabled ? \"Enable\" : \"Disable\" }}\n          </button>\n          <button\n            class=\"w-[8ch] cursor-pointer rounded border-1 border-neutral-500 p-2 text-center text-sm hover:bg-neutral-100\"\n            (click)=\"reset()\"\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    </form>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass InputWrapperStoryComponent {\n  readonly label = input<string>(\"Control label\");\n  protected fb = inject(FormBuilder);\n  protected form = this.fb.group({\n    text: this.fb.control(\"\", {\n      validators: [Validators.required, Validators.minLength(5)],\n    }),\n  });\n  get text() {\n    return this.form.controls.text;\n  }\n\n  reset() {\n    this.form.reset();\n  }\n\n  toggleDisabled() {\n    this.form[this.form.enabled ? \"disable\" : \"enable\"]();\n  }\n}\n\nconst config: Meta<InputWrapperStoryComponent> = {\n  component: InputWrapperStoryComponent,\n  argTypes: { label: { control: \"text\" } },\n  args: { label: \"Control label\" },\n  title: \"Molecules/InputWrapper\",\n};\n\nexport default config;\n\nexport const Story: StoryObj<InputWrapperStoryComponent> = {\n  name: \"InputWrapper\",\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "text": {
                    "name": "text",
                    "getSignature": {
                        "name": "text",
                        "type": "",
                        "returnType": "",
                        "line": 53
                    }
                }
            }
        },
        {
            "name": "IntersectionEventComponent",
            "id": "component-IntersectionEventComponent-c3c8f2e0621bff34b820447eef1ebc552badc7f04a69ff36b6c2cef1109bfaf014dd0ac5c31168afec7ee08f962d21023e30d73b341eabd40f716ba56f567331",
            "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-intersection-event",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: block;\n    }\n  "
            ],
            "template": "<ng-content />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef) as ElementRef<HTMLElement>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isIntersecting$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  ElementRef,\n  inject,\n  output,\n} from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { finalize, Subject, tap } from \"rxjs\";\n\n@Component({\n  selector: \"app-intersection-event\",\n  template: \"<ng-content />\",\n  styles: `\n    :host {\n      display: block;\n    }\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IntersectionEventComponent {\n  readonly trigger = output();\n  protected elementRef = inject(ElementRef) as ElementRef<HTMLElement>;\n  protected destroyRef = inject(DestroyRef);\n  protected readonly isIntersecting$ = new Subject<boolean>();\n  constructor() {\n    afterNextRender(() => {\n      const observer = new IntersectionObserver(([entry]) => {\n        this.isIntersecting$.next(entry?.isIntersecting ?? false);\n      }, {});\n      observer.observe(this.elementRef.nativeElement);\n      this.isIntersecting$\n        .pipe(\n          tap((intersecting) => {\n            if (intersecting) {\n              this.trigger.emit();\n            }\n          }),\n          finalize(() => {\n            observer.disconnect();\n          }),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: block;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "extends": []
        },
        {
            "name": "IntersectionTriggerWrapperComponent",
            "id": "component-IntersectionTriggerWrapperComponent-c7acf3629df5107e3cd1bd9a2ec56d09b4bcb5293296d5109a74b16754979ff6a1d487b23f53f4fc5cbf0bdd50bb7d046170c4adf480e474ac419d36e071cfe0",
            "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-intersection-event",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"h-[200px] overflow-y-auto bg-neutral-200\">   <div class=\"h-[400px] w-full\"></div>\n   <app-intersection-event (trigger)=\"trigger.emit()\"\n     ><div class=\"bg-inherit\">Trigger block</div></app-intersection-event\n   >\n </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IntersectionEventComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, output } from \"@angular/core\";\nimport type { Meta, StoryObj } from \"@storybook/angular\";\nimport { IntersectionEventComponent } from \"./intersection-event.component\";\n\n@Component({\n  selector: \"storybook-intersection-event\",\n  imports: [IntersectionEventComponent],\n  template: ` <div class=\"h-[200px] overflow-y-auto bg-neutral-200\">\n    <div class=\"h-[400px] w-full\"></div>\n    <app-intersection-event (trigger)=\"trigger.emit()\"\n      ><div class=\"bg-inherit\">Trigger block</div></app-intersection-event\n    >\n  </div>`,\n})\nclass IntersectionTriggerWrapperComponent {\n  readonly trigger = output();\n}\n\nconst meta = {\n  title: \"Atoms/IntersectionEvent\",\n  component: IntersectionTriggerWrapperComponent,\n  argTypes: { trigger: { action: \"In viewport\" } },\n} satisfies Meta<IntersectionTriggerWrapperComponent>;\n\nexport default meta;\nexport const IntersectionStory: StoryObj<IntersectionTriggerWrapperComponent> =\n  { name: \"IntersectionEvent\" };\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoginFormComponent",
            "id": "component-LoginFormComponent-f9a74be7a03c45db226f2d2b26e26c19cfbd0a9d41f076d6b8738725784bc8710d90abbc579537fd878e3b53e30c443bdb0388624e61232df8e11d04eef58e59",
            "file": "src/app/components/Organisms/LoginForm/login-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "LoginFormService",
                    "type": "injectable"
                }
            ],
            "selector": "app-login-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.formService.form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "formService",
                    "defaultValue": "inject(LoginFormService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "goBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "resultStatus",
                    "defaultValue": "this.formService.resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "status",
                    "defaultValue": "outputFromObservable(toObservable(this.resultStatus))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "FormWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  output,\n} from \"@angular/core\";\nimport { outputFromObservable, toObservable } from \"@angular/core/rxjs-interop\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FormWrapperComponent } from \"../../Molecules/FormWrapper/form-wrapper.component\";\nimport { FormInputComponent } from \"../FormInput/form-input.component\";\nimport LoginFormService from \"./login-form.service\";\n\n@Component({\n  selector: \"app-login-form\",\n  imports: [FormWrapperComponent, ReactiveFormsModule, FormInputComponent],\n  providers: [LoginFormService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./login-form.component.html\",\n})\nexport class LoginFormComponent {\n  protected readonly formService = inject(LoginFormService);\n\n  protected form = this.formService.form;\n  protected readonly resultStatus = this.formService.resultStatus;\n\n  readonly status = outputFromObservable(toObservable(this.resultStatus));\n\n  readonly goBack = output();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-form-wrapper\n  successLabel=\"Login successful!\"\n  submitLabel=\"Login\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"formService.submit()\"\n  [resultStatus]=\"resultStatus()\"\n  (goBack)=\"goBack.emit()\"\n>\n  <app-form-input [control]=\"formService.username\" label=\"Username\" />\n  <app-form-input\n    [control]=\"formService.password\"\n    label=\"Password\"\n    type=\"password\"\n  />\n</app-form-wrapper>\n"
        },
        {
            "name": "LoginLogoutComponent",
            "id": "component-LoginLogoutComponent-976bd41b8f883ad27d3bd7d74757e378481e4a8196c46fd33e9e1121e12beaa4deff69a8142d74b6edc9f45275a061a87905f4baaea3d14e1d8d2fc09ea53afe",
            "file": "src/app/components/Organisms/NavBar/LoginLogout/login-logout.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-logout",
            "styleUrls": [],
            "styles": [],
            "template": "@if (!authenticated()) {\n  <app-navbar-link\n    [currentUrl]=\"currentUrl()\"\n    [href]=\"href()\"\n    [label]=\"label()\"\n  />\n} @else {\n  <button class=\"cursor-pointer\" (click)=\"logout.emit()\">Logout</button>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "NavbarLinkComponent"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NavbarLinkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n} from \"@angular/core\";\nimport { NavbarLinkComponent } from \"../NavbarLink/navbar-link.component\";\n\n@Component({\n  selector: \"app-login-logout\",\n  imports: [NavbarLinkComponent],\n  template: `\n    @if (!authenticated()) {\n      <app-navbar-link\n        [currentUrl]=\"currentUrl()\"\n        [href]=\"href()\"\n        [label]=\"label()\"\n      />\n    } @else {\n      <button class=\"cursor-pointer\" (click)=\"logout.emit()\">Logout</button>\n    }\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginLogoutComponent extends NavbarLinkComponent {\n  readonly authenticated = input.required<boolean>();\n  readonly logout = output();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "NavbarLinkComponent"
            ]
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-9d3e02814b0f8dee1e82272997eecc84c11bcf8429e882a0e72fcd107bed311e668e7e292436595d13fc296cf673ccba58e46a62d4ae6ad30ee440615a0d13ec",
            "file": "src/app/components/Pages/LoginPage/login-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-wrapper pageTitle=\"Login\">\n  <app-login-form (status)=\"handleStatus($event)\" (goBack)=\"goBack()\" />\n</app-page-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleStatus",
                    "args": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "ResultStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "LoginFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport navigateOnSuccess from \"../../../helpers/navigate-on-success\";\nimport type { ResultStatus } from \"../../../services/form.service\";\nimport { LoginFormComponent } from \"../../Organisms/LoginForm/login-form.component\";\nimport { PageWrapperComponent } from \"../../Templates/PageWrapper/page-wrapper.component\";\n\n@Component({\n  selector: \"app-login-page\",\n  imports: [PageWrapperComponent, LoginFormComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <app-page-wrapper pageTitle=\"Login\">\n      <app-login-form (status)=\"handleStatus($event)\" (goBack)=\"goBack()\" />\n    </app-page-wrapper>\n  `,\n})\nexport class LoginPageComponent {\n  protected readonly router = inject(Router);\n\n  protected handleStatus(result: ResultStatus) {\n    navigateOnSuccess({ router: this.router, path: \"/\", result });\n  }\n  goBack() {\n    void this.router.navigate([\"/\"]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-01a648f8ec247950c1d30fb0b5006de5d19317b57bc4a5a0a1df73b7a9948d8a2fb092528391fcc1c2e47f03aec8ec57dae71469e5dedb194ffd1f2ec4e41ffb",
            "file": "src/app/components/Organisms/NavBar/navbar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "routes",
                    "defaultValue": "{\n    Homepage: { href: \"/\", protected: false },\n    Create: { href: \"/blog/create\", protected: true },\n    \"My blogs\": { href: \"/blog/personal\", protected: true },\n    Login: { href: \"/login\", protected: false },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "preserverOrder",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "KeyValuePipe",
                    "type": "pipe"
                },
                {
                    "name": "NavbarLinkComponent",
                    "type": "component"
                },
                {
                    "name": "LoginLogoutComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { KeyValuePipe } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n} from \"@angular/core\";\nimport { LoginLogoutComponent } from \"./LoginLogout/login-logout.component\";\nimport { NavbarLinkComponent } from \"./NavbarLink/navbar-link.component\";\n\nexport const NAVBAR_ROUTES = {\n  Homepage: \"/\",\n  Login: \"/login\",\n} satisfies Record<string, string>;\nexport const AUTHENTICATED_ROUTES = { Create: \"/blog/create\" } satisfies Record<\n  string,\n  string\n>;\n\n@Component({\n  selector: \"app-navbar\",\n  imports: [KeyValuePipe, NavbarLinkComponent, LoginLogoutComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: \"./navbar.component.html\",\n})\nexport class NavbarComponent {\n  readonly authenticated = input.required<boolean>();\n  readonly currentUrl = input.required<string>();\n  readonly logout = output();\n\n  protected readonly routes = {\n    Homepage: { href: \"/\", protected: false },\n    Create: { href: \"/blog/create\", protected: true },\n    \"My blogs\": { href: \"/blog/personal\", protected: true },\n    Login: { href: \"/login\", protected: false },\n  };\n\n  protected preserverOrder() {\n    return 0;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"sticky top-0 z-10 bg-white p-2 text-sm text-cyan-800\">\n  <ul class=\"flex list-none justify-end gap-2.5\">\n    @for (route of routes | keyvalue: preserverOrder; track route.key) {\n      @let href = route.value.href;\n      @let protected = route.value.protected;\n      @let label = route.key;\n      @if (!protected || authenticated()) {\n        <li class=\"px-2\">\n          @if (label !== \"Login\") {\n            <app-navbar-link\n              [currentUrl]=\"currentUrl()\"\n              [href]=\"href\"\n              [label]=\"label\"\n            />\n          } @else {\n            <app-login-logout\n              [currentUrl]=\"currentUrl()\"\n              [href]=\"href\"\n              [label]=\"label\"\n              [authenticated]=\"authenticated()\"\n              (logout)=\"logout.emit()\"\n            />\n          }\n        </li>\n      }\n    }\n  </ul>\n</nav>\n"
        },
        {
            "name": "NavbarLinkComponent",
            "id": "component-NavbarLinkComponent-0c9bb791070903a63d4be3ce0b19914645727ae84938c5d772e23ecd371cfeb85b967fb00f51a65aee2b3b6564922f27fa1a0528219127842c814df729552e16",
            "file": "src/app/components/Organisms/NavBar/NavbarLink/navbar-link.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-link",
            "styleUrls": [],
            "styles": [],
            "template": "<a   [class.active]=\"currentUrl() === href()\"\n   class=\"underline-offset-7 [&.active]:pointer-events-none [&.active]:cursor-default [&.active]:underline\"\n   [routerLink]=\"href()\"\n   >{{ label() }}</a\n >",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport { RouterLink } from \"@angular/router\";\n\n@Component({\n  selector: \"app-navbar-link\",\n  imports: [RouterLink],\n  template: ` <a\n    [class.active]=\"currentUrl() === href()\"\n    class=\"underline-offset-7 [&.active]:pointer-events-none [&.active]:cursor-default [&.active]:underline\"\n    [routerLink]=\"href()\"\n    >{{ label() }}</a\n  >`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavbarLinkComponent {\n  readonly href = input.required<string>();\n  readonly label = input.required<string>();\n  readonly currentUrl = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-78d4fb107c5ea9ac1ec193514c84b1287f0db20b5d8e8472abfef9c9dc74c60bfb2b5b79a339d4da17214f394d7178d6231bea1a62a9751981d9bc4f4eb798ca",
            "file": "src/app/components/Organisms/NotFound/not-found.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <div class=\"wrapper\">\n    <div class=\"flex items-center justify-center\">\n      <h1 class=\"p-2 text-6xl font-light text-cyan-800 uppercase\">404</h1>\n    </div>\n    <div class=\"h-full w-[2px] bg-neutral-400\"></div>\n    <div class=\"flex flex-col gap-2\">\n      <p class=\"text-xl text-cyan-800 uppercase\">\n        This is not the page you are looking for\n      </p>\n      <p>\n        Redirecting to <a routerLink=\"/\" class=\"underline\">Homepage</a> in\n        <span>{{ countdown() }}</span>\n      </p>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "navigateEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "countdown",
                    "defaultValue": "computed(() => `${this.timeLimit()}s`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "navigateEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "timeLimit",
                    "defaultValue": "signal(5)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  effect,\n  inject,\n  output,\n  signal,\n} from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { RouterLink } from \"@angular/router\";\nimport { interval, takeWhile, tap } from \"rxjs\";\n\n@Component({\n  selector: \"app-not-found\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [RouterLink],\n  template: `\n    <div>\n      <div class=\"wrapper\">\n        <div class=\"flex items-center justify-center\">\n          <h1 class=\"p-2 text-6xl font-light text-cyan-800 uppercase\">404</h1>\n        </div>\n        <div class=\"h-full w-[2px] bg-neutral-400\"></div>\n        <div class=\"flex flex-col gap-2\">\n          <p class=\"text-xl text-cyan-800 uppercase\">\n            This is not the page you are looking for\n          </p>\n          <p>\n            Redirecting to <a routerLink=\"/\" class=\"underline\">Homepage</a> in\n            <span>{{ countdown() }}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: \"./not-found.component.css\",\n})\nexport class NotFoundComponent {\n  readonly navigateEvent = output();\n  protected readonly timeLimit = signal(5);\n  protected readonly countdown = computed(() => `${this.timeLimit()}s`);\n\n  protected destroyRef = inject(DestroyRef);\n  constructor() {\n    effect(() => {\n      if (this.timeLimit() === 0) {\n        this.navigateEvent.emit();\n      }\n    });\n    afterNextRender(() => {\n      interval(1e3)\n        .pipe(\n          tap(() => {\n            this.timeLimit.set(this.timeLimit() - 1);\n          }),\n          takeWhile(() => this.timeLimit() > 0),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe();\n    });\n  }\n}\n",
            "styleUrl": "./not-found.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "extends": []
        },
        {
            "name": "NotFoundPage",
            "id": "component-NotFoundPage-92748de6038fae4db88831c42e97cf539261f94cb2a12c205e947bf4a96a5d0cb6405786eb515dd15fd71b40baf9189f2a4f639b6ed06debd0aa69e95b72a2d1",
            "file": "src/app/components/Pages/404/404-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-404-page",
            "styleUrls": [],
            "styles": [],
            "template": "<main class=\"flex justify-center\">    <div class=\"mt-52\">\n      <app-not-found (navigateEvent)=\"handleRedirect()\" />\n    </div>\n  </main>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NotFoundComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { NotFoundComponent } from \"../../Organisms/NotFound/not-found.component\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-404-page\",\n  imports: [NotFoundComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<main class=\"flex justify-center\">\n    <div class=\"mt-52\">\n      <app-not-found (navigateEvent)=\"handleRedirect()\" />\n    </div>\n  </main>`,\n})\nexport class NotFoundPage {\n  protected router = inject(Router);\n\n  async handleRedirect() {\n    await this.router.navigateByUrl(\"/\");\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageTitleComponent",
            "id": "component-PageTitleComponent-760f5446815f7de33bdfb4680b56327f5ffaeeccaa059503c740e5421384ee86faa6a691e2d65049e7d80f4779e7e68cf25519a4c60afb4f4b380d3507bdbeb3",
            "file": "src/app/components/Atoms/PageTitle/page-title.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-title",
            "styleUrls": [],
            "styles": [],
            "template": "<h1   class=\"text-center text-3xl font-light uppercase text-cyan-800\"\n >\n   <ng-content />\n </h1>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-page-title\",\n  template: ` <h1\n    class=\"text-center text-3xl font-light uppercase text-cyan-800\"\n  >\n    <ng-content />\n  </h1>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageTitleComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageTitleWrapperComponent",
            "id": "component-PageTitleWrapperComponent-992235fdbd959a9c6df7b7375f8b75bc95f999218890b6a5eca00ba40fe6b00ef6c6a083bf16b229e5038ae8c93d437b6c8da8150f4debd1f01c7990d761c932",
            "file": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page-title",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-title>{{ title() }}</app-page-title>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageTitleComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { Meta, StoryObj } from \"@storybook/angular\";\nimport { PageTitleComponent } from \"./page-title.component\";\nimport { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\n\n@Component({\n  selector: \"storybook-page-title\",\n  imports: [PageTitleComponent],\n  template: `<app-page-title>{{ title() }}</app-page-title>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass PageTitleWrapperComponent {\n  readonly title = input.required<string>();\n}\n\nconst meta = {\n  title: \"Atoms/PageTitle\",\n  component: PageTitleWrapperComponent,\n  args: { title: \"Page title\" },\n} satisfies Meta<PageTitleWrapperComponent>;\n\nexport default meta;\n\nexport const PageTitle: StoryObj = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageWrapperComponent",
            "id": "component-PageWrapperComponent-c54679bd1e173ad4d0cd9cb48442377195998c53b507bbd9450590d1cafeb2b190304e98618081578603b02cdca49d7af96a13e8717a75807043645148af7f38",
            "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-wrapper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticated",
                    "defaultValue": "this.authService.authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthenticationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "locationService",
                    "defaultValue": "inject(LocationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageTitleComponent",
                    "type": "component"
                },
                {
                    "name": "BackLinkComponent",
                    "type": "component"
                },
                {
                    "name": "NavbarComponent",
                    "type": "component"
                }
            ],
            "description": "<p>Requires a <code>title</code> input. Optionally accepts a <code>subtitle</code> and <code>backLink</code> inputs.</p>\n",
            "rawdescription": "\nRequires a `title` input. Optionally accepts a `subtitle` and `backLink` inputs.",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from \"@angular/core\";\nimport { take } from \"rxjs\";\nimport { AuthenticationService } from \"../../../services/is-authenticated.service\";\nimport { LocationService } from \"../../../services/location.service\";\nimport { PageTitleComponent } from \"../../Atoms/PageTitle/page-title.component\";\nimport {\n  BackLinkComponent,\n  type BackLinkInput,\n} from \"../../Molecules/BackLink/back-link.component\";\nimport { NavbarComponent } from \"../../Organisms/NavBar/navbar.component\";\n\n/** Requires a `title` input. Optionally accepts a `subtitle` and `backLink` inputs. */\n@Component({\n  selector: \"app-page-wrapper\",\n  imports: [PageTitleComponent, BackLinkComponent, NavbarComponent],\n  templateUrl: \"./page-wrapper.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageWrapperComponent {\n  protected readonly authService = inject(AuthenticationService);\n  readonly authenticated = this.authService.authenticated;\n  readonly pageTitle = input.required<string>();\n  readonly subtitle = input<string>();\n  readonly backLink = input<BackLinkInput>();\n\n  protected locationService = inject(LocationService);\n\n  handleLogout() {\n    this.authService.logout().pipe(take(1)).subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"pb-5\">\n  <app-navbar\n    [currentUrl]=\"locationService.url\"\n    [authenticated]=\"authenticated()\"\n    (logout)=\"handleLogout()\"\n    class=\"mb-3 block\"\n  />\n  <div\n    class=\"mx-auto flex max-w-[1200px] flex-col items-center overflow-x-auto px-3\"\n  >\n    <div class=\"mb-8 w-full max-w-prose\">\n      <app-page-title class=\"justify-self-center\">\n        {{ pageTitle() }}\n      </app-page-title>\n      @if (subtitle(); as sub) {\n        <div class=\"mt-2 text-center text-sm text-neutral-500\">\n          <span>{{ sub }}</span>\n        </div>\n      }\n    </div>\n    <div class=\"relative\">\n      <ng-content />\n      @if (backLink(); as link) {\n        <div class=\"mt-3 flex justify-end\">\n          <div [style]=\"{ width: '32px', aspectRatio: 1 }\">\n            <app-back-link [backLink]=\"link\" />\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</main>\n"
        },
        {
            "name": "PageWrapperWithLoadingComponent",
            "id": "component-PageWrapperWithLoadingComponent-144226f2bdc243860def52f5b60c963736b2db7445f3c427c67eb6dbedb2ae3bcfc516e46f9630c87b0129287740de87f2f77b7c8f9a559ff66c862a41f70f5e",
            "file": "src/app/components/Templates/PageWrapperWithLoading/page-wrapper-with-loading.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-wrapper-with-loading",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-wrapper    [pageTitle]=\"pageTitle()\"\n    [subtitle]=\"subtitle()\"\n  >\n    <ng-content />\n    <app-intersection-event (trigger)=\"intersectionEvent.emit()\" />\n  </app-page-wrapper>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "intersectionEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "intersectionEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "authenticated",
                    "defaultValue": "this.authService.authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthenticationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "backLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "locationService",
                    "defaultValue": "inject(LocationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "PageWrapperComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "IntersectionEventComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, output } from \"@angular/core\";\nimport { PageWrapperComponent } from \"../PageWrapper/page-wrapper.component\";\nimport { IntersectionEventComponent } from \"../../Atoms/IntersectionEventComponent/intersection-event.component\";\n\n@Component({\n  selector: \"app-page-wrapper-with-loading\",\n  imports: [PageWrapperComponent, IntersectionEventComponent],\n  template: `<app-page-wrapper\n    [pageTitle]=\"pageTitle()\"\n    [subtitle]=\"subtitle()\"\n  >\n    <ng-content />\n    <app-intersection-event (trigger)=\"intersectionEvent.emit()\" />\n  </app-page-wrapper>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageWrapperWithLoadingComponent extends PageWrapperComponent {\n  readonly intersectionEvent = output();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "PageWrapperComponent"
            ]
        },
        {
            "name": "PageWrapperWrapperComponent",
            "id": "component-PageWrapperWrapperComponent-c6a56e0cde49c9d1e8c2873656bdfedfb05138b7429ac98833aa768fc02a8b0e7ad187f0a23388421f08fc202b92383be1fee86175fb8b2b10a87d0da2430db3",
            "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div #wrapper></div>\n<ng-template #ref>\n  <app-page-wrapper [pageTitle]=\"pageTitle()\" [subtitle]=\"subtitle()\"\n    ><div\n      class=\"flex h-[500px] items-center justify-center bg-cyan-900 text-2xl text-white\"\n      [style.width]=\"contentWidth() + 'px'\"\n    >\n      <span>Page projected content</span>\n    </div></app-page-wrapper\n  >\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "contentWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "contentWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "isAuth",
                    "defaultValue": "inject(\n    AuthenticationService,\n  ) as unknown as MockAuthenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "locationService",
                    "defaultValue": "inject(\n    LocationService,\n  ) as unknown as MockLocationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "templateRef",
                    "defaultValue": "viewChild.required<TemplateRef<HTMLElement>>(\"ref\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "wrapper",
                    "defaultValue": "viewChild.required<\n    HTMLDivElement,\n    ViewContainerRef\n  >(\"wrapper\", {\n    read: ViewContainerRef,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  input,\n  type TemplateRef,\n  viewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { provideRouter } from \"@angular/router\";\nimport {\n  applicationConfig,\n  type Meta,\n  type StoryObj,\n} from \"@storybook/angular\";\nimport { add } from \"date-fns\";\nimport { of } from \"rxjs\";\nimport { routes } from \"../../../app.routes\";\nimport { ApiService } from \"../../../services/api.service\";\nimport {\n  AuthenticationService,\n  MockAuthenticationService,\n} from \"../../../services/is-authenticated.service\";\nimport {\n  LocationService,\n  MockLocationService,\n} from \"../../../services/location.service\";\nimport { PageWrapperComponent } from \"./page-wrapper.component\";\n\n@Component({\n  selector: \"storybook-page-wrapper\",\n  imports: [PageWrapperComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div #wrapper></div>\n    <ng-template #ref>\n      <app-page-wrapper [pageTitle]=\"pageTitle()\" [subtitle]=\"subtitle()\"\n        ><div\n          class=\"flex h-[500px] items-center justify-center bg-cyan-900 text-2xl text-white\"\n          [style.width]=\"contentWidth() + 'px'\"\n        >\n          <span>Page projected content</span>\n        </div></app-page-wrapper\n      >\n    </ng-template>\n  `,\n})\nclass PageWrapperWrapperComponent {\n  readonly authenticated = input<boolean>();\n  readonly pageTitle = input.required<string>();\n  readonly subtitle = input<string>();\n  readonly contentWidth = input.required<number>();\n  protected isAuth = inject(\n    AuthenticationService,\n  ) as unknown as MockAuthenticationService;\n  protected locationService = inject(\n    LocationService,\n  ) as unknown as MockLocationService;\n  readonly currentUrl = input.required<string>();\n  protected readonly wrapper = viewChild.required<\n    HTMLDivElement,\n    ViewContainerRef\n  >(\"wrapper\", {\n    read: ViewContainerRef,\n  });\n  protected readonly templateRef =\n    viewChild.required<TemplateRef<HTMLElement>>(\"ref\");\n\n  constructor() {\n    effect(() => {\n      this.isAuth.setMe(\n        this.authenticated()\n          ? {\n              exp: add(new Date(), { days: 1 }).getTime(),\n              id: \"johnDoe-id\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n            }\n          : null,\n      );\n      this.locationService.url = this.currentUrl();\n\n      this.wrapper().clear();\n      this.wrapper().createEmbeddedView(this.templateRef());\n    });\n  }\n}\n\nconst meta = {\n  title: \"Templates/PageWrapper\",\n  component: PageWrapperWrapperComponent,\n  argTypes: {\n    pageTitle: { control: \"text\" },\n    contentWidth: { control: { type: \"range\", min: 100, max: 1500, step: 50 } },\n    authenticated: { control: \"boolean\" },\n    currentUrl: { control: \"inline-radio\", options: [\"/\", \"/login\"] },\n    subtitle: { control: \"text\" },\n  },\n  args: {\n    pageTitle: \"Page title\",\n    subtitle: \"\",\n    contentWidth: 600,\n    authenticated: false,\n    currentUrl: \"/\",\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: AuthenticationService, useClass: MockAuthenticationService },\n        { provide: LocationService, useValue: MockLocationService },\n        { provide: ApiService, useValue: { logout: () => of(\"logged out\") } },\n      ],\n    }),\n  ],\n} satisfies Meta<PageWrapperWrapperComponent>;\n\nexport default meta;\n\nexport const PageWrapperStory: StoryObj<PageWrapperWrapperComponent> = {\n  name: \"PageWrapper\",\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 68
            },
            "extends": []
        },
        {
            "name": "ResultStatusComponent",
            "id": "component-ResultStatusComponent-95286cb544c0dd363d29b16ec62433a2de7030650a0af110a982cb092e7e3d245f28b9e7bf8e7a4e6862a941bb81c319ba83f703d113cd59f0b0b02a37dbc11e",
            "file": "src/app/components/Molecules/FormWrapper/ResultStatus/result-status.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-result-status",
            "styleUrls": [],
            "styles": [],
            "template": "@let result = resultStatus();\n@switch (result.status) {\n  @case (\"success\") {\n    <p class=\"text-xs text-green-600\">\n      {{ successLabel() }}\n    </p>\n  }\n  @case (\"error\") {\n    <p class=\"text-xs text-red-600\">\n      {{ result.message }}\n    </p>\n  }\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "resultStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "successLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport type { ResultStatus } from \"../../../../services/form.service\";\n\n@Component({\n  selector: \"app-form-result-status\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    @let result = resultStatus();\n    @switch (result.status) {\n      @case (\"success\") {\n        <p class=\"text-xs text-green-600\">\n          {{ successLabel() }}\n        </p>\n      }\n      @case (\"error\") {\n        <p class=\"text-xs text-red-600\">\n          {{ result.message }}\n        </p>\n      }\n    }\n  `,\n})\nexport class ResultStatusComponent {\n  readonly resultStatus = input.required<ResultStatus>();\n  readonly successLabel = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-688b263a198872ee397530c159d32cabf1272bd8cf657304db6c22a49bdf758d9a64eeeb2535b4f8833d83e5a6e4b43806578a47b58492b790cba07562bd2751",
            "file": "src/app/components/Atoms/Spinner/spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spinner",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: inline-block;\n    }\n  "
            ],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "input(\"currentColor\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "duration",
                    "defaultValue": "input<string, string | number>(\"1.5s\", {\n    transform: (val) => (typeof val === \"number\" ? `${val}ms` : val),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-spinner\",\n  templateUrl: \"./spinner.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: `\n    :host {\n      display: inline-block;\n    }\n  `,\n})\nexport class SpinnerComponent {\n  readonly duration = input<string, string | number>(\"1.5s\", {\n    transform: (val) => (typeof val === \"number\" ? `${val}ms` : val),\n  });\n  readonly color = input(\"currentColor\");\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: inline-block;\n    }\n  \n",
            "extends": [],
            "templateData": "<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n>\n  <g [attr.stroke]=\"color()\" stroke-width=\"1\">\n    <circle\n      cx=\"12\"\n      cy=\"12\"\n      r=\"9.5\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-width=\"3\"\n    >\n      <animate\n        attributeName=\"stroke-dasharray\"\n        calcMode=\"spline\"\n        [attr.dur]=\"duration()\"\n        keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1\"\n        keyTimes=\"0;0.475;0.95;1\"\n        repeatCount=\"indefinite\"\n        values=\"0 150;42 150;42 150;42 150\"\n      />\n      <animate\n        attributeName=\"stroke-dashoffset\"\n        calcMode=\"spline\"\n        [attr.dur]=\"duration()\"\n        keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1\"\n        keyTimes=\"0;0.475;0.95;1\"\n        repeatCount=\"indefinite\"\n        values=\"0;-16;-59;-59\"\n      />\n    </circle>\n    <animateTransform\n      attributeName=\"transform\"\n      dur=\"2s\"\n      repeatCount=\"indefinite\"\n      type=\"rotate\"\n      values=\"0 12 12;360 12 12\"\n    />\n  </g>\n</svg>\n"
        },
        {
            "name": "SubmitButtonComponent",
            "id": "component-SubmitButtonComponent-7e86a5f4d7b53b9e5f3a2e1940d5c232db566a1dd57fc3a431482fae2753be476f6d4395637a5acf77a5faf39fa73f545f37ff7dd0b06f3ba7e71f7150147c40",
            "file": "src/app/components/Molecules/SubmitButton/submit-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-submit-button",
            "styleUrls": [],
            "styles": [
                "\n    app-spinner {\n      opacity: 1;\n      width: auto;\n      padding-left: 1rem;\n      transform: scaleX(1);\n      transition: all 0.3s ease;\n      @starting-style {\n        opacity: 0;\n        transform: scaleX(0);\n        padding-left: 0;\n      }\n    }\n  "
            ],
            "template": "<app-button\n  [type]=\"type()\"\n  [variant]=\"variant()\"\n  (click)=\"clicked.emit()\"\n  [disabled]=\"isDisabled()\"\n  [title]=\"\n    isDisabled()\n      ? 'Please make changes to the form in order to be able to submit'\n      : null\n  \"\n>\n  <div class=\"flex\">\n    <span>{{ label() }}</span>\n    @if (isSubmitting()) {\n      @defer (on timer(400ms)) {\n        <app-spinner />\n      }\n    }\n  </div>\n</app-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "isDisabled",
                    "defaultValue": "computed(() => this.disabled() || this.isSubmitting())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "type",
                    "defaultValue": "input<\"button\" | \"submit\" | \"reset\">(\"submit\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        164,
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "input<\"sm\" | \"md\" | \"lg\">(\"md\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "input<\"confirm\" | \"cancel\" | \"warning\" | \"info\">(\n    \"confirm\",\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "AbstractButtonComponent"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from \"@angular/core\";\nimport {\n  AbstractButtonComponent,\n  ButtonComponent,\n} from \"../../Atoms/Button/button.component\";\nimport { SpinnerComponent } from \"../../Atoms/Spinner/spinner.component\";\n\n@Component({\n  selector: \"app-submit-button\",\n  imports: [ButtonComponent, SpinnerComponent],\n  styles: `\n    app-spinner {\n      opacity: 1;\n      width: auto;\n      padding-left: 1rem;\n      transform: scaleX(1);\n      transition: all 0.3s ease;\n      @starting-style {\n        opacity: 0;\n        transform: scaleX(0);\n        padding-left: 0;\n      }\n    }\n  `,\n  template: `\n    <app-button\n      [type]=\"type()\"\n      [variant]=\"variant()\"\n      (click)=\"clicked.emit()\"\n      [disabled]=\"isDisabled()\"\n      [title]=\"\n        isDisabled()\n          ? 'Please make changes to the form in order to be able to submit'\n          : null\n      \"\n    >\n      <div class=\"flex\">\n        <span>{{ label() }}</span>\n        @if (isSubmitting()) {\n          @defer (on timer(400ms)) {\n            <app-spinner />\n          }\n        }\n      </div>\n    </app-button>\n  `,\n})\nexport class SubmitButtonComponent extends AbstractButtonComponent {\n  readonly label = input.required<string>();\n  readonly isSubmitting = input.required<boolean>();\n  override readonly type = input<\"button\" | \"submit\" | \"reset\">(\"submit\");\n  protected isDisabled = computed(() => this.disabled() || this.isSubmitting());\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    app-spinner {\n      opacity: 1;\n      width: auto;\n      padding-left: 1rem;\n      transform: scaleX(1);\n      transition: all 0.3s ease;\n      @starting-style {\n        opacity: 0;\n        transform: scaleX(0);\n        padding-left: 0;\n      }\n    }\n  \n",
            "extends": [
                "AbstractButtonComponent"
            ]
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "activeClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"active:scale-96 [.active]:scale-96 disabled:[.active]:scale-100 disabled:[.active]:shadow-none active:shadow-xs [.active]:shadow-xs disabled:active:scale-100 disabled:active:shadow-none\""
            },
            {
                "name": "ArrowIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ArrowIconComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "ArrowIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<DeleteIconComponent>",
                "defaultValue": "{ name: \"DeleteIcon\" }"
            },
            {
                "name": "ArrowIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<EditIconComponent>",
                "defaultValue": "{ name: \"EditIcon\" }"
            },
            {
                "name": "AUTHENTICATED_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NavBar/navbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{ Create: \"/blog/create\" } satisfies Record<\n  string,\n  string\n>"
            },
            {
                "name": "authenticationStateGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/is-authenticated.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "async () => {\n  const platformId = inject(PLATFORM_ID);\n  const transferState = inject(TransferState);\n  const authenticationService = inject(AuthenticationService);\n\n  if (isPlatformServer(platformId)) {\n    const me = await authenticationService.check();\n    transferState.set(ME_DATA_KEY, me);\n    return true;\n  }\n\n  await authenticationService.check();\n  return true;\n}",
                "rawdescription": "Get authentication state from the API server. This should be done on each request.",
                "description": "<p>Get authentication state from the API server. This should be done on each request.</p>\n"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/is-authenticated.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "() => {\n  return inject(AuthenticationService).me() !== null\n    ? true\n    : inject(Router).navigate([\"/\"]);\n}"
            },
            {
                "name": "Blog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "BlogFormCreate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogFormComponent>",
                "defaultValue": "{\n  name: \"Create blog\",\n  args: {\n    defaultErrorMessage: \"Error while creating blog post\",\n    successLabel: \"Blog post created\",\n    submitLabel: \"Create blog post\",\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        { provide: AbstractBlogFormService, useClass: CreateBlogFormService },\n        successProvider,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "BlogFormEdit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogFormComponent>",
                "defaultValue": "{\n  name: \"Update blog\",\n  args: {\n    defaultErrorMessage: \"Error while updating blog\",\n    successLabel: \"Blog updated\",\n    submitLabel: \"Update blog\",\n    data: { content: exampleBlog.content, title: exampleBlog.title },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: { snapshot: { paramMap: new Map([[\"blogId\", \"blogId\"]]) } },\n        },\n        { provide: AbstractBlogFormService, useClass: EditBlogFormService },\n        successProvider,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "BlogPage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogPageWrapperComponent>",
                "defaultValue": "{\n  name: \"BlogPage\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: LocationService, useValue: mockLocation },\n        {\n          provide: ApiService,\n          useValue: {\n            getBlog(id: string) {\n              return of(\n                createBlog({\n                  authorId: \"johnDoe\",\n                  authorName: \"John Doe\",\n                  blogId: id,\n                }),\n              );\n            },\n          },\n        },\n        {\n          provide: AuthenticationService,\n          useFactory: () => {\n            const mockAuth = new MockAuthenticationService();\n            mockAuth.setMe({\n              exp: add(new Date(), { days: 1 }).getTime(),\n              id: \"johnDoe\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n            });\n            return mockAuth;\n          },\n        },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "BlogPreviewAuthorStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogPreviewComponent>",
                "defaultValue": "{\n  name: \"BlogPreview - author\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        {\n          provide: AuthenticationService,\n          useFactory: () => {\n            const mockAuth = new MockAuthenticationService();\n\n            mockAuth.setMe({\n              id: \"johnDoe\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n              exp: add(new Date(), { days: 1 }).getTime(),\n            });\n            return mockAuth;\n          },\n        },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "BlogPreviewNonAuthorStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<BlogPreviewComponent>",
                "defaultValue": "{\n  name: \"BlogPreview - Non author\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        {\n          provide: AuthenticationService,\n          useClass: MockAuthenticationService,\n        },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "blogResolver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/resolvers/blog.resolver.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResolveFn<RedirectCommand | BlogDto>",
                "defaultValue": "async (route) => {\n  const router = inject(Router);\n  const apiService = inject(ApiService);\n  const authService = inject(AuthenticationService);\n  const blogId = route.paramMap.get(\"blogId\");\n  const redirectToHomepage = () =>\n    new RedirectCommand(router.parseUrl(\"/\"), { replaceUrl: true });\n  if (!blogId) {\n    return redirectToHomepage();\n  }\n  const blog = await lastValueFrom(apiService.getBlog(blogId));\n  if (blog.author_id !== authService.me()?.id) {\n    return redirectToHomepage();\n  }\n  return blog;\n}"
            },
            {
                "name": "BoxStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Box/box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{ name: \"Box\" }"
            },
            {
                "name": "ButtonComponentStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ name: \"Button\" }"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: [\"../src/**/*.stories.ts\"],\n  addons: [\"@storybook/addon-a11y\"],\n  framework: {\n    name: \"@storybook/angular\",\n    options: {},\n  },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/Button\",\n  component: ButtonWrapperComponent,\n  argTypes: {\n    content: {\n      control: \"text\",\n      description: \"Represents the button's projected content\",\n    },\n    disabled: { control: \"boolean\" },\n    type: { control: \"radio\", options: [\"button\", \"submit\", \"reset\"] },\n    variant: {\n      control: \"radio\",\n      options: [\"confirm\", \"cancel\", \"warning\", \"info\", \"cancel\"],\n    },\n    size: { control: \"radio\", options: [\"sm\", \"md\", \"lg\"] },\n    clicked: { action: \"click\" },\n  },\n\n  args: {\n    content: \"Button content\",\n    disabled: false,\n    type: \"button\",\n    variant: \"confirm\",\n    size: \"md\",\n  },\n} satisfies Meta<ButtonWrapperComponent>"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Error/error.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ErrorWrapperComponent>",
                "defaultValue": "{\n  component: ErrorWrapperComponent,\n  title: \"Atoms/Error\",\n  argTypes: {\n    errors: { control: \"text\" },\n    containerCharWidth: { control: \"number\" },\n  },\n  args: {\n    errors: \"Required.\",\n    containerCharWidth: 100,\n  },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DeleteBlogWrapperComponent>",
                "defaultValue": "{\n  title: \"Molecules/DeleteBlogConfirm\",\n  component: DeleteBlogWrapperComponent,\n  argTypes: {\n    confirmDelete: { action: \"Confirm delete\" },\n  },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DialogComponentWrapper>",
                "defaultValue": "{\n  title: \"Molecules/Dialog\",\n  component: DialogComponentWrapper,\n  argTypes: {\n    title: { control: \"text\" },\n  },\n  args: { title: \"Modal element\" },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputWrapperComponent>",
                "defaultValue": "{\n  component: InputWrapperComponent,\n  title: \"Molecules/Input\",\n  argTypes: {\n    disabled: { control: \"boolean\" },\n    type: {\n      control: \"inline-radio\",\n      options: [\"text\", \"number\", \"date\", \"email\", \"password\", \"textarea\"],\n    },\n    label: { control: \"text\" },\n    value: { control: \"text\" },\n    name: { control: \"text\" },\n  },\n  args: {\n    disabled: false,\n    type: \"text\",\n    label: \"Input label\",\n    value: \"Initial value\",\n  },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputWrapperStoryComponent>",
                "defaultValue": "{\n  component: InputWrapperStoryComponent,\n  argTypes: { label: { control: \"text\" } },\n  args: { label: \"Control label\" },\n  title: \"Molecules/InputWrapper\",\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoginFormComponent>",
                "defaultValue": "{\n  title: \"Organisms/LoginForm\",\n  component: LoginFormComponent,\n  argTypes: { goBack: { action: \"goBack\" } },\n}"
            },
            {
                "name": "content",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\\nLorem ipsum, dolor sit amet consectetur adipisicing elit. Nulla perspiciatis ab sit? Voluptates suscipit placeat eligendi minus corporis, est reiciendis aliquid iste dolorem quae, a, temporibus maiores unde ut aut?\\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, eum sit minima unde ullam, magnam aspernatur perspiciatis, velit voluptatem corporis mollitia. Animi natus nisi culpa rem. Tempore dolores magni cumque!\""
            },
            {
                "name": "control",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl(\"example\", {\n  nonNullable: true,\n  validators: [Validators.required, Validators.minLength(5)],\n})"
            },
            {
                "name": "createBlog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/helpers/storybook/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "({\n  authorId,\n  authorName,\n  blogId,\n  date = new Date(\"2025-06-06T12:00:00\"),\n}: CreateBlogParams): BlogDto => {\n  const baseTime = date.getTime();\n  const baseBlogTime = { created_at: baseTime, updated_at: baseTime };\n\n  const content = `Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quibusdam voluptatum omnis impedit, excepturi animi nobis maxime ratione ut placeat est consectetur possimus sunt amet tempore tempora magnam quos fugiat rem!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Earum nostrum eos, saepe aut consectetur molestias, aliquam cumque ex repellat doloremque nisi quaerat mollitia enim recusandae eaque non natus odio qui.\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Ut quisquam voluptatum quasi praesentium dolor assumenda rerum animi blanditiis eos, sint nam quas sequi voluptate. Similique totam magnam maiores magni aliquam!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Soluta sed eaque, illo architecto voluptas praesentium doloribus ipsum recusandae provident esse quia, nemo harum rerum magni hic delectus? Fugit, voluptatum eius!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae repudiandae praesentium quo harum eius ratione tempore blanditiis? Consectetur exercitationem quo iure delectus explicabo vitae consequuntur, cumque autem, amet error voluptate?`;\n\n  return {\n    author_id: authorId,\n    author_name: authorName,\n    content,\n    summary: [content.replaceAll(/\\n+/g, \" \").trim().slice(0, 297), \"...\"].join(\n      \"\",\n    ),\n    id: blogId ?? \"post-id\",\n    image: null,\n    title: \"Title of an interesting post\",\n    ...baseBlogTime,\n  };\n}"
            },
            {
                "name": "created_at",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Date(\"2025-06-01T12:00\").getTime()"
            },
            {
                "name": "date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Date(\"2025-06-01T12:00:00\")"
            },
            {
                "name": "DeleteBlogDialogStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<DeleteBlogWrapperComponent>",
                "defaultValue": "{\n  name: \"DeleteBlogConfirm\",\n}"
            },
            {
                "name": "DialogStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<DialogComponentWrapper>",
                "defaultValue": "{ name: \"Dialog\" }"
            },
            {
                "name": "errHasMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/helpers/form-error-parser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(obj: unknown): obj is { message: string } => {\n  return (\n    obj !== null &&\n    typeof obj === \"object\" &&\n    \"message\" in obj &&\n    typeof obj[\"message\"] === \"string\"\n  );\n}"
            },
            {
                "name": "ErrorStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Error/error.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ErrorWrapperComponent>",
                "defaultValue": "{ name: \"Error\" }"
            },
            {
                "name": "exampleBlog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BlogDto",
                "defaultValue": "{\n  author_id: \"johnDoe\",\n  author_name: \"John Doe\",\n  title: \"Example blog title\",\n  content:\n    \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\",\n  summary:\n    \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus.\",\n  image: null,\n  id: \"some-example-id\",\n  created_at,\n  updated_at: created_at,\n}"
            },
            {
                "name": "FormInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{}"
            },
            {
                "name": "getJWT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/api.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(req: Request | null) => {\n  return req?.headers\n    .get(\"cookie\")\n    ?.split(\";\")\n    .find((c) => c.includes(JWT_COOKIE))\n    ?.split(\"=\")[1];\n}"
            },
            {
                "name": "id",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"id\""
            },
            {
                "name": "InputStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<InputWrapperComponent>",
                "defaultValue": "{ name: \"Input\" }"
            },
            {
                "name": "IntersectionStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<IntersectionTriggerWrapperComponent>",
                "defaultValue": "{ name: \"IntersectionEvent\" }"
            },
            {
                "name": "loginGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/is-authenticated.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "() => {\n  return inject(AuthenticationService).me() !== null\n    ? inject(Router).navigate([\"/\"])\n    : true;\n}"
            },
            {
                "name": "LoginPageWithFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<LoginPageComponent>",
                "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        ...standardProviders,\n        { provide: ApiService, useValue: mockLogin(false) },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "LoginPageWithSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<LoginPageComponent>",
                "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        ...standardProviders,\n        { provide: ApiService, useValue: mockLogin(true) },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "LoginWithFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<LoginFormComponent>",
                "defaultValue": "{\n  decorators: mockLoginResult(false),\n}"
            },
            {
                "name": "LoginWithSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<LoginFormComponent>",
                "defaultValue": "{\n  decorators: mockLoginResult(),\n}"
            },
            {
                "name": "ME_DATA_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/transfer-state.keys.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "makeStateKey<UserWithExpirationDto>(\"me\")"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/ArrowIcon\",\n  component: ArrowIconComponent,\n  argTypes: {\n    direction: { control: \"inline-radio\", options: [\"left\", \"right\"] },\n  },\n  args: { direction: \"right\" },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<ArrowIconComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Box/box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/Box\",\n  component: BoxComponent,\n  render: (props) => {\n    return {\n      props,\n      template: `<app-box>\n      <h1 class=\"text-xl font-semibold py-3\">Title of projected content</h1>\n      <p>And then some text that we are displaying in</p>\n      <p>Separate lines that should talk about something</p>\n      <p>more or less important</p>\n      </app-box>`,\n    };\n  },\n} satisfies Meta<BoxComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/DeleteIcon\",\n  component: DeleteIconComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px;\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<DeleteIconComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/EditIcon\",\n  component: EditIconComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px;\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<EditIconComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/IntersectionEvent\",\n  component: IntersectionTriggerWrapperComponent,\n  argTypes: { trigger: { action: \"In viewport\" } },\n} satisfies Meta<IntersectionTriggerWrapperComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Atoms/PageTitle\",\n  component: PageTitleWrapperComponent,\n  args: { title: \"Page title\" },\n} satisfies Meta<PageTitleWrapperComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SpinnerComponent>",
                "defaultValue": "{\n  title: \"Atoms/Spinner\",\n  component: SpinnerComponent,\n  argTypes: { duration: { control: \"text\" }, color: { control: \"color\" } },\n  args: { duration: \"1.5s\", color: \"currentColor\" },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Molecules/Blog\",\n  component: BlogComponent,\n  argTypes: { blog: { control: \"object\" } },\n\n  args: {\n    blog: {\n      author_id: \"johnDoe\",\n      author_name: \"John Doe\",\n      content:\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\\nLorem ipsum, dolor sit amet consectetur adipisicing elit. Nulla perspiciatis ab sit? Voluptates suscipit placeat eligendi minus corporis, est reiciendis aliquid iste dolorem quae, a, temporibus maiores unde ut aut?\\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, eum sit minima unde ullam, magnam aspernatur perspiciatis, velit voluptatem corporis mollitia. Animi natus nisi culpa rem. Tempore dolores magni cumque!\",\n      summary: z.string().max(SUMMARY_LENGTH_LIMIT).parse(content),\n      created_at: date.getTime(),\n      updated_at: date.getTime(),\n      id: \"blog-id\",\n      image: null,\n      title: \"Example title\",\n    },\n  },\n} satisfies Meta<BlogComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SubmitButtonComponent>",
                "defaultValue": "{\n  title: \"Molecules/SubmitButton\",\n  component: SubmitButtonComponent,\n  argTypes: {\n    ...buttonMeta.argTypes,\n    isSubmitting: { control: \"boolean\" },\n    label: { control: \"text\" },\n  },\n  args: {\n    ...buttonMeta.args,\n    type: \"submit\",\n    isSubmitting: false,\n    label: \"Submit\",\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Pages/BlogPage\",\n  component: BlogPageWrapperComponent,\n  args: { id },\n} satisfies Meta<BlogPageWrapperComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Pages/LoginPage\",\n  component: LoginPageComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        {\n          provide: AuthenticationService,\n          useClass: MockAuthenticationService,\n        },\n        provideRouter([]),\n      ],\n    }),\n  ],\n} satisfies Meta<LoginPageComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Templates/PageWrapper\",\n  component: PageWrapperWrapperComponent,\n  argTypes: {\n    pageTitle: { control: \"text\" },\n    contentWidth: { control: { type: \"range\", min: 100, max: 1500, step: 50 } },\n    authenticated: { control: \"boolean\" },\n    currentUrl: { control: \"inline-radio\", options: [\"/\", \"/login\"] },\n    subtitle: { control: \"text\" },\n  },\n  args: {\n    pageTitle: \"Page title\",\n    subtitle: \"\",\n    contentWidth: 600,\n    authenticated: false,\n    currentUrl: \"/\",\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: AuthenticationService, useClass: MockAuthenticationService },\n        { provide: LocationService, useValue: MockLocationService },\n        { provide: ApiService, useValue: { logout: () => of(\"logged out\") } },\n      ],\n    }),\n  ],\n} satisfies Meta<PageWrapperWrapperComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Organisms/BlogForm\",\n  component: BlogFormComponent,\n  argTypes: {\n    data: { control: \"object\", table: { disable: true } },\n    defaultErrorMessage: { control: \"text\" },\n    submitLabel: { control: \"text\" },\n    successLabel: { control: \"text\" },\n    goBack: { action: \"goBack\" },\n    status: { action: \"status\" },\n  },\n} satisfies Meta<BlogFormComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BlogPreviewComponent>",
                "defaultValue": "{\n  title: \"Organisms/BlogPreview\",\n  component: BlogPreviewComponent,\n  argTypes: { data: { control: \"object\" }, clicked: { action: \"Navigated\" } },\n  args: {\n    data: createBlog({ authorId: \"johnDoe\", authorName: \"John Doe\" }),\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Organisms/FormInput\",\n  component: FormInputComponent,\n  argTypes: {\n    control: { table: { disable: true } },\n    label: { control: \"text\" },\n    type: {\n      control: \"inline-radio\",\n      options: [\n        \"text\",\n        \"number\",\n        \"password\",\n        \"date\",\n        \"email\",\n        \"textarea\",\n      ] satisfies SimpleInputType[],\n    },\n  },\n  args: {\n    label: \"Control label\",\n    type: \"text\",\n    control,\n  },\n} satisfies Meta<FormInputComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Organisms/Navbar\",\n  component: NavbarComponent,\n  argTypes: {\n    authenticated: { control: \"boolean\" },\n    logout: { action: \"logout\" },\n    currentUrl: { control: \"inline-radio\", options: [\"/\", \"/login\"] },\n  },\n  args: { authenticated: false, currentUrl: \"/\" },\n  decorators: [applicationConfig({ providers: [provideRouter(routes)] })],\n} satisfies Meta<NavbarComponent>"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  title: \"Organisms/NotFound\",\n  component: NotFoundComponent,\n  argTypes: { navigateEvent: { action: \"Navigate action\" } },\n  decorators: [applicationConfig({ providers: [provideRouter([])] })],\n} satisfies Meta<NotFoundComponent>"
            },
            {
                "name": "mockApiService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(shouldSucceed = true, updatedBlog: BlogDto) => {\n  const handler = () =>\n    of([]).pipe(\n      delay(1000),\n      map(() => {\n        if (shouldSucceed) return updatedBlog;\n        throw new Error(\"Something went wrong\");\n      }),\n    );\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateBlog(..._parameters: Parameters<ApiService[\"updateBlog\"]>) {\n      return handler();\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    createBlog(..._parameters: Parameters<ApiService[\"createBlog\"]>) {\n      return handler();\n    },\n  };\n}"
            },
            {
                "name": "mockLocation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new MockLocationService(`/blog/${id}`)"
            },
            {
                "name": "mockLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(shouldSucceed = true) => {\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    login(..._parameters: Parameters<ApiService[\"login\"]>) {\n      return of([]).pipe(\n        delay(1000),\n        map(() => {\n          if (shouldSucceed) return \"success\";\n          throw new Error(\"Something went wrong\");\n        }),\n      );\n    },\n  };\n}"
            },
            {
                "name": "mockLoginResult",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\n  shouldSucceed = true,\n): ReturnType<typeof applicationConfig>[] => [\n  applicationConfig({\n    providers: [\n      LoginFormService,\n      { provide: ApiService, useValue: mockLogin(shouldSucceed) },\n    ],\n  }),\n]"
            },
            {
                "name": "NavBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<NavbarComponent>",
                "defaultValue": "{ name: \"Navbar\" }"
            },
            {
                "name": "NAVBAR_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NavBar/navbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  Homepage: \"/\",\n  Login: \"/login\",\n} satisfies Record<string, string>"
            },
            {
                "name": "NotFound",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<NotFoundComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "PageTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{}"
            },
            {
                "name": "PageWrapperStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<PageWrapperWrapperComponent>",
                "defaultValue": "{\n  name: \"PageWrapper\",\n}"
            },
            {
                "name": "parseError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/helpers/form-error-parser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(key: string, obj: unknown): string => {\n  if (errHasMessage(obj)) {\n    return obj[\"message\"];\n  }\n  if (key === \"required\") {\n    return \"Required.\";\n  }\n  if (key === \"minlength\") {\n    const { requiredLength } = obj as Record<\n      \"requiredLength\" | \"actualLength\",\n      number\n    >;\n    return `${requiredLength} characters minimum.`;\n  }\n  return `Invalid ${key}.`;\n}"
            },
            {
                "name": "parseErrors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/helpers/form-error-parser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\n  errors: ValidationErrors | null | undefined,\n): string | undefined => {\n  if (!errors) return undefined;\n  return Object.entries(errors).reduce((message, [name, description]) => {\n    message += ` ${parseError(name, description)}`;\n    return message.trim();\n  }, \"\");\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "resultValidator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/helpers/result-validator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<Validator extends ZodType, Result>(value: Observable<Result>, validator: Validator):Observable<ParsedResult<Validator, Result>> => {\n    return value.pipe(map(result => {\n        if(!Array.isArray(result)) {\n            return validator.parse(result) as ParsedResult<Validator, Result>\n        }\n        return result.map(value => validator.parse(value)) as ParsedResult<Validator, Result>\n    }))\n}"
            },
            {
                "name": "sizeClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  sm: \"text-sm px-3 py-2 \",\n  md: \"text-md px-3 py-2\",\n  lg: \"text-[18px] px-3 py-3\",\n}"
            },
            {
                "name": "SpinnerStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<SpinnerComponent>",
                "defaultValue": "{ name: \"Spinner\" }"
            },
            {
                "name": "standardProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  provideRouter(routes),\n  LoginFormService,\n  {\n    provide: LocationService,\n    useFactory: () => new MockLocationService(\"/login\"),\n  },\n]"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<InputWrapperStoryComponent>",
                "defaultValue": "{\n  name: \"InputWrapper\",\n}"
            },
            {
                "name": "SubmitButtonComponentStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<SubmitButtonComponent>",
                "defaultValue": "{\n  name: \"SubmitButton\",\n}"
            },
            {
                "name": "successProvider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: ApiService,\n  useValue: mockApiService(true, exampleBlog),\n}"
            },
            {
                "name": "TO_HOMEPAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Molecules/BackLink/back-link.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BackLinkInput",
                "defaultValue": "{\n  href: \"/\",\n  label: \"Back to homepage\",\n}"
            },
            {
                "name": "variantClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/Atoms/Button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  confirm:\n    \"border-green-700 bg-green-50 text-green-700 decoration-green-700 shadow-green-600/20\",\n  warning:\n    \"border-red-700 bg-red-100 text-red-700 decoration-red-700 shadow-red-600/20\",\n  cancel:\n    \"border-neutral-700 bg-neutral-100 text-neutral-700 decoration-neutral-700 shadow-neutral-600/20\",\n  info: \"border-violet-700 bg-violet-100 text-violet-700 decoration-violet-700 shadow-violet-600/20\",\n}"
            }
        ],
        "functions": [
            {
                "name": "buildForm",
                "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "value",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{\n    content: \"\",\n    title: \"\",\n  }"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "value",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{\n    content: \"\",\n    title: \"\",\n  }",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "buildForm",
                "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "BackLinkInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<\"href\" | \"label\" | string>",
                "file": "src/app/components/Molecules/BackLink/back-link.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "BlogForm",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "BlogValues",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "CreateBlogParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/helpers/storybook/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "FunctionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/components/Molecules/Input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "LoginForm",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ParsedResult",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/helpers/result-validator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ResultStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type | literal type | literal type",
                "file": "src/app/services/form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "SimpleInputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"number\" | \"date\" | \"email\" | \"password\" | \"text\" | \"textarea\"",
                "file": "src/app/components/Molecules/Input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonWrapperComponent>",
                "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "WindowedRequest",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<Record<\"limit\" | \"offset\", number>>",
                "file": "src/app/services/api.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/Atoms/Button/button.component.ts": [
                {
                    "name": "activeClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"active:scale-96 [.active]:scale-96 disabled:[.active]:scale-100 disabled:[.active]:shadow-none active:shadow-xs [.active]:shadow-xs disabled:active:scale-100 disabled:active:shadow-none\""
                },
                {
                    "name": "sizeClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  sm: \"text-sm px-3 py-2 \",\n  md: \"text-md px-3 py-2\",\n  lg: \"text-[18px] px-3 py-3\",\n}"
                },
                {
                    "name": "variantClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  confirm:\n    \"border-green-700 bg-green-50 text-green-700 decoration-green-700 shadow-green-600/20\",\n  warning:\n    \"border-red-700 bg-red-100 text-red-700 decoration-red-700 shadow-red-600/20\",\n  cancel:\n    \"border-neutral-700 bg-neutral-100 text-neutral-700 decoration-neutral-700 shadow-neutral-600/20\",\n  info: \"border-violet-700 bg-violet-100 text-violet-700 decoration-violet-700 shadow-violet-600/20\",\n}"
                }
            ],
            "src/app/components/Atoms/Arrow/arrow.component.stories.ts": [
                {
                    "name": "ArrowIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ArrowIconComponent>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/ArrowIcon\",\n  component: ArrowIconComponent,\n  argTypes: {\n    direction: { control: \"inline-radio\", options: [\"left\", \"right\"] },\n  },\n  args: { direction: \"right\" },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<ArrowIconComponent>"
                }
            ],
            "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts": [
                {
                    "name": "ArrowIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<DeleteIconComponent>",
                    "defaultValue": "{ name: \"DeleteIcon\" }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/DeleteIcon\",\n  component: DeleteIconComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px;\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<DeleteIconComponent>"
                }
            ],
            "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts": [
                {
                    "name": "ArrowIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<EditIconComponent>",
                    "defaultValue": "{ name: \"EditIcon\" }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/EditIcon\",\n  component: EditIconComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 40px;\">${story}</div>`,\n    ),\n  ],\n} satisfies Meta<EditIconComponent>"
                }
            ],
            "src/app/components/Organisms/NavBar/navbar.component.ts": [
                {
                    "name": "AUTHENTICATED_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NavBar/navbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{ Create: \"/blog/create\" } satisfies Record<\n  string,\n  string\n>"
                },
                {
                    "name": "NAVBAR_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NavBar/navbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  Homepage: \"/\",\n  Login: \"/login\",\n} satisfies Record<string, string>"
                }
            ],
            "src/app/guards/is-authenticated.guard.ts": [
                {
                    "name": "authenticationStateGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/is-authenticated.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "async () => {\n  const platformId = inject(PLATFORM_ID);\n  const transferState = inject(TransferState);\n  const authenticationService = inject(AuthenticationService);\n\n  if (isPlatformServer(platformId)) {\n    const me = await authenticationService.check();\n    transferState.set(ME_DATA_KEY, me);\n    return true;\n  }\n\n  await authenticationService.check();\n  return true;\n}",
                    "rawdescription": "Get authentication state from the API server. This should be done on each request.",
                    "description": "<p>Get authentication state from the API server. This should be done on each request.</p>\n"
                },
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/is-authenticated.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "() => {\n  return inject(AuthenticationService).me() !== null\n    ? true\n    : inject(Router).navigate([\"/\"]);\n}"
                },
                {
                    "name": "loginGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/is-authenticated.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "() => {\n  return inject(AuthenticationService).me() !== null\n    ? inject(Router).navigate([\"/\"])\n    : true;\n}"
                }
            ],
            "src/app/components/Molecules/Blog/blog.component.stories.ts": [
                {
                    "name": "Blog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogComponent>",
                    "defaultValue": "{}"
                },
                {
                    "name": "content",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\\nLorem ipsum, dolor sit amet consectetur adipisicing elit. Nulla perspiciatis ab sit? Voluptates suscipit placeat eligendi minus corporis, est reiciendis aliquid iste dolorem quae, a, temporibus maiores unde ut aut?\\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, eum sit minima unde ullam, magnam aspernatur perspiciatis, velit voluptatem corporis mollitia. Animi natus nisi culpa rem. Tempore dolores magni cumque!\""
                },
                {
                    "name": "date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Date(\"2025-06-01T12:00:00\")"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Molecules/Blog\",\n  component: BlogComponent,\n  argTypes: { blog: { control: \"object\" } },\n\n  args: {\n    blog: {\n      author_id: \"johnDoe\",\n      author_name: \"John Doe\",\n      content:\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\\nLorem ipsum, dolor sit amet consectetur adipisicing elit. Nulla perspiciatis ab sit? Voluptates suscipit placeat eligendi minus corporis, est reiciendis aliquid iste dolorem quae, a, temporibus maiores unde ut aut?\\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, eum sit minima unde ullam, magnam aspernatur perspiciatis, velit voluptatem corporis mollitia. Animi natus nisi culpa rem. Tempore dolores magni cumque!\",\n      summary: z.string().max(SUMMARY_LENGTH_LIMIT).parse(content),\n      created_at: date.getTime(),\n      updated_at: date.getTime(),\n      id: \"blog-id\",\n      image: null,\n      title: \"Example title\",\n    },\n  },\n} satisfies Meta<BlogComponent>"
                }
            ],
            "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts": [
                {
                    "name": "BlogFormCreate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogFormComponent>",
                    "defaultValue": "{\n  name: \"Create blog\",\n  args: {\n    defaultErrorMessage: \"Error while creating blog post\",\n    successLabel: \"Blog post created\",\n    submitLabel: \"Create blog post\",\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        { provide: AbstractBlogFormService, useClass: CreateBlogFormService },\n        successProvider,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "BlogFormEdit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogFormComponent>",
                    "defaultValue": "{\n  name: \"Update blog\",\n  args: {\n    defaultErrorMessage: \"Error while updating blog\",\n    successLabel: \"Blog updated\",\n    submitLabel: \"Update blog\",\n    data: { content: exampleBlog.content, title: exampleBlog.title },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: { snapshot: { paramMap: new Map([[\"blogId\", \"blogId\"]]) } },\n        },\n        { provide: AbstractBlogFormService, useClass: EditBlogFormService },\n        successProvider,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "created_at",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Date(\"2025-06-01T12:00\").getTime()"
                },
                {
                    "name": "exampleBlog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BlogDto",
                    "defaultValue": "{\n  author_id: \"johnDoe\",\n  author_name: \"John Doe\",\n  title: \"Example blog title\",\n  content:\n    \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus. Vitae quas maxime quibusdam atque magnam suscipit eligendi mollitia quisquam? Quia minima reiciendis provident dignissimos pariatur!\",\n  summary:\n    \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sapiente veniam ut quam ducimus repellendus.\",\n  image: null,\n  id: \"some-example-id\",\n  created_at,\n  updated_at: created_at,\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Organisms/BlogForm\",\n  component: BlogFormComponent,\n  argTypes: {\n    data: { control: \"object\", table: { disable: true } },\n    defaultErrorMessage: { control: \"text\" },\n    submitLabel: { control: \"text\" },\n    successLabel: { control: \"text\" },\n    goBack: { action: \"goBack\" },\n    status: { action: \"status\" },\n  },\n} satisfies Meta<BlogFormComponent>"
                },
                {
                    "name": "successProvider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: ApiService,\n  useValue: mockApiService(true, exampleBlog),\n}"
                }
            ],
            "src/app/components/Pages/Blog/blog-page.component.stories.ts": [
                {
                    "name": "BlogPage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogPageWrapperComponent>",
                    "defaultValue": "{\n  name: \"BlogPage\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: LocationService, useValue: mockLocation },\n        {\n          provide: ApiService,\n          useValue: {\n            getBlog(id: string) {\n              return of(\n                createBlog({\n                  authorId: \"johnDoe\",\n                  authorName: \"John Doe\",\n                  blogId: id,\n                }),\n              );\n            },\n          },\n        },\n        {\n          provide: AuthenticationService,\n          useFactory: () => {\n            const mockAuth = new MockAuthenticationService();\n            mockAuth.setMe({\n              exp: add(new Date(), { days: 1 }).getTime(),\n              id: \"johnDoe\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n            });\n            return mockAuth;\n          },\n        },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "id",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"id\""
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Pages/BlogPage\",\n  component: BlogPageWrapperComponent,\n  args: { id },\n} satisfies Meta<BlogPageWrapperComponent>"
                },
                {
                    "name": "mockLocation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new MockLocationService(`/blog/${id}`)"
                }
            ],
            "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts": [
                {
                    "name": "BlogPreviewAuthorStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogPreviewComponent>",
                    "defaultValue": "{\n  name: \"BlogPreview - author\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        {\n          provide: AuthenticationService,\n          useFactory: () => {\n            const mockAuth = new MockAuthenticationService();\n\n            mockAuth.setMe({\n              id: \"johnDoe\",\n              name: \"John Doe\",\n              username: \"johnDoe\",\n              exp: add(new Date(), { days: 1 }).getTime(),\n            });\n            return mockAuth;\n          },\n        },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "BlogPreviewNonAuthorStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<BlogPreviewComponent>",
                    "defaultValue": "{\n  name: \"BlogPreview - Non author\",\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        {\n          provide: AuthenticationService,\n          useClass: MockAuthenticationService,\n        },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BlogPreviewComponent>",
                    "defaultValue": "{\n  title: \"Organisms/BlogPreview\",\n  component: BlogPreviewComponent,\n  argTypes: { data: { control: \"object\" }, clicked: { action: \"Navigated\" } },\n  args: {\n    data: createBlog({ authorId: \"johnDoe\", authorName: \"John Doe\" }),\n  },\n}"
                }
            ],
            "src/resolvers/blog.resolver.ts": [
                {
                    "name": "blogResolver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/resolvers/blog.resolver.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResolveFn<RedirectCommand | BlogDto>",
                    "defaultValue": "async (route) => {\n  const router = inject(Router);\n  const apiService = inject(ApiService);\n  const authService = inject(AuthenticationService);\n  const blogId = route.paramMap.get(\"blogId\");\n  const redirectToHomepage = () =>\n    new RedirectCommand(router.parseUrl(\"/\"), { replaceUrl: true });\n  if (!blogId) {\n    return redirectToHomepage();\n  }\n  const blog = await lastValueFrom(apiService.getBlog(blogId));\n  if (blog.author_id !== authService.me()?.id) {\n    return redirectToHomepage();\n  }\n  return blog;\n}"
                }
            ],
            "src/app/components/Atoms/Box/box.component.stories.ts": [
                {
                    "name": "BoxStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Box/box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{ name: \"Box\" }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Box/box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/Box\",\n  component: BoxComponent,\n  render: (props) => {\n    return {\n      props,\n      template: `<app-box>\n      <h1 class=\"text-xl font-semibold py-3\">Title of projected content</h1>\n      <p>And then some text that we are displaying in</p>\n      <p>Separate lines that should talk about something</p>\n      <p>more or less important</p>\n      </app-box>`,\n    };\n  },\n} satisfies Meta<BoxComponent>"
                }
            ],
            "src/app/components/Atoms/Button/button.component.stories.ts": [
                {
                    "name": "ButtonComponentStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ name: \"Button\" }"
                },
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/Button\",\n  component: ButtonWrapperComponent,\n  argTypes: {\n    content: {\n      control: \"text\",\n      description: \"Represents the button's projected content\",\n    },\n    disabled: { control: \"boolean\" },\n    type: { control: \"radio\", options: [\"button\", \"submit\", \"reset\"] },\n    variant: {\n      control: \"radio\",\n      options: [\"confirm\", \"cancel\", \"warning\", \"info\", \"cancel\"],\n    },\n    size: { control: \"radio\", options: [\"sm\", \"md\", \"lg\"] },\n    clicked: { action: \"click\" },\n  },\n\n  args: {\n    content: \"Button content\",\n    disabled: false,\n    type: \"button\",\n    variant: \"confirm\",\n    size: \"md\",\n  },\n} satisfies Meta<ButtonWrapperComponent>"
                }
            ],
            ".storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: [\"../src/**/*.stories.ts\"],\n  addons: [\"@storybook/addon-a11y\"],\n  framework: {\n    name: \"@storybook/angular\",\n    options: {},\n  },\n}"
                }
            ],
            "src/app/components/Atoms/Error/error.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Error/error.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ErrorWrapperComponent>",
                    "defaultValue": "{\n  component: ErrorWrapperComponent,\n  title: \"Atoms/Error\",\n  argTypes: {\n    errors: { control: \"text\" },\n    containerCharWidth: { control: \"number\" },\n  },\n  args: {\n    errors: \"Required.\",\n    containerCharWidth: 100,\n  },\n}"
                },
                {
                    "name": "ErrorStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Error/error.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ErrorWrapperComponent>",
                    "defaultValue": "{ name: \"Error\" }"
                }
            ],
            "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DeleteBlogWrapperComponent>",
                    "defaultValue": "{\n  title: \"Molecules/DeleteBlogConfirm\",\n  component: DeleteBlogWrapperComponent,\n  argTypes: {\n    confirmDelete: { action: \"Confirm delete\" },\n  },\n}"
                },
                {
                    "name": "DeleteBlogDialogStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<DeleteBlogWrapperComponent>",
                    "defaultValue": "{\n  name: \"DeleteBlogConfirm\",\n}"
                }
            ],
            "src/app/components/Molecules/Dialog/dialog.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DialogComponentWrapper>",
                    "defaultValue": "{\n  title: \"Molecules/Dialog\",\n  component: DialogComponentWrapper,\n  argTypes: {\n    title: { control: \"text\" },\n  },\n  args: { title: \"Modal element\" },\n}"
                },
                {
                    "name": "DialogStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<DialogComponentWrapper>",
                    "defaultValue": "{ name: \"Dialog\" }"
                }
            ],
            "src/app/components/Molecules/Input/input.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputWrapperComponent>",
                    "defaultValue": "{\n  component: InputWrapperComponent,\n  title: \"Molecules/Input\",\n  argTypes: {\n    disabled: { control: \"boolean\" },\n    type: {\n      control: \"inline-radio\",\n      options: [\"text\", \"number\", \"date\", \"email\", \"password\", \"textarea\"],\n    },\n    label: { control: \"text\" },\n    value: { control: \"text\" },\n    name: { control: \"text\" },\n  },\n  args: {\n    disabled: false,\n    type: \"text\",\n    label: \"Input label\",\n    value: \"Initial value\",\n  },\n}"
                },
                {
                    "name": "InputStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/Input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<InputWrapperComponent>",
                    "defaultValue": "{ name: \"Input\" }"
                }
            ],
            "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputWrapperStoryComponent>",
                    "defaultValue": "{\n  component: InputWrapperStoryComponent,\n  argTypes: { label: { control: \"text\" } },\n  args: { label: \"Control label\" },\n  title: \"Molecules/InputWrapper\",\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<InputWrapperStoryComponent>",
                    "defaultValue": "{\n  name: \"InputWrapper\",\n}"
                }
            ],
            "src/app/components/Organisms/LoginForm/login-form.component.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoginFormComponent>",
                    "defaultValue": "{\n  title: \"Organisms/LoginForm\",\n  component: LoginFormComponent,\n  argTypes: { goBack: { action: \"goBack\" } },\n}"
                },
                {
                    "name": "LoginWithFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<LoginFormComponent>",
                    "defaultValue": "{\n  decorators: mockLoginResult(false),\n}"
                },
                {
                    "name": "LoginWithSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<LoginFormComponent>",
                    "defaultValue": "{\n  decorators: mockLoginResult(),\n}"
                },
                {
                    "name": "mockLoginResult",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\n  shouldSucceed = true,\n): ReturnType<typeof applicationConfig>[] => [\n  applicationConfig({\n    providers: [\n      LoginFormService,\n      { provide: ApiService, useValue: mockLogin(shouldSucceed) },\n    ],\n  }),\n]"
                }
            ],
            "src/app/components/Organisms/FormInput/form-input.component.stories.ts": [
                {
                    "name": "control",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl(\"example\", {\n  nonNullable: true,\n  validators: [Validators.required, Validators.minLength(5)],\n})"
                },
                {
                    "name": "FormInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Organisms/FormInput\",\n  component: FormInputComponent,\n  argTypes: {\n    control: { table: { disable: true } },\n    label: { control: \"text\" },\n    type: {\n      control: \"inline-radio\",\n      options: [\n        \"text\",\n        \"number\",\n        \"password\",\n        \"date\",\n        \"email\",\n        \"textarea\",\n      ] satisfies SimpleInputType[],\n    },\n  },\n  args: {\n    label: \"Control label\",\n    type: \"text\",\n    control,\n  },\n} satisfies Meta<FormInputComponent>"
                }
            ],
            "src/app/helpers/storybook/index.ts": [
                {
                    "name": "createBlog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/helpers/storybook/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "({\n  authorId,\n  authorName,\n  blogId,\n  date = new Date(\"2025-06-06T12:00:00\"),\n}: CreateBlogParams): BlogDto => {\n  const baseTime = date.getTime();\n  const baseBlogTime = { created_at: baseTime, updated_at: baseTime };\n\n  const content = `Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quibusdam voluptatum omnis impedit, excepturi animi nobis maxime ratione ut placeat est consectetur possimus sunt amet tempore tempora magnam quos fugiat rem!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Earum nostrum eos, saepe aut consectetur molestias, aliquam cumque ex repellat doloremque nisi quaerat mollitia enim recusandae eaque non natus odio qui.\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Ut quisquam voluptatum quasi praesentium dolor assumenda rerum animi blanditiis eos, sint nam quas sequi voluptate. Similique totam magnam maiores magni aliquam!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Soluta sed eaque, illo architecto voluptas praesentium doloribus ipsum recusandae provident esse quia, nemo harum rerum magni hic delectus? Fugit, voluptatum eius!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae repudiandae praesentium quo harum eius ratione tempore blanditiis? Consectetur exercitationem quo iure delectus explicabo vitae consequuntur, cumque autem, amet error voluptate?`;\n\n  return {\n    author_id: authorId,\n    author_name: authorName,\n    content,\n    summary: [content.replaceAll(/\\n+/g, \" \").trim().slice(0, 297), \"...\"].join(\n      \"\",\n    ),\n    id: blogId ?? \"post-id\",\n    image: null,\n    title: \"Title of an interesting post\",\n    ...baseBlogTime,\n  };\n}"
                }
            ],
            "src/app/helpers/form-error-parser.ts": [
                {
                    "name": "errHasMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/helpers/form-error-parser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(obj: unknown): obj is { message: string } => {\n  return (\n    obj !== null &&\n    typeof obj === \"object\" &&\n    \"message\" in obj &&\n    typeof obj[\"message\"] === \"string\"\n  );\n}"
                },
                {
                    "name": "parseError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/helpers/form-error-parser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(key: string, obj: unknown): string => {\n  if (errHasMessage(obj)) {\n    return obj[\"message\"];\n  }\n  if (key === \"required\") {\n    return \"Required.\";\n  }\n  if (key === \"minlength\") {\n    const { requiredLength } = obj as Record<\n      \"requiredLength\" | \"actualLength\",\n      number\n    >;\n    return `${requiredLength} characters minimum.`;\n  }\n  return `Invalid ${key}.`;\n}"
                },
                {
                    "name": "parseErrors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/helpers/form-error-parser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\n  errors: ValidationErrors | null | undefined,\n): string | undefined => {\n  if (!errors) return undefined;\n  return Object.entries(errors).reduce((message, [name, description]) => {\n    message += ` ${parseError(name, description)}`;\n    return message.trim();\n  }, \"\");\n}"
                }
            ],
            "src/app/services/api.service.ts": [
                {
                    "name": "getJWT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/api.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(req: Request | null) => {\n  return req?.headers\n    .get(\"cookie\")\n    ?.split(\";\")\n    .find((c) => c.includes(JWT_COOKIE))\n    ?.split(\"=\")[1];\n}"
                }
            ],
            "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts": [
                {
                    "name": "IntersectionStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<IntersectionTriggerWrapperComponent>",
                    "defaultValue": "{ name: \"IntersectionEvent\" }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/IntersectionEvent\",\n  component: IntersectionTriggerWrapperComponent,\n  argTypes: { trigger: { action: \"In viewport\" } },\n} satisfies Meta<IntersectionTriggerWrapperComponent>"
                }
            ],
            "src/app/components/Pages/LoginPage/login-page.component.stories.ts": [
                {
                    "name": "LoginPageWithFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<LoginPageComponent>",
                    "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        ...standardProviders,\n        { provide: ApiService, useValue: mockLogin(false) },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "LoginPageWithSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<LoginPageComponent>",
                    "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        ...standardProviders,\n        { provide: ApiService, useValue: mockLogin(true) },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Pages/LoginPage\",\n  component: LoginPageComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        {\n          provide: AuthenticationService,\n          useClass: MockAuthenticationService,\n        },\n        provideRouter([]),\n      ],\n    }),\n  ],\n} satisfies Meta<LoginPageComponent>"
                },
                {
                    "name": "standardProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  provideRouter(routes),\n  LoginFormService,\n  {\n    provide: LocationService,\n    useFactory: () => new MockLocationService(\"/login\"),\n  },\n]"
                }
            ],
            "src/app/guards/transfer-state.keys.ts": [
                {
                    "name": "ME_DATA_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/transfer-state.keys.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "makeStateKey<UserWithExpirationDto>(\"me\")"
                }
            ],
            "src/app/components/Atoms/PageTitle/page-title.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Atoms/PageTitle\",\n  component: PageTitleWrapperComponent,\n  args: { title: \"Page title\" },\n} satisfies Meta<PageTitleWrapperComponent>"
                },
                {
                    "name": "PageTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{}"
                }
            ],
            "src/app/components/Atoms/Spinner/spinner.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SpinnerComponent>",
                    "defaultValue": "{\n  title: \"Atoms/Spinner\",\n  component: SpinnerComponent,\n  argTypes: { duration: { control: \"text\" }, color: { control: \"color\" } },\n  args: { duration: \"1.5s\", color: \"currentColor\" },\n}"
                },
                {
                    "name": "SpinnerStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<SpinnerComponent>",
                    "defaultValue": "{ name: \"Spinner\" }"
                }
            ],
            "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SubmitButtonComponent>",
                    "defaultValue": "{\n  title: \"Molecules/SubmitButton\",\n  component: SubmitButtonComponent,\n  argTypes: {\n    ...buttonMeta.argTypes,\n    isSubmitting: { control: \"boolean\" },\n    label: { control: \"text\" },\n  },\n  args: {\n    ...buttonMeta.args,\n    type: \"submit\",\n    isSubmitting: false,\n    label: \"Submit\",\n  },\n}"
                },
                {
                    "name": "SubmitButtonComponentStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<SubmitButtonComponent>",
                    "defaultValue": "{\n  name: \"SubmitButton\",\n}"
                }
            ],
            "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Templates/PageWrapper\",\n  component: PageWrapperWrapperComponent,\n  argTypes: {\n    pageTitle: { control: \"text\" },\n    contentWidth: { control: { type: \"range\", min: 100, max: 1500, step: 50 } },\n    authenticated: { control: \"boolean\" },\n    currentUrl: { control: \"inline-radio\", options: [\"/\", \"/login\"] },\n    subtitle: { control: \"text\" },\n  },\n  args: {\n    pageTitle: \"Page title\",\n    subtitle: \"\",\n    contentWidth: 600,\n    authenticated: false,\n    currentUrl: \"/\",\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter(routes),\n        { provide: AuthenticationService, useClass: MockAuthenticationService },\n        { provide: LocationService, useValue: MockLocationService },\n        { provide: ApiService, useValue: { logout: () => of(\"logged out\") } },\n      ],\n    }),\n  ],\n} satisfies Meta<PageWrapperWrapperComponent>"
                },
                {
                    "name": "PageWrapperStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<PageWrapperWrapperComponent>",
                    "defaultValue": "{\n  name: \"PageWrapper\",\n}"
                }
            ],
            "src/app/components/Organisms/NavBar/navbar.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Organisms/Navbar\",\n  component: NavbarComponent,\n  argTypes: {\n    authenticated: { control: \"boolean\" },\n    logout: { action: \"logout\" },\n    currentUrl: { control: \"inline-radio\", options: [\"/\", \"/login\"] },\n  },\n  args: { authenticated: false, currentUrl: \"/\" },\n  decorators: [applicationConfig({ providers: [provideRouter(routes)] })],\n} satisfies Meta<NavbarComponent>"
                },
                {
                    "name": "NavBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<NavbarComponent>",
                    "defaultValue": "{ name: \"Navbar\" }"
                }
            ],
            "src/app/components/Organisms/NotFound/not-found.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  title: \"Organisms/NotFound\",\n  component: NotFoundComponent,\n  argTypes: { navigateEvent: { action: \"Navigate action\" } },\n  decorators: [applicationConfig({ providers: [provideRouter([])] })],\n} satisfies Meta<NotFoundComponent>"
                },
                {
                    "name": "NotFound",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<NotFoundComponent>",
                    "defaultValue": "{}"
                }
            ],
            "src/app/components/Organisms/BlogForm/blog-form.service.ts": [
                {
                    "name": "mockApiService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(shouldSucceed = true, updatedBlog: BlogDto) => {\n  const handler = () =>\n    of([]).pipe(\n      delay(1000),\n      map(() => {\n        if (shouldSucceed) return updatedBlog;\n        throw new Error(\"Something went wrong\");\n      }),\n    );\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateBlog(..._parameters: Parameters<ApiService[\"updateBlog\"]>) {\n      return handler();\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    createBlog(..._parameters: Parameters<ApiService[\"createBlog\"]>) {\n      return handler();\n    },\n  };\n}"
                }
            ],
            "src/app/components/Organisms/LoginForm/login-form.service.ts": [
                {
                    "name": "mockLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(shouldSucceed = true) => {\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    login(..._parameters: Parameters<ApiService[\"login\"]>) {\n      return of([]).pipe(\n        delay(1000),\n        map(() => {\n          if (shouldSucceed) return \"success\";\n          throw new Error(\"Something went wrong\");\n        }),\n      );\n    },\n  };\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/helpers/result-validator.ts": [
                {
                    "name": "resultValidator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/helpers/result-validator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<Validator extends ZodType, Result>(value: Observable<Result>, validator: Validator):Observable<ParsedResult<Validator, Result>> => {\n    return value.pipe(map(result => {\n        if(!Array.isArray(result)) {\n            return validator.parse(result) as ParsedResult<Validator, Result>\n        }\n        return result.map(value => validator.parse(value)) as ParsedResult<Validator, Result>\n    }))\n}"
                }
            ],
            "src/app/components/Molecules/BackLink/back-link.component.ts": [
                {
                    "name": "TO_HOMEPAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/Molecules/BackLink/back-link.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackLinkInput",
                    "defaultValue": "{\n  href: \"/\",\n  label: \"Back to homepage\",\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/components/Organisms/BlogForm/blog-form.service.ts": [
                {
                    "name": "buildForm",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fb",
                            "type": "FormBuilder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n    content: \"\",\n    title: \"\",\n  }"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "fb",
                            "type": "FormBuilder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n    content: \"\",\n    title: \"\",\n  }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/components/Organisms/LoginForm/login-form.service.ts": [
                {
                    "name": "buildForm",
                    "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fb",
                            "type": "FormBuilder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "fb",
                            "type": "FormBuilder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/components/Molecules/BackLink/back-link.component.ts": [
                {
                    "name": "BackLinkInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<\"href\" | \"label\" | string>",
                    "file": "src/app/components/Molecules/BackLink/back-link.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/Organisms/BlogForm/blog-form.service.ts": [
                {
                    "name": "BlogForm",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "BlogValues",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/helpers/storybook/index.ts": [
                {
                    "name": "CreateBlogParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/helpers/storybook/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/components/Molecules/Input/input.component.ts": [
                {
                    "name": "FunctionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/components/Molecules/Input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "SimpleInputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"number\" | \"date\" | \"email\" | \"password\" | \"text\" | \"textarea\"",
                    "file": "src/app/components/Molecules/Input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/components/Organisms/LoginForm/login-form.service.ts": [
                {
                    "name": "LoginForm",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/helpers/result-validator.ts": [
                {
                    "name": "ParsedResult",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/helpers/result-validator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/services/form.service.ts": [
                {
                    "name": "ResultStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type | literal type | literal type",
                    "file": "src/app/services/form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/components/Atoms/Button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonWrapperComponent>",
                    "file": "src/app/components/Atoms/Button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/services/api.service.ts": [
                {
                    "name": "WindowedRequest",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<Record<\"limit\" | \"offset\", number>>",
                    "file": "src/app/services/api.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ArrowIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Arrow/arrow.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Arrow/arrow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArrowIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Box/box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BoxStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Box/box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Box/box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonComponentStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AbstractButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "activeClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "variantClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ArrowIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/DeleteIcon/delete-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/DeleteIcon/delete-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ArrowIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/EditIcon/edit-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/EditIcon/edit-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Error/error.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Error/error.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Error/error.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IntersectionTriggerWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IntersectionStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/IntersectionEventComponent/intersection-event.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IntersectionEventComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageTitleWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/PageTitle/page-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/PageTitle/page-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Spinner/spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpinnerStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Atoms/Spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/BackLink/back-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/BackLink/back-link.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TO_HOMEPAGE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/BackLink/back-link.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "BackLinkInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Blog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "content",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Blog/blog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Blog/blog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteBlogDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteBlogWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/DeleteBlogConfirm/delete-blog.dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteBlogDialogStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponentWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Dialog/dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DialogStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/FormWrapper/ResultStatus/result-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResultStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/FormWrapper/form-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormWrapperComponent",
                "coveragePercent": 9,
                "coverageCount": "2/22",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 7,
                "coverageCount": "2/28",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "FunctionType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/Input/input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SimpleInputType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputWrapperStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/InputWrapper/input-wrapper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/InputWrapper/input-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/SubmitButton/submit-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubmitButtonComponentStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Molecules/SubmitButton/submit-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubmitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlogFormCreate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlogFormEdit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "created_at",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exampleBlog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "successProvider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogFormComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AbstractBlogFormService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CreateBlogFormService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EditBlogFormService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "buildForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockApiService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "BlogForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogForm/blog-form.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "BlogValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlogPreviewAuthorStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlogPreviewNonAuthorStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogPreview/blog-preview.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/BlogPreview/blog-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogPreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "control",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/FormInput/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/FormInput/form-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginWithFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginWithSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockLoginResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginFormService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "buildForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/LoginForm/login-form.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/LoginLogout/login-logout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginLogoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/NavbarLink/navbar-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/navbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/navbar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUTHENTICATED_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NavBar/navbar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAVBAR_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NotFound/not-found.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotFound",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Organisms/NotFound/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/404/404-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogPageWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlogPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "id",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockLocation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Blog/blog-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/CreateBlog/create-blog-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateBlogPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/EditBlog/edit-blog-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateBlogPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Homepage/homepage-previews.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HomepagePreviewService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/Homepage/homepage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomepageComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginPageWithFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginPageWithSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/LoginPage/login-page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "standardProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/LoginPage/login-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/UserBlogs/user-blogs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomepageComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Pages/UserBlogs/user-blogs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserBlogsPreviewService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/BlogPreviews/blog-previews.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogPreviewTemplate",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageWrapperWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/PageWrapper/page-wrapper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageWrapperStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/PageWrapper/page-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageWrapperComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Templates/PageWrapperWithLoading/page-wrapper-with-loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageWrapperWithLoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/is-authenticated.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authenticationStateGuard",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/guards/is-authenticated.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/is-authenticated.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/transfer-state.keys.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ME_DATA_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/form-error-parser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errHasMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/form-error-parser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parseError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/form-error-parser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parseErrors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/result-validator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resultValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/result-validator.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ParsedResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/storybook/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createBlog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/storybook/index.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "CreateBlogParams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/is-author.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "IsAuthorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/parse-error.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ParseErrorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getJWT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "WindowedRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/blog-preview.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BlogPreviewServiceToken",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/form-register.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormRegisterService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AbstractFormService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/services/form.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ResultStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/id.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IdService",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "src/app/services/is-authenticated.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthenticationServiceToken",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/is-authenticated.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockAuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/is-authenticated.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 25,
                "coverageCount": "2/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/location.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocationServiceToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/location.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockLocationService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/location.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocationService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/resolvers/blog.resolver.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "blogResolver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}